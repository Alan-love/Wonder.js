// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Sinon                          = require("wonder-bs-sinon/lib/js/src/sinon.js");
var OptionTool$Wonderjs            = require("../../../../../tool/service/atom/OptionTool.js");
var RenderWorkerStateTool$Wonderjs = require("../../../../../tool/service/state/RenderWorkerStateTool.js");

function _setGPUDetectDataAllowHardwareInstance(sandbox, state) {
  var newrecord = state.slice();
  var init = state[/* gpuDetectRecord */2];
  newrecord[/* gpuDetectRecord */2] = /* record */[
    /* extensionInstancedArrays : Some */[{
        drawElementsInstancedANGLE: Sinon.createEmptyStubWithJsObjSandbox(sandbox),
        vertexAttribDivisorANGLE: Sinon.createEmptyStubWithJsObjSandbox(sandbox)
      }],
    /* precision */init[/* precision */1]
  ];
  return newrecord;
}

function setGPUDetectDataAllowHardwareInstance(sandbox) {
  RenderWorkerStateTool$Wonderjs.setState(_setGPUDetectDataAllowHardwareInstance(sandbox, RenderWorkerStateTool$Wonderjs.createState(/* () */0)));
  return /* () */0;
}

function getExtensionInstancedArrays(state) {
  return OptionTool$Wonderjs.unsafeGet(state[/* gpuDetectRecord */2][/* extensionInstancedArrays */0]);
}

exports._setGPUDetectDataAllowHardwareInstance = _setGPUDetectDataAllowHardwareInstance;
exports.setGPUDetectDataAllowHardwareInstance  = setGPUDetectDataAllowHardwareInstance;
exports.getExtensionInstancedArrays            = getExtensionInstancedArrays;
/* Sinon Not a pure module */
