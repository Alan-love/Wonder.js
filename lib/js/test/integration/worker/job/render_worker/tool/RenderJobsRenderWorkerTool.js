// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List                                                           = require("bs-platform/lib/js/list.js");
var Most                                                           = require("most");
var Curry                                                          = require("bs-platform/lib/js/curry.js");
var Sinon                                                          = require("wonder-bs-sinon/lib/js/src/sinon.js");
var Sinon$1                                                        = require("sinon");
var GlTool$Wonderjs                                                = require("../../../../../tool/gl/GlTool.js");
var MainStateTool$Wonderjs                                         = require("../../../../../tool/service/state/MainStateTool.js");
var WorkerJobTool$Wonderjs                                         = require("../../../../../tool/service/workerJob/WorkerJobTool.js");
var FakeGlWorkerTool$Wonderjs                                      = require("../../../tool/FakeGlWorkerTool.js");
var WorkerWorkerTool$Wonderjs                                      = require("../../../tool/WorkerWorkerTool.js");
var WorkerJobWorkerTool$Wonderjs                                   = require("../../../tool/WorkerJobWorkerTool.js");
var MostRenderWorkerTool$Wonderjs                                  = require("./MostRenderWorkerTool.js");
var CommitRenderWorkerJob$Wonderjs                                 = require("../../../../../../src/job/worker/render/draw/CommitRenderWorkerJob.js");
var RenderWorkerStateTool$Wonderjs                                 = require("../../../../../tool/service/state/RenderWorkerStateTool.js");
var WorkerJobHandleSystem$Wonderjs                                 = require("../../../../../../src/job/worker/WorkerJobHandleSystem.js");
var CreateGlRenderWorkerJob$Wonderjs                               = require("../../../../../../src/job/worker/render/init/CreateGlRenderWorkerJob.js");
var InitStateRenderWorkerJob$Wonderjs                              = require("../../../../../../src/job/worker/render/init/InitStateRenderWorkerJob.js");
var DisposeVboRenderWorkerJob$Wonderjs                             = require("../../../../../../src/job/worker/render/dispose/DisposeVboRenderWorkerJob.js");
var MainInitJobMainWorkerTool$Wonderjs                             = require("../../main_worker/tool/MainInitJobMainWorkerTool.js");
var RenderBasicRenderWorkerJob$Wonderjs                            = require("../../../../../../src/job/worker/render/draw/render_basic/RenderBasicRenderWorkerJob.js");
var SetViewportRenderWorkerJob$Wonderjs                            = require("../../../../../../src/job/worker/render/init/SetViewportRenderWorkerJob.js");
var InitInstanceRenderWorkerJob$Wonderjs                           = require("../../../../../../src/job/worker/render/init/InitInstanceRenderWorkerJob.js");
var SendRenderDataMainWorkerJob$Wonderjs                           = require("../../../../../../src/job/worker/main/loop/SendRenderDataMainWorkerJob.js");
var GetCameraDataRenderWorkerJob$Wonderjs                          = require("../../../../../../src/job/worker/render/draw/GetCameraDataRenderWorkerJob.js");
var InitTransformRenderWorkerJob$Wonderjs                          = require("../../../../../../src/job/worker/render/init/InitTransformRenderWorkerJob.js");
var WorkerInstanceMainWorkerTool$Wonderjs                          = require("../../main_worker/tool/WorkerInstanceMainWorkerTool.js");
var GetSettingDataRenderWorkerJob$Wonderjs                         = require("../../../../../../src/job/worker/render/init/GetSettingDataRenderWorkerJob.js");
var InitPointLightRenderWorkerJob$Wonderjs                         = require("../../../../../../src/job/worker/render/init/InitPointLightRenderWorkerJob.js");
var PregetGLSLDataRenderWorkerJob$Wonderjs                         = require("../../../../../../src/job/worker/render/init/PregetGLSLDataRenderWorkerJob.js");
var GetInstanceDataRenderWorkerJob$Wonderjs                        = require("../../../../../../src/job/worker/render/draw/GetInstanceDataRenderWorkerJob.js");
var GetMaterialDataRenderWorkerJob$Wonderjs                        = require("../../../../../../src/job/worker/render/init/GetMaterialDataRenderWorkerJob.js");
var FrontRenderLightRenderWorkerJob$Wonderjs                       = require("../../../../../../src/job/worker/render/draw/front_render_light/FrontRenderLightRenderWorkerJob.js");
var InitAmbientLightRenderWorkerJob$Wonderjs                       = require("../../../../../../src/job/worker/render/init/InitAmbientLightRenderWorkerJob.js");
var SendInitRenderDataMainWorkerJob$Wonderjs                       = require("../../../../../../src/job/worker/main/init/SendInitRenderDataMainWorkerJob.js");
var GetPointLightDataRenderWorkerJob$Wonderjs                      = require("../../../../../../src/job/worker/render/draw/GetPointLightDataRenderWorkerJob.js");
var InitBasicMaterialRenderWorkerJob$Wonderjs                      = require("../../../../../../src/job/worker/render/init/InitBasicMaterialRenderWorkerJob.js");
var InitLightMaterialRenderWorkerJob$Wonderjs                      = require("../../../../../../src/job/worker/render/init/InitLightMaterialRenderWorkerJob.js");
var InitCustomGeometryRenderWorkerJob$Wonderjs                     = require("../../../../../../src/job/worker/render/init/InitCustomGeometryRenderWorkerJob.js");
var InitDirectionLightRenderWorkerJob$Wonderjs                     = require("../../../../../../src/job/worker/render/init/InitDirectionLightRenderWorkerJob.js");
var GetRenderConfigDataRenderWorkerJob$Wonderjs                    = require("../../../../../../src/job/worker/render/init/GetRenderConfigDataRenderWorkerJob.js");
var DisposeSourceInstanceRenderWorkerJob$Wonderjs                  = require("../../../../../../src/job/worker/render/dispose/DisposeSourceInstanceRenderWorkerJob.js");
var GetDirectionLightDataRenderWorkerJob$Wonderjs                  = require("../../../../../../src/job/worker/render/draw/GetDirectionLightDataRenderWorkerJob.js");
var InitMaterialForRenderRenderWorkerJob$Wonderjs                  = require("../../../../../../src/job/worker/render/draw/InitMaterialForRenderRenderWorkerJob.js");
var SendUniformShaderDataRenderWorkerJob$Wonderjs                  = require("../../../../../../src/job/worker/render/draw/SendUniformShaderDataRenderWorkerJob.js");
var CreateBasicRenderObjectBufferTypeArrayRenderWorkerJob$Wonderjs = require("../../../../../../src/job/worker/render/draw/CreateBasicRenderObjectBufferTypeArrayRenderWorkerJob.js");
var CreateLightRenderObjectBufferTypeArrayRenderWorkerJob$Wonderjs = require("../../../../../../src/job/worker/render/draw/CreateLightRenderObjectBufferTypeArrayRenderWorkerJob.js");

function prepareForUseProgramCase(sandbox, prepareFunc, state) {
  var state$1 = Curry._2(prepareFunc, sandbox, state);
  var createProgram = Sinon.returns(1, Sinon.createEmptyStubWithJsObjSandbox(sandbox));
  var useProgram = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
  var state$2 = FakeGlWorkerTool$Wonderjs.setFakeGl(FakeGlWorkerTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[createProgram], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[useProgram], /* None */0, /* None */0, /* () */0), state$1);
  return /* tuple */[
          state$2,
          1,
          useProgram
        ];
}

function init(completeFunc, state) {
  var initData = {
    data: SendInitRenderDataMainWorkerJob$Wonderjs._buildData("", {
          getContext: (function () {
              return GlTool$Wonderjs.unsafeGetGl(state);
            })
        }, MainStateTool$Wonderjs.getStateData(/* () */0))
  };
  var renderWorkerState = RenderWorkerStateTool$Wonderjs.getState(/* () */0);
  renderWorkerState[/* workerDetectRecord */23] = /* Some */[/* record */[/* isUseWorker : true */1]];
  RenderWorkerStateTool$Wonderjs.setState(renderWorkerState);
  var state$1 = WorkerJobTool$Wonderjs.create(WorkerJobTool$Wonderjs.buildWorkerJobConfig(/* None */0, /* Some */[WorkerJobTool$Wonderjs.buildMainInitPipelinesConfigWithoutCreateWorkerInstanceAndMessage(/* () */0)], /* Some */[WorkerJobTool$Wonderjs.buildMainLoopPipelinesConfigWithoutMessageExceptDisposeMessage(/* () */0)], /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state);
  MainStateTool$Wonderjs.setState(state$1);
  return Most.drain(WorkerJobWorkerTool$Wonderjs.getMainInitJobStream(MainStateTool$Wonderjs.getStateData(/* () */0), /* tuple */[
                    WorkerJobHandleSystem$Wonderjs.createMainInitJobHandleMap,
                    WorkerJobHandleSystem$Wonderjs.getMainInitJobHandle
                  ], MainStateTool$Wonderjs.unsafeGetState(/* () */0))).then((function () {
                return Most.drain(MostRenderWorkerTool$Wonderjs.concatStreamFuncArray(initData, RenderWorkerStateTool$Wonderjs.getStateData(/* () */0), /* array */[
                                  (function (param, param$1) {
                                      return CreateGlRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return SetViewportRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return InitTransformRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return InitStateRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return GetRenderConfigDataRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return GetSettingDataRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return GetMaterialDataRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return PregetGLSLDataRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return InitInstanceRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return InitCustomGeometryRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return InitBasicMaterialRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return InitAmbientLightRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return InitDirectionLightRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return InitPointLightRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    }),
                                  (function (param, param$1) {
                                      return InitLightMaterialRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                                    })
                                ])).then((function () {
                              return Curry._1(completeFunc, MainStateTool$Wonderjs.unsafeGetState(/* () */0));
                            }));
              }));
}

function execMainLoopJobs(sandbox, completeFunc) {
  var state = MainInitJobMainWorkerTool$Wonderjs.prepare(/* () */0);
  var renderWorker = WorkerInstanceMainWorkerTool$Wonderjs.unsafeGetRenderWorker(state);
  var postMessageToRenderWorker = WorkerWorkerTool$Wonderjs.stubPostMessage(sandbox, renderWorker);
  return Most.drain(WorkerJobWorkerTool$Wonderjs.getMainLoopJobStream(MainStateTool$Wonderjs.getStateData(/* () */0), /* tuple */[
                    WorkerJobHandleSystem$Wonderjs.createMainLoopJobHandleMap,
                    WorkerJobHandleSystem$Wonderjs.getMainLoopJobHandle
                  ], state)).then((function () {
                return Curry._1(completeFunc, postMessageToRenderWorker);
              }));
}

function render(postMessageToRenderWorker, completeFunc) {
  MainStateTool$Wonderjs.unsafeGetState(/* () */0);
  var drawData = {
    data: SendRenderDataMainWorkerJob$Wonderjs._buildData("", MainStateTool$Wonderjs.getStateData(/* () */0))
  };
  return Most.drain(MostRenderWorkerTool$Wonderjs.concatStreamFuncArray(drawData, RenderWorkerStateTool$Wonderjs.getStateData(/* () */0), /* array */[
                    (function (param, param$1) {
                        return GetDirectionLightDataRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      }),
                    (function (param, param$1) {
                        return GetPointLightDataRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      }),
                    (function (param, param$1) {
                        return GetInstanceDataRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      }),
                    (function (param, param$1) {
                        return InitMaterialForRenderRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      }),
                    (function (param, param$1) {
                        return CreateBasicRenderObjectBufferTypeArrayRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      }),
                    (function (param, param$1) {
                        return CreateLightRenderObjectBufferTypeArrayRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      }),
                    (function (param, param$1) {
                        return GetCameraDataRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      }),
                    (function (param, param$1) {
                        return SendUniformShaderDataRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      }),
                    (function (param, param$1) {
                        return RenderBasicRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      }),
                    (function (param, param$1) {
                        return FrontRenderLightRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      }),
                    (function (param, param$1) {
                        return CommitRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      })
                  ])).then((function () {
                return Curry._1(completeFunc, postMessageToRenderWorker);
              }));
}

function mainLoopAndRender(completeFunc, _, sandbox, $staropt$star, _$1) {
  var beforeExecRenderRenderWorkerJobsFunc = $staropt$star ? $staropt$star[0] : (function () {
        return /* () */0;
      });
  return execMainLoopJobs(sandbox, (function (postMessageToRenderWorker) {
                Curry._1(beforeExecRenderRenderWorkerJobsFunc, postMessageToRenderWorker);
                return render(postMessageToRenderWorker, completeFunc);
              }));
}

function dispose(postMessageToRenderWorker, completeFunc) {
  var args = List.hd(Sinon.getSpecificArg(0, Sinon.withOneArg({
                operateType: "DISPOSE",
                boxGeometryNeedDisposeVboBufferArr: Sinon$1.match.any,
                customGeometryNeedDisposeVboBufferArr: Sinon$1.match.any,
                sourceInstanceNeedDisposeVboBufferArr: Sinon$1.match.any
              }, postMessageToRenderWorker)));
  var disposeData = {
    data: args
  };
  return Most.drain(MostRenderWorkerTool$Wonderjs.concatStreamFuncArray(disposeData, RenderWorkerStateTool$Wonderjs.getStateData(/* () */0), /* array */[
                    (function (param, param$1) {
                        return DisposeVboRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      }),
                    (function (param, param$1) {
                        return DisposeSourceInstanceRenderWorkerJob$Wonderjs.execJob(/* None */0, param, param$1);
                      })
                  ])).then((function () {
                return Curry._1(completeFunc, postMessageToRenderWorker);
              }));
}

function mainLoopAndDispose(completeFunc, _, sandbox, $staropt$star, _$1) {
  var beforeExecRenderRenderWorkerJobsFunc = $staropt$star ? $staropt$star[0] : (function () {
        return /* () */0;
      });
  return execMainLoopJobs(sandbox, (function (postMessageToRenderWorker) {
                Curry._1(beforeExecRenderRenderWorkerJobsFunc, postMessageToRenderWorker);
                return dispose(postMessageToRenderWorker, completeFunc);
              }));
}

function initAndMainLoopAndRender(completeFunc, state, sandbox, $staropt$star, _) {
  var beforeExecRenderRenderWorkerJobsFunc = $staropt$star ? $staropt$star[0] : (function () {
        return /* () */0;
      });
  return init((function (state) {
                return mainLoopAndRender(completeFunc, state, sandbox, /* Some */[beforeExecRenderRenderWorkerJobsFunc], /* () */0);
              }), state);
}

exports.prepareForUseProgramCase = prepareForUseProgramCase;
exports.init                     = init;
exports.execMainLoopJobs         = execMainLoopJobs;
exports.render                   = render;
exports.mainLoopAndRender        = mainLoopAndRender;
exports.dispose                  = dispose;
exports.mainLoopAndDispose       = mainLoopAndDispose;
exports.initAndMainLoopAndRender = initAndMainLoopAndRender;
/* most Not a pure module */
