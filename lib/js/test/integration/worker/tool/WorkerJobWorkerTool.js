// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Most                           = require("most");
var Curry                          = require("bs-platform/lib/js/curry.js");
var CamlinternalOO                 = require("bs-platform/lib/js/camlinternalOO.js");
var MainStateTool$Wonderjs         = require("../../../tool/service/state/MainStateTool.js");
var WorkerJobMainService$Wonderjs  = require("../../../../src/service/state/main/job/worker/WorkerJobMainService.js");
var RenderWorkerStateTool$Wonderjs = require("../../../tool/service/state/RenderWorkerStateTool.js");

function execMainWorkerJob(execJobFunc, completeFunc, $staropt$star, _) {
  var flag = $staropt$star ? $staropt$star[0] : /* Some */[/* array */[""]];
  return Most.drain(Curry._2(execJobFunc, flag, MainStateTool$Wonderjs.getStateData(/* () */0))).then((function () {
                return Curry._1(completeFunc, MainStateTool$Wonderjs.unsafeGetState(/* () */0));
              }));
}

var class_tables = [
  0,
  0,
  0
];

function execRenderWorkerJob(execJobFunc, completeFunc, $staropt$star, $staropt$star$1, _) {
  var e;
  if ($staropt$star) {
    e = $staropt$star[0];
  } else {
    if (!class_tables[0]) {
      var $$class = CamlinternalOO.create_table(0);
      var env_init = function () {
        return CamlinternalOO.create_object_opt(0, $$class);
      };
      CamlinternalOO.init_class($$class);
      class_tables[0] = env_init;
    }
    e = /* Some */[{
        data: Curry._1(class_tables[0], 0)
      }];
  }
  var flag = $staropt$star$1 ? $staropt$star$1[0] : /* Some */[/* array */[""]];
  return Most.drain(Curry._3(execJobFunc, flag, e, RenderWorkerStateTool$Wonderjs.getStateData(/* () */0))).then((function () {
                return Curry._1(completeFunc, RenderWorkerStateTool$Wonderjs.unsafeGetState(/* () */0));
              }));
}

var getMainInitJobStream = WorkerJobMainService$Wonderjs.getMainInitJobStream;

var getMainLoopJobStream = WorkerJobMainService$Wonderjs.getMainLoopJobStream;

var getRenderWorkerJobStreamArr = WorkerJobMainService$Wonderjs.getRenderWorkerJobStreamArr;

exports.getMainInitJobStream        = getMainInitJobStream;
exports.getMainLoopJobStream        = getMainLoopJobStream;
exports.getRenderWorkerJobStreamArr = getRenderWorkerJobStreamArr;
exports.execMainWorkerJob           = execMainWorkerJob;
exports.execRenderWorkerJob         = execRenderWorkerJob;
/* most Not a pure module */
