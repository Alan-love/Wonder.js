// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Sinon = require("wonder-bs-sinon/lib/js/src/sinon.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var FakeGlTool$Wonderjs = require("../../../tool/gl/FakeGlTool.js");
var MainStateTool$Wonderjs = require("../../../tool/service/state/MainStateTool.js");
var DeviceManagerService$Wonderjs = require("../../../../src/service/record/all/device/DeviceManagerService.js");
var RenderWorkerStateTool$Wonderjs = require("../../../tool/service/state/RenderWorkerStateTool.js");

function buildFakeGl(sandbox, $staropt$star, $staropt$star$1, $staropt$star$2, $staropt$star$3, $staropt$star$4, $staropt$star$5, $staropt$star$6, $staropt$star$7, $staropt$star$8, $staropt$star$9, $staropt$star$10, $staropt$star$11, $staropt$star$12, $staropt$star$13, $staropt$star$14, $staropt$star$15, $staropt$star$16, $staropt$star$17, $staropt$star$18, $staropt$star$19, $staropt$star$20, $staropt$star$21, $staropt$star$22, $staropt$star$23, $staropt$star$24, $staropt$star$25, $staropt$star$26, $staropt$star$27, $staropt$star$28, $staropt$star$29, $staropt$star$30, $staropt$star$31, $staropt$star$32, $staropt$star$33, $staropt$star$34, $staropt$star$35, $staropt$star$36, $staropt$star$37, $staropt$star$38, $staropt$star$39, $staropt$star$40, $staropt$star$41, $staropt$star$42, $staropt$star$43, $staropt$star$44, $staropt$star$45, $staropt$star$46, $staropt$star$47, $staropt$star$48, $staropt$star$49, $staropt$star$50, $staropt$star$51, $staropt$star$52, $staropt$star$53, $staropt$star$54, $staropt$star$55, $staropt$star$56, $staropt$star$57, $staropt$star$58, $staropt$star$59, $staropt$star$60, $staropt$star$61, $staropt$star$62, $staropt$star$63, $staropt$star$64, $staropt$star$65, $staropt$star$66, $staropt$star$67, $staropt$star$68, $staropt$star$69, $staropt$star$70, $staropt$star$71, $staropt$star$72, $staropt$star$73, $staropt$star$74, $staropt$star$75, $staropt$star$76, $staropt$star$77, $staropt$star$78, $staropt$star$79, $staropt$star$80, $staropt$star$81, $staropt$star$82, $staropt$star$83, $staropt$star$84, $staropt$star$85, $staropt$star$86, $staropt$star$87, $staropt$star$88, $staropt$star$89, $staropt$star$90, $staropt$star$91, $staropt$star$92, $staropt$star$93, $staropt$star$94, $staropt$star$95, $staropt$star$96, $staropt$star$97, $staropt$star$98, _) {
  var textureWrapS = $staropt$star ? $staropt$star[0] : -1;
  var textureWrapT = $staropt$star$1 ? $staropt$star$1[0] : -1;
  var textureMagFilter = $staropt$star$2 ? $staropt$star$2[0] : -1;
  var textureMinFilter = $staropt$star$3 ? $staropt$star$3[0] : -1;
  var repeat = $staropt$star$4 ? $staropt$star$4[0] : -1;
  var mirroredRepeat = $staropt$star$5 ? $staropt$star$5[0] : -1;
  var clampToEdge = $staropt$star$6 ? $staropt$star$6[0] : -1;
  var nearest = $staropt$star$7 ? $staropt$star$7[0] : -1;
  var nearestMipmapNearest = $staropt$star$8 ? $staropt$star$8[0] : -1;
  var nearestMipmapLinear = $staropt$star$9 ? $staropt$star$9[0] : -1;
  var linear = $staropt$star$10 ? $staropt$star$10[0] : -1;
  var linearMipmapNearest = $staropt$star$11 ? $staropt$star$11[0] : -1;
  var linearMipmapLinear = $staropt$star$12 ? $staropt$star$12[0] : -1;
  var rgb = $staropt$star$13 ? $staropt$star$13[0] : -1;
  var rgba = $staropt$star$14 ? $staropt$star$14[0] : -1;
  var alpha = $staropt$star$15 ? $staropt$star$15[0] : -1;
  var luminance = $staropt$star$16 ? $staropt$star$16[0] : -1;
  var luminanceAlpha = $staropt$star$17 ? $staropt$star$17[0] : -1;
  var rgbS3tcDxt1 = $staropt$star$18 ? $staropt$star$18[0] : -1;
  var rgbaS3tcDxt1 = $staropt$star$19 ? $staropt$star$19[0] : -1;
  var rgbaS3tcDxt3 = $staropt$star$20 ? $staropt$star$20[0] : -1;
  var rgbaS3tcDxt5 = $staropt$star$21 ? $staropt$star$21[0] : -1;
  var unsignedByte = $staropt$star$22 ? $staropt$star$22[0] : -1;
  var unsignedShort565 = $staropt$star$23 ? $staropt$star$23[0] : -1;
  var unsignedShort4444 = $staropt$star$24 ? $staropt$star$24[0] : -1;
  var unsignedShort5551 = $staropt$star$25 ? $staropt$star$25[0] : -1;
  var unpackFlipYWebgl = $staropt$star$26 ? $staropt$star$26[0] : -1;
  var maxTextureImageUnits = $staropt$star$27 ? $staropt$star$27[0] : -1;
  var texture2D = $staropt$star$28 ? $staropt$star$28[0] : -1;
  var textureUnit0 = $staropt$star$29 ? $staropt$star$29[0] : -1;
  var compile_status = $staropt$star$30 ? $staropt$star$30[0] : -1;
  var link_status = $staropt$star$31 ? $staropt$star$31[0] : -1;
  var vertex_shader = $staropt$star$32 ? $staropt$star$32[0] : -1;
  var fragment_shader = $staropt$star$33 ? $staropt$star$33[0] : -1;
  var array_buffer = $staropt$star$34 ? $staropt$star$34[0] : -1;
  var element_array_buffer = $staropt$star$35 ? $staropt$star$35[0] : -1;
  var $$float = $staropt$star$36 ? $staropt$star$36[0] : -1;
  var static_draw = $staropt$star$37 ? $staropt$star$37[0] : -1;
  var dynamic_draw = $staropt$star$38 ? $staropt$star$38[0] : -1;
  var triangles = $staropt$star$39 ? $staropt$star$39[0] : -1;
  var unsigned_short = $staropt$star$40 ? $staropt$star$40[0] : -1;
  var unsigned_int = $staropt$star$41 ? $staropt$star$41[0] : -1;
  var color_buffer_bit = $staropt$star$42 ? $staropt$star$42[0] : -1;
  var depth_buffer_bit = $staropt$star$43 ? $staropt$star$43[0] : -1;
  var stencil_buffer_bit = $staropt$star$44 ? $staropt$star$44[0] : -1;
  var back = $staropt$star$45 ? $staropt$star$45[0] : -1;
  var front = $staropt$star$46 ? $staropt$star$46[0] : -2;
  var frontAndBack = $staropt$star$47 ? $staropt$star$47[0] : -2;
  var getCullFace = $staropt$star$48 ? $staropt$star$48[0] : -3;
  var getDepthTest = $staropt$star$49 ? $staropt$star$49[0] : -4;
  var pixelStorei = $staropt$star$50 ? $staropt$star$50[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var texImage2D = $staropt$star$51 ? $staropt$star$51[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var texParameteri = $staropt$star$52 ? $staropt$star$52[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var createTexture = $staropt$star$53 ? $staropt$star$53[0] : Sinon.returns(99, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var getParameter = $staropt$star$54 ? $staropt$star$54[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var activeTexture = $staropt$star$55 ? $staropt$star$55[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var bindTexture = $staropt$star$56 ? $staropt$star$56[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var shaderSource = $staropt$star$57 ? $staropt$star$57[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var enable = $staropt$star$58 ? $staropt$star$58[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var disable = $staropt$star$59 ? $staropt$star$59[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var cullFace = $staropt$star$60 ? $staropt$star$60[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var createProgram = $staropt$star$61 ? $staropt$star$61[0] : Sinon.returns(100, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var createShader = $staropt$star$62 ? $staropt$star$62[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var compileShader = $staropt$star$63 ? $staropt$star$63[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var getVertexAttribArrayEnabled = $staropt$star$64 ? $staropt$star$64[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var linkProgram = $staropt$star$65 ? $staropt$star$65[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var getShaderParameter = $staropt$star$66 ? $staropt$star$66[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var getProgramParameter = $staropt$star$67 ? $staropt$star$67[0] : Sinon.returns(true, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var getShaderInfoLog = $staropt$star$68 ? $staropt$star$68[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var getProgramInfoLog = $staropt$star$69 ? $staropt$star$69[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var getShaderPrecisionFormat = $staropt$star$70 ? $staropt$star$70[0] : Sinon.returns({
          precision: 1
        }, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var getExtension = $staropt$star$71 ? $staropt$star$71[0] : Sinon.returns(0, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var attachShader = $staropt$star$72 ? $staropt$star$72[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var bindAttribLocation = $staropt$star$73 ? $staropt$star$73[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var deleteShader = $staropt$star$74 ? $staropt$star$74[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var deleteBuffer = $staropt$star$75 ? $staropt$star$75[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var getAttribLocation = $staropt$star$76 ? $staropt$star$76[0] : Sinon.returns(0, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var getUniformLocation = $staropt$star$77 ? $staropt$star$77[0] : Sinon.returns(0, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var bindBuffer = $staropt$star$78 ? $staropt$star$78[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var resetBuffer = $staropt$star$79 ? $staropt$star$79[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var createBuffer = $staropt$star$80 ? $staropt$star$80[0] : Sinon.returns(0, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var bufferData = $staropt$star$81 ? $staropt$star$81[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var bufferSubData = $staropt$star$82 ? $staropt$star$82[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var vertexAttribPointer = $staropt$star$83 ? $staropt$star$83[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var enableVertexAttribArray = $staropt$star$84 ? $staropt$star$84[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var uniformMatrix3fv = $staropt$star$85 ? $staropt$star$85[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var uniformMatrix4fv = $staropt$star$86 ? $staropt$star$86[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var uniform1i = $staropt$star$87 ? $staropt$star$87[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var uniform1f = $staropt$star$88 ? $staropt$star$88[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var uniform3f = $staropt$star$89 ? $staropt$star$89[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var drawElements = $staropt$star$90 ? $staropt$star$90[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var drawArray = $staropt$star$91 ? $staropt$star$91[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var viewport = $staropt$star$92 ? $staropt$star$92[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var clearColor = $staropt$star$93 ? $staropt$star$93[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var clear = $staropt$star$94 ? $staropt$star$94[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var colorMask = $staropt$star$95 ? $staropt$star$95[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var useProgram = $staropt$star$96 ? $staropt$star$96[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var disableVertexAttribArray = $staropt$star$97 ? $staropt$star$97[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var commit = $staropt$star$98 ? $staropt$star$98[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  return {
          TEXTURE_WRAP_S: textureWrapS,
          TEXTURE_WRAP_T: textureWrapT,
          TEXTURE_MAG_FILTER: textureMagFilter,
          TEXTURE_MIN_FILTER: textureMinFilter,
          REAPEAT: repeat,
          MIRRORED_REPEAT: mirroredRepeat,
          CLAMP_TO_EDGE: clampToEdge,
          NEAREST: nearest,
          NEAREST_MIPMAP_NEAREST: nearestMipmapNearest,
          NEAREST_MIPMAP_LINEAR: nearestMipmapLinear,
          LINEAR: linear,
          LINEAR_MIPMAP_NEAREST: linearMipmapNearest,
          LINEAR_MIPMAP_LINEAR: linearMipmapLinear,
          RGB: rgb,
          RGBA: rgba,
          ALPHA: alpha,
          LUMINANCE: luminance,
          LUMINANCE_ALPHA: luminanceAlpha,
          RGB_S3TC_DXT1: rgbS3tcDxt1,
          RGBA_S3TC_DXT1: rgbaS3tcDxt1,
          RGBA_S3TC_DXT3: rgbaS3tcDxt3,
          RGBA_S3TC_DXT5: rgbaS3tcDxt5,
          UNSIGNED_BYTE: unsignedByte,
          UNSIGNED_SHORT_5_6_5: unsignedShort565,
          UNSIGNED_SHORT_4_4_4_4: unsignedShort4444,
          UNSIGNED_SHORT_5_5_5_1: unsignedShort5551,
          UNPACK_FLIP_Y_WEBGL: unpackFlipYWebgl,
          MAX_TEXTURE_IMAGE_UNITS: maxTextureImageUnits,
          TEXTURE_2D: texture2D,
          TEXTURE0: textureUnit0,
          COMPILE_STATUS: compile_status,
          LINK_STATUS: link_status,
          VERTEX_SHADER: vertex_shader,
          FRAGMENT_SHADER: fragment_shader,
          ARRAY_BUFFER: array_buffer,
          ELEMENT_ARRAY_BUFFER: element_array_buffer,
          FLOAT: $$float,
          STATIC_DRAW: static_draw,
          DYNAMIC_DRAW: dynamic_draw,
          TRIANGLES: triangles,
          UNSIGNED_INT: unsigned_int,
          UNSIGNED_SHORT: unsigned_short,
          COLOR_BUFFER_BIT: color_buffer_bit,
          DEPTH_BUFFER_BIT: depth_buffer_bit,
          STENCIL_BUFFER_BIT: stencil_buffer_bit,
          pixelStorei: pixelStorei,
          texImage2D: texImage2D,
          texParameteri: texParameteri,
          createTexture: createTexture,
          getParameter: getParameter,
          activeTexture: activeTexture,
          bindTexture: bindTexture,
          VERTEX_ATTRIB_ARRAY_ENABLED: getVertexAttribArrayEnabled,
          BACK: back,
          FRONT: front,
          FRONT_AND_BACK: frontAndBack,
          DEPTH_TEST: getDepthTest,
          CULL_FACE: getCullFace,
          cullFace: cullFace,
          enable: enable,
          disable: disable,
          linkProgram: linkProgram,
          getShaderParameter: getShaderParameter,
          getProgramParameter: getProgramParameter,
          getShaderInfoLog: getShaderInfoLog,
          getProgramInfoLog: getProgramInfoLog,
          getShaderPrecisionFormat: getShaderPrecisionFormat,
          getExtension: getExtension,
          attachShader: attachShader,
          bindAttribLocation: bindAttribLocation,
          deleteShader: deleteShader,
          deleteBuffer: deleteBuffer,
          getAttribLocation: getAttribLocation,
          getUniformLocation: getUniformLocation,
          bindBuffer: bindBuffer,
          resetBuffer: resetBuffer,
          createBuffer: createBuffer,
          bufferData: bufferData,
          bufferSubData: bufferSubData,
          vertexAttribPointer: vertexAttribPointer,
          enableVertexAttribArray: enableVertexAttribArray,
          uniformMatrix3fv: uniformMatrix3fv,
          uniformMatrix4fv: uniformMatrix4fv,
          uniform1i: uniform1i,
          uniform1f: uniform1f,
          uniform3f: uniform3f,
          drawElements: drawElements,
          drawArray: drawArray,
          viewport: viewport,
          clearColor: clearColor,
          clear: clear,
          colorMask: colorMask,
          useProgram: useProgram,
          disableVertexAttribArray: disableVertexAttribArray,
          shaderSource: shaderSource,
          createProgram: createProgram,
          createShader: createShader,
          compileShader: compileShader,
          commit: commit
        };
}

function setFakeGl(fakeGlObj, state) {
  return MainStateTool$Wonderjs.setState(FakeGlTool$Wonderjs.setFakeGl(fakeGlObj, state));
}

function setFakeGlToRenderWorkerState(fakeGlObj, state) {
  var newrecord = Caml_array.caml_array_dup(state);
  return RenderWorkerStateTool$Wonderjs.setState((newrecord[/* deviceManagerRecord */3] = DeviceManagerService$Wonderjs.setGl(fakeGlObj, state[/* deviceManagerRecord */3]), newrecord));
}

exports.buildFakeGl = buildFakeGl;
exports.setFakeGl = setFakeGl;
exports.setFakeGlToRenderWorkerState = setFakeGlToRenderWorkerState;
/* Sinon Not a pure module */
