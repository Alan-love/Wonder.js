// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Sinon = require("wonder-bs-sinon/lib/js/src/sinon.js");
var Sinon$1 = require("sinon");
var Wonder_jest = require("wonder-bs-jest/lib/js/src/wonder_jest.js");
var FakeGlTool$Wonderjs = require("../../../../../../tool/gl/FakeGlTool.js");
var SettingTool$Wonderjs = require("../../../../../../tool/service/setting/SettingTool.js");
var DirectorTool$Wonderjs = require("../../../../../../tool/core/DirectorTool.js");
var InstanceTool$Wonderjs = require("../../../../../../tool/service/instance/InstanceTool.js");
var GameObjectAPI$Wonderjs = require("../../../../../../../src/api/GameObjectAPI.js");
var MainStateTool$Wonderjs = require("../../../../../../tool/service/state/MainStateTool.js");
var GLSLSenderTool$Wonderjs = require("../../../../../../tool/service/sender/GLSLSenderTool.js");
var RenderJobsTool$Wonderjs = require("../../../../../../tool/job/no_worker/loop/RenderJobsTool.js");
var BoxGeometryTool$Wonderjs = require("../../../../../../tool/service/geometry/BoxGeometryTool.js");
var BasicMaterialAPI$Wonderjs = require("../../../../../../../src/api/material/BasicMaterialAPI.js");
var FakeGlWorkerTool$Wonderjs = require("../../../../../worker/tool/FakeGlWorkerTool.js");
var LoopRenderJobTool$Wonderjs = require("../../../../../../tool/job/no_worker/loop/LoopRenderJobTool.js");
var SourceInstanceAPI$Wonderjs = require("../../../../../../../src/api/SourceInstanceAPI.js");
var CustomGeometryTool$Wonderjs = require("../../../../../../tool/service/geometry/CustomGeometryTool.js");
var InstanceBufferTool$Wonderjs = require("../../../../../../tool/service/vboBuffer/InstanceBufferTool.js");
var BasicSourceTextureAPI$Wonderjs = require("../../../../../../../src/api/texture/BasicSourceTextureAPI.js");
var BasicSourceTextureTool$Wonderjs = require("../../../../../../tool/service/texture/BasicSourceTextureTool.js");
var RenderBasicMaterialMapTool$Wonderjs = require("../../tool/RenderBasicMaterialMapTool.js");
var RenderHardwareInstanceTool$Wonderjs = require("../../../../../../tool/render/instance/RenderHardwareInstanceTool.js");
var RenderBasicHardwareInstanceTool$Wonderjs = require("../../../../../../tool/render/instance/RenderBasicHardwareInstanceTool.js");
var RenderBasicHardwareInstanceForNoWorkerAndWorkerJobTool$Wonderjs = require("../../../../../tool/job/RenderBasicHardwareInstanceForNoWorkerAndWorkerJobTool.js");

describe("test render basic hardware instance", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var state = [MainStateTool$Wonderjs.createState(/* () */0)];
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                state[0] = RenderJobsTool$Wonderjs.initWithJobConfigAndBufferConfig(sandbox, LoopRenderJobTool$Wonderjs.buildNoWorkerJobConfig(/* () */0), SettingTool$Wonderjs.buildBufferConfigStr(/* Some */[300], /* None */0, /* Some */[500], /* Some */[50], /* Some */[50], /* None */0, /* None */0, /* None */0, /* Some */[3], /* Some */[100], /* () */0));
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        describe("use program", (function () {
                return RenderHardwareInstanceTool$Wonderjs.testProgram(sandbox, RenderBasicHardwareInstanceTool$Wonderjs.prepare, state);
              }));
        describe("send attribute data", (function () {
                describe("send sourceInstance gameObject's a_position", (function () {
                        return RenderHardwareInstanceTool$Wonderjs.testAttachBufferToAttribute(sandbox, /* tuple */[
                                    "a_position",
                                    0,
                                    3
                                  ], RenderBasicHardwareInstanceTool$Wonderjs.prepare, state);
                      }));
                return /* () */0;
              }));
        describe("send uniform data", (function () {
                RenderHardwareInstanceTool$Wonderjs.testSendShaderUniformData(sandbox, /* tuple */[
                      RenderBasicHardwareInstanceTool$Wonderjs.prepare,
                      RenderBasicHardwareInstanceTool$Wonderjs.createSourceInstanceGameObject
                    ], state);
                return GLSLSenderTool$Wonderjs.JudgeSendUniformData[/* testSendVector3 */4](sandbox, "u_color", (function (_, param, _$1, state) {
                              return BasicMaterialAPI$Wonderjs.setBasicMaterialColor(param[1], /* array */[
                                          0,
                                          1,
                                          0.2
                                        ], state);
                            }), /* :: */[
                            0,
                            /* :: */[
                              1,
                              /* :: */[
                                0.20000000298023224,
                                /* [] */0
                              ]
                            ]
                          ], /* None */0, /* None */0, /* () */0);
              }));
        describe("bind and update sourceInstance's gameObject's map", (function () {
                Wonder_jest.test("bind map", (function () {
                        var match = RenderBasicHardwareInstanceTool$Wonderjs.prepare(sandbox, state[0]);
                        var state$1 = match[0];
                        var material = GameObjectAPI$Wonderjs.unsafeGetGameObjectBasicMaterialComponent(match[1], state$1);
                        var match$1 = BasicSourceTextureAPI$Wonderjs.createBasicSourceTexture(state$1);
                        var state$2 = BasicMaterialAPI$Wonderjs.setBasicMaterialMap(material, match$1[1], match$1[0]);
                        return RenderBasicMaterialMapTool$Wonderjs.testBindMap(sandbox, state$2);
                      }));
                return Wonder_jest.test("update map", (function () {
                              var match = RenderBasicHardwareInstanceTool$Wonderjs.prepare(sandbox, state[0]);
                              var state$1 = match[0];
                              var material = GameObjectAPI$Wonderjs.unsafeGetGameObjectBasicMaterialComponent(match[1], state$1);
                              var match$1 = BasicSourceTextureAPI$Wonderjs.createBasicSourceTexture(state$1);
                              var map = match$1[1];
                              var source = BasicSourceTextureTool$Wonderjs.buildSource(2, 4);
                              var state$2 = BasicSourceTextureAPI$Wonderjs.setBasicSourceTextureSource(map, source, match$1[0]);
                              var state$3 = BasicMaterialAPI$Wonderjs.setBasicMaterialMap(material, map, state$2);
                              return RenderBasicMaterialMapTool$Wonderjs.testUpdateMap(sandbox, state$3);
                            }));
              }));
        describe("send instance data", (function () {
                describe("create instance buffer when first send", (function () {
                        Wonder_jest.test("test create buffer", (function () {
                                var match = RenderBasicHardwareInstanceTool$Wonderjs.prepare(sandbox, state[0]);
                                var createBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[createBuffer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                DirectorTool$Wonderjs.runWithDefaultTime(RenderJobsTool$Wonderjs.init(state$1));
                                return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(createBuffer)), 3);
                              }));
                        return Wonder_jest.test("test not create buffer when second call", (function () {
                                      var match = RenderBasicHardwareInstanceTool$Wonderjs.prepare(sandbox, state[0]);
                                      var createBuffer = Sinon.returns(1, Sinon.createEmptyStubWithJsObjSandbox(sandbox));
                                      var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[createBuffer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                      var state$2 = DirectorTool$Wonderjs.runWithDefaultTime(RenderJobsTool$Wonderjs.init(state$1));
                                      DirectorTool$Wonderjs.runWithDefaultTime(state$2);
                                      return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(createBuffer)), 3);
                                    }));
                      }));
                describe("set instance buffer's capacity", (function () {
                        describe("contract check", (function () {
                                return Wonder_jest.test("capacity should be a multiplier of 4", (function () {
                                              return Wonder_jest.Expect[/* toThrowMessage */20]("capacity should be a multiplier of 4", Wonder_jest.Expect[/* expect */0]((function () {
                                                                return InstanceBufferTool$Wonderjs.createMatrixFloat32Array(3);
                                                              })));
                                            }));
                              }));
                        describe("if current capacity < target capacity", (function () {
                                var _prepare = function (sandbox, state) {
                                  var match = RenderBasicHardwareInstanceTool$Wonderjs.prepare(sandbox, state);
                                  var match$1 = match[2];
                                  var sourceInstance = match$1[3];
                                  var state$1 = match[0];
                                  for(var _for = 0; _for <= 62; ++_for){
                                    SourceInstanceAPI$Wonderjs.createObjectInstanceGameObject(sourceInstance, state$1);
                                  }
                                  return /* tuple */[
                                          state$1,
                                          match[1],
                                          sourceInstance,
                                          match$1[4]
                                        ];
                                };
                                describe("delete old instance buffer", (function () {
                                        var _prepare$1 = function (sandbox, state) {
                                          var match = _prepare(sandbox, state[0]);
                                          var createBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                          Sinon.returns(1, Sinon.onCall(2, createBuffer));
                                          Sinon.returns(2, Sinon.onCall(3, createBuffer));
                                          var deleteBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                          return /* tuple */[
                                                  match[0],
                                                  1,
                                                  2,
                                                  createBuffer,
                                                  deleteBuffer
                                                ];
                                        };
                                        Wonder_jest.test("test delete", (function () {
                                                var match = _prepare$1(sandbox, state);
                                                var deleteBuffer = match[4];
                                                var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[deleteBuffer], /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[match[3]], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                                DirectorTool$Wonderjs.runWithDefaultTime(RenderJobsTool$Wonderjs.init(state$1));
                                                return Sinon.toCalledWith(/* array */[match[1]], Wonder_jest.Expect[/* expect */0](deleteBuffer));
                                              }));
                                        return Wonder_jest.test("not bind deleted buffer", (function () {
                                                      var match = _prepare$1(sandbox, state);
                                                      var bindBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                                      var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[match[4]], /* None */0, /* None */0, /* Some */[bindBuffer], /* None */0, /* Some */[match[3]], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                                      DirectorTool$Wonderjs.runWithDefaultTime(RenderJobsTool$Wonderjs.init(state$1));
                                                      return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(Sinon.withTwoArgs(Sinon$1.match.any, match[1], bindBuffer))), 1);
                                                    }));
                                      }));
                                Wonder_jest.test("create new one", (function () {
                                        var match = _prepare(sandbox, state[0]);
                                        var createBuffer = Sinon.returns(1, Sinon.createEmptyStubWithJsObjSandbox(sandbox));
                                        var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[createBuffer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                        DirectorTool$Wonderjs.runWithDefaultTime(RenderJobsTool$Wonderjs.init(state$1));
                                        return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(createBuffer)), 4);
                                      }));
                                Wonder_jest.test("bufferData with increased capacity and dynamic draw", (function () {
                                        var match = _prepare(sandbox, state[0]);
                                        var bufferData = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                        var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* None */0, /* None */0, /* Some */[2], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[bufferData], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                        DirectorTool$Wonderjs.runWithDefaultTime(RenderJobsTool$Wonderjs.init(state$1));
                                        return Sinon.toCalledOnce(Wonder_jest.Expect[/* expect */0](Sinon.withThreeArgs(1, 8192, 2, bufferData)));
                                      }));
                                describe("fix bug", (function () {
                                        describe("test in the next render(if current capacity >= target capacity)", (function () {
                                                Wonder_jest.test("should use the instance buffer created in the previous render", (function () {
                                                        var match = _prepare(sandbox, state[0]);
                                                        var createBuffer = Sinon.returns(1, Sinon.createEmptyStubWithJsObjSandbox(sandbox));
                                                        var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[createBuffer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                                        var state$2 = RenderJobsTool$Wonderjs.init(state$1);
                                                        var state$3 = DirectorTool$Wonderjs.runWithDefaultTime(state$2);
                                                        return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](InstanceBufferTool$Wonderjs.getOrCreateBuffer(match[2], InstanceBufferTool$Wonderjs.getDefaultCapacity(/* () */0), state$3)), 1);
                                                      }));
                                                return Wonder_jest.test("shouldn't create instance buffer", (function () {
                                                              var match = _prepare(sandbox, state[0]);
                                                              var createBuffer = Sinon.returns(1, Sinon.createEmptyStubWithJsObjSandbox(sandbox));
                                                              var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[createBuffer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                                              var state$2 = RenderJobsTool$Wonderjs.init(state$1);
                                                              var state$3 = DirectorTool$Wonderjs.runWithDefaultTime(state$2);
                                                              var callCount = Sinon.getCallCount(createBuffer);
                                                              DirectorTool$Wonderjs.runWithDefaultTime(state$3);
                                                              return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(createBuffer)), callCount);
                                                            }));
                                              }));
                                        return /* () */0;
                                      }));
                                return /* () */0;
                              }));
                        return /* () */0;
                      }));
                describe("send modelMatrix data", (function () {
                        describe("send sourceInstance gameObject's and objectInstanceGameObject gameObjects' model matrices", (function () {
                                var _prepare = function (sandbox, state) {
                                  var match = RenderBasicHardwareInstanceTool$Wonderjs.prepare(sandbox, state);
                                  var match$1 = match[2];
                                  return /* tuple */[
                                          match[0],
                                          match[1],
                                          match$1[3],
                                          match$1[4]
                                        ];
                                };
                                return Wonder_jest.test("buffer sub data", (function () {
                                              var match = RenderBasicHardwareInstanceForNoWorkerAndWorkerJobTool$Wonderjs.prepareForBufferSubDataCase(sandbox, _prepare, state);
                                              var bufferSubData = match[3];
                                              var array_buffer = match[2];
                                              var match$1 = match[1];
                                              var state$1 = FakeGlWorkerTool$Wonderjs.setFakeGl(FakeGlWorkerTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[array_buffer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[bufferSubData], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                              DirectorTool$Wonderjs.runWithDefaultTime(RenderJobsTool$Wonderjs.init(state$1));
                                              return RenderBasicHardwareInstanceForNoWorkerAndWorkerJobTool$Wonderjs.testForBufferSubDataCase(sandbox, /* tuple */[
                                                          match$1[0],
                                                          match$1[1]
                                                        ], array_buffer, bufferSubData, MainStateTool$Wonderjs.unsafeGetState(/* () */0));
                                            }));
                              }));
                        describe("handle instance data position", (function () {
                                var _prepareForHandleInstanceData = function (sandbox, state) {
                                  var match = RenderBasicHardwareInstanceTool$Wonderjs.prepare(sandbox, state[0]);
                                  return RenderBasicHardwareInstanceForNoWorkerAndWorkerJobTool$Wonderjs.prepareGetAttribLocationForHandleInstanceData(sandbox, match[0]);
                                };
                                describe("vertexAttribPointer instance data", (function () {
                                        Wonder_jest.test("test first data", (function () {
                                                var match = RenderBasicHardwareInstanceTool$Wonderjs.prepareForTestVertexAttribPointer(sandbox, _prepareForHandleInstanceData, state);
                                                return Sinon.toCalledWith(/* array */[
                                                            match[2][0],
                                                            4,
                                                            match[1],
                                                            false,
                                                            64,
                                                            0
                                                          ], Wonder_jest.Expect[/* expect */0](match[3]));
                                              }));
                                        Wonder_jest.test("test second data", (function () {
                                                var match = RenderBasicHardwareInstanceTool$Wonderjs.prepareForTestVertexAttribPointer(sandbox, _prepareForHandleInstanceData, state);
                                                return Sinon.toCalledWith(/* array */[
                                                            match[2][1],
                                                            4,
                                                            match[1],
                                                            false,
                                                            64,
                                                            16
                                                          ], Wonder_jest.Expect[/* expect */0](match[3]));
                                              }));
                                        Wonder_jest.test("test third data", (function () {
                                                var match = RenderBasicHardwareInstanceTool$Wonderjs.prepareForTestVertexAttribPointer(sandbox, _prepareForHandleInstanceData, state);
                                                return Sinon.toCalledWith(/* array */[
                                                            match[2][2],
                                                            4,
                                                            match[1],
                                                            false,
                                                            64,
                                                            32
                                                          ], Wonder_jest.Expect[/* expect */0](match[3]));
                                              }));
                                        return Wonder_jest.test("test fourth data", (function () {
                                                      var match = RenderBasicHardwareInstanceTool$Wonderjs.prepareForTestVertexAttribPointer(sandbox, _prepareForHandleInstanceData, state);
                                                      return Sinon.toCalledWith(/* array */[
                                                                  match[2][3],
                                                                  4,
                                                                  match[1],
                                                                  false,
                                                                  64,
                                                                  48
                                                                ], Wonder_jest.Expect[/* expect */0](match[3]));
                                                    }));
                                      }));
                                Wonder_jest.test("vertexAttribDivisorANGLE 1", (function () {
                                        var match = _prepareForHandleInstanceData(sandbox, state);
                                        var state$1 = match[0];
                                        var vertexAttribDivisorANGLE = InstanceTool$Wonderjs.getExtensionInstancedArrays(state$1).vertexAttribDivisorANGLE;
                                        var state$2 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[match[5]], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state$1);
                                        var state$3 = RenderJobsTool$Wonderjs.init(state$2);
                                        DirectorTool$Wonderjs.runWithDefaultTime(state$3);
                                        return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](/* tuple */[
                                                        Sinon.getCallCount(Sinon.withTwoArgs(match[1], 1, vertexAttribDivisorANGLE)),
                                                        Sinon.getCallCount(Sinon.withTwoArgs(match[2], 1, vertexAttribDivisorANGLE)),
                                                        Sinon.getCallCount(Sinon.withTwoArgs(match[3], 1, vertexAttribDivisorANGLE)),
                                                        Sinon.getCallCount(Sinon.withTwoArgs(match[4], 1, vertexAttribDivisorANGLE))
                                                      ]), /* tuple */[
                                                    1,
                                                    1,
                                                    1,
                                                    1
                                                  ]);
                                      }));
                                Wonder_jest.test("enableVertexAttribArray instance data", (function () {
                                        var match = _prepareForHandleInstanceData(sandbox, state);
                                        var enableVertexAttribArray = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                        var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[match[5]], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[enableVertexAttribArray], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                        var state$2 = RenderJobsTool$Wonderjs.init(state$1);
                                        DirectorTool$Wonderjs.runWithDefaultTime(state$2);
                                        return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](/* tuple */[
                                                        Sinon.getCallCount(Sinon.withOneArg(match[1], enableVertexAttribArray)),
                                                        Sinon.getCallCount(Sinon.withOneArg(match[2], enableVertexAttribArray)),
                                                        Sinon.getCallCount(Sinon.withOneArg(match[3], enableVertexAttribArray)),
                                                        Sinon.getCallCount(Sinon.withOneArg(match[4], enableVertexAttribArray))
                                                      ]), /* tuple */[
                                                    1,
                                                    1,
                                                    1,
                                                    1
                                                  ]);
                                      }));
                                describe("optimize", (function () {
                                        describe("add isTransformStatic logic", (function () {
                                                var _prepareForBufferSubData = function (sandbox, isStatic, state) {
                                                  var match = RenderBasicHardwareInstanceTool$Wonderjs.prepare(sandbox, state[0]);
                                                  var sourceInstance = match[2][3];
                                                  var state$1 = SourceInstanceAPI$Wonderjs.markSourceInstanceModelMatrixIsStatic(sourceInstance, isStatic, match[0]);
                                                  var bufferSubData = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                                  var bindBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                                  var state$2 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[bindBuffer], /* None */0, /* None */0, /* None */0, /* Some */[bufferSubData], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state$1);
                                                  var state$3 = RenderJobsTool$Wonderjs.init(state$2);
                                                  return /* tuple */[
                                                          state$3,
                                                          sourceInstance,
                                                          /* tuple */[
                                                            bufferSubData,
                                                            bindBuffer
                                                          ]
                                                        ];
                                                };
                                                describe("if isTransformStatic is true", (function () {
                                                        Wonder_jest.test("if not send data before, send data", (function () {
                                                                var match = _prepareForBufferSubData(sandbox, true, state);
                                                                DirectorTool$Wonderjs.runWithDefaultTime(match[0]);
                                                                return Sinon.toCalledOnce(Wonder_jest.Expect[/* expect */0](match[2][0]));
                                                              }));
                                                        describe("else", (function () {
                                                                Wonder_jest.test("not buffer data", (function () {
                                                                        var match = _prepareForBufferSubData(sandbox, true, state);
                                                                        var state$1 = DirectorTool$Wonderjs.runWithDefaultTime(match[0]);
                                                                        DirectorTool$Wonderjs.runWithDefaultTime(state$1);
                                                                        return Sinon.toCalledOnce(Wonder_jest.Expect[/* expect */0](match[2][0]));
                                                                      }));
                                                                Wonder_jest.test("bind instance buffer", (function () {
                                                                        var match = _prepareForBufferSubData(sandbox, true, state);
                                                                        var bindBuffer = match[2][1];
                                                                        var state$1 = DirectorTool$Wonderjs.runWithDefaultTime(match[0]);
                                                                        var callCount = Sinon.getCallCount(bindBuffer);
                                                                        DirectorTool$Wonderjs.runWithDefaultTime(state$1);
                                                                        return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(bindBuffer)), callCount + 3 | 0);
                                                                      }));
                                                                describe("vertexAttribPointer instance data", (function () {
                                                                        return Wonder_jest.test("test first data", (function () {
                                                                                      var match = RenderBasicHardwareInstanceTool$Wonderjs.prepareForTestVertexAttribPointer(sandbox, _prepareForHandleInstanceData, state);
                                                                                      var vertexAttribPointer = match[3];
                                                                                      var callCount = Sinon.getCallCount(vertexAttribPointer);
                                                                                      DirectorTool$Wonderjs.runWithDefaultTime(match[0]);
                                                                                      return Sinon.toCalledWith(/* array */[
                                                                                                  match[2][0],
                                                                                                  4,
                                                                                                  match[1],
                                                                                                  false,
                                                                                                  64,
                                                                                                  0
                                                                                                ], Wonder_jest.Expect[/* expect */0](Sinon.getCall(callCount + 1 | 0, vertexAttribPointer)));
                                                                                    }));
                                                                      }));
                                                                Wonder_jest.test("vertexAttribDivisorANGLE 1", (function () {
                                                                        var match = _prepareForHandleInstanceData(sandbox, state);
                                                                        var state$1 = match[0];
                                                                        var vertexAttribDivisorANGLE = InstanceTool$Wonderjs.getExtensionInstancedArrays(state$1).vertexAttribDivisorANGLE;
                                                                        var state$2 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[match[5]], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state$1);
                                                                        var state$3 = RenderJobsTool$Wonderjs.init(state$2);
                                                                        var state$4 = DirectorTool$Wonderjs.runWithDefaultTime(state$3);
                                                                        DirectorTool$Wonderjs.runWithDefaultTime(state$4);
                                                                        return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](/* tuple */[
                                                                                        Sinon.getCallCount(Sinon.withTwoArgs(match[1], 1, vertexAttribDivisorANGLE)),
                                                                                        Sinon.getCallCount(Sinon.withTwoArgs(match[2], 1, vertexAttribDivisorANGLE)),
                                                                                        Sinon.getCallCount(Sinon.withTwoArgs(match[3], 1, vertexAttribDivisorANGLE)),
                                                                                        Sinon.getCallCount(Sinon.withTwoArgs(match[4], 1, vertexAttribDivisorANGLE))
                                                                                      ]), /* tuple */[
                                                                                    2,
                                                                                    2,
                                                                                    2,
                                                                                    2
                                                                                  ]);
                                                                      }));
                                                                return Wonder_jest.test("not enableVertexAttribArray instance data(because alreay enable before)", (function () {
                                                                              var match = _prepareForHandleInstanceData(sandbox, state);
                                                                              var enableVertexAttribArray = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                                                              var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[match[5]], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[enableVertexAttribArray], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                                                              var state$2 = RenderJobsTool$Wonderjs.init(state$1);
                                                                              var state$3 = DirectorTool$Wonderjs.runWithDefaultTime(state$2);
                                                                              DirectorTool$Wonderjs.runWithDefaultTime(state$3);
                                                                              return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](/* tuple */[
                                                                                              Sinon.getCallCount(Sinon.withOneArg(match[1], enableVertexAttribArray)),
                                                                                              Sinon.getCallCount(Sinon.withOneArg(match[2], enableVertexAttribArray)),
                                                                                              Sinon.getCallCount(Sinon.withOneArg(match[3], enableVertexAttribArray)),
                                                                                              Sinon.getCallCount(Sinon.withOneArg(match[4], enableVertexAttribArray))
                                                                                            ]), /* tuple */[
                                                                                          1,
                                                                                          1,
                                                                                          1,
                                                                                          1
                                                                                        ]);
                                                                            }));
                                                              }));
                                                        return /* () */0;
                                                      }));
                                                describe("else", (function () {
                                                        return Wonder_jest.test("send data", (function () {
                                                                      var match = _prepareForBufferSubData(sandbox, false, state);
                                                                      DirectorTool$Wonderjs.runWithDefaultTime(match[0]);
                                                                      return Sinon.toCalledOnce(Wonder_jest.Expect[/* expect */0](match[2][0]));
                                                                    }));
                                                      }));
                                                describe("support switch static to dynamic", (function () {
                                                        describe("test after switch", (function () {
                                                                return Wonder_jest.test("send data", (function () {
                                                                              var match = _prepareForBufferSubData(sandbox, false, state);
                                                                              var state$1 = DirectorTool$Wonderjs.runWithDefaultTime(match[0]);
                                                                              var state$2 = SourceInstanceAPI$Wonderjs.markSourceInstanceModelMatrixIsStatic(match[1], false, state$1);
                                                                              var state$3 = DirectorTool$Wonderjs.runWithDefaultTime(state$2);
                                                                              DirectorTool$Wonderjs.runWithDefaultTime(state$3);
                                                                              return Sinon.toCalledThrice(Wonder_jest.Expect[/* expect */0](match[2][0]));
                                                                            }));
                                                              }));
                                                        return /* () */0;
                                                      }));
                                                describe("support switch dynamic to static", (function () {
                                                        describe("test after switch", (function () {
                                                                return Wonder_jest.test("send data in the next render, and not send data in the next next render", (function () {
                                                                              var match = _prepareForBufferSubData(sandbox, false, state);
                                                                              var state$1 = DirectorTool$Wonderjs.runWithDefaultTime(match[0]);
                                                                              var state$2 = SourceInstanceAPI$Wonderjs.markSourceInstanceModelMatrixIsStatic(match[1], true, state$1);
                                                                              var state$3 = DirectorTool$Wonderjs.runWithDefaultTime(state$2);
                                                                              var state$4 = DirectorTool$Wonderjs.runWithDefaultTime(state$3);
                                                                              DirectorTool$Wonderjs.runWithDefaultTime(state$4);
                                                                              return Sinon.toCalledTwice(Wonder_jest.Expect[/* expect */0](match[2][0]));
                                                                            }));
                                                              }));
                                                        return /* () */0;
                                                      }));
                                                describe("support switch static to dynamic to static", (function () {
                                                        describe("test after switch", (function () {
                                                                return Wonder_jest.test("send data in the next render, and not send data in the next next render", (function () {
                                                                              var match = _prepareForBufferSubData(sandbox, false, state);
                                                                              var sourceInstance = match[1];
                                                                              var state$1 = DirectorTool$Wonderjs.runWithDefaultTime(match[0]);
                                                                              var state$2 = SourceInstanceAPI$Wonderjs.markSourceInstanceModelMatrixIsStatic(sourceInstance, false, state$1);
                                                                              var state$3 = DirectorTool$Wonderjs.runWithDefaultTime(state$2);
                                                                              var state$4 = SourceInstanceAPI$Wonderjs.markSourceInstanceModelMatrixIsStatic(sourceInstance, true, state$3);
                                                                              var state$5 = DirectorTool$Wonderjs.runWithDefaultTime(state$4);
                                                                              var state$6 = DirectorTool$Wonderjs.runWithDefaultTime(state$5);
                                                                              var state$7 = DirectorTool$Wonderjs.runWithDefaultTime(state$6);
                                                                              DirectorTool$Wonderjs.runWithDefaultTime(state$7);
                                                                              return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(match[2][0])), 3);
                                                                            }));
                                                              }));
                                                        return /* () */0;
                                                      }));
                                                return /* () */0;
                                              }));
                                        return /* () */0;
                                      }));
                                return /* () */0;
                              }));
                        return /* () */0;
                      }));
                return /* () */0;
              }));
        describe("draw instance", (function () {
                describe("test source gameObject has box geometry component", (function () {
                        return RenderHardwareInstanceTool$Wonderjs.testDrawElementsInstancedANGLE(sandbox, RenderBasicHardwareInstanceTool$Wonderjs.prepare, BoxGeometryTool$Wonderjs.getIndicesCount, state);
                      }));
                describe("test source gameObject has custom geometry component", (function () {
                        return RenderHardwareInstanceTool$Wonderjs.testDrawElementsInstancedANGLE(sandbox, RenderBasicHardwareInstanceTool$Wonderjs.prepareWithCustomGeometry, CustomGeometryTool$Wonderjs.getIndicesCount, state);
                      }));
                return /* () */0;
              }));
        describe("unbind", (function () {
                var _prepareForHandleInstanceData = function (sandbox, state) {
                  var match = RenderBasicHardwareInstanceTool$Wonderjs.prepare(sandbox, state[0]);
                  return RenderBasicHardwareInstanceForNoWorkerAndWorkerJobTool$Wonderjs.prepareGetAttribLocationForHandleInstanceData(sandbox, match[0]);
                };
                return Wonder_jest.test("reset instance data position divisor to 0", (function () {
                              var match = _prepareForHandleInstanceData(sandbox, state);
                              var pos1 = match[1];
                              var state$1 = match[0];
                              var vertexAttribDivisorANGLE = InstanceTool$Wonderjs.getExtensionInstancedArrays(state$1).vertexAttribDivisorANGLE;
                              var state$2 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[match[5]], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state$1);
                              var state$3 = RenderJobsTool$Wonderjs.init(state$2);
                              var state$4 = DirectorTool$Wonderjs.runWithDefaultTime(state$3);
                              return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](/* tuple */[
                                              Sinon.getCallCount(Sinon.withTwoArgs(pos1, 0, vertexAttribDivisorANGLE)),
                                              Sinon.getCallCount(Sinon.withTwoArgs(match[2], 0, vertexAttribDivisorANGLE)),
                                              Sinon.getCallCount(Sinon.withTwoArgs(match[3], 0, vertexAttribDivisorANGLE)),
                                              Sinon.getCallCount(Sinon.withTwoArgs(match[4], 0, vertexAttribDivisorANGLE)),
                                              Sinon.calledAfter(Sinon.withTwoArgs(pos1, 0, vertexAttribDivisorANGLE), InstanceTool$Wonderjs.getExtensionInstancedArrays(state$4).drawElementsInstancedANGLE)
                                            ]), /* tuple */[
                                          1,
                                          1,
                                          1,
                                          1,
                                          true
                                        ]);
                            }));
              }));
        return /* () */0;
      }));

/*  Not a pure module */
