// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                     from "../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon                     from "../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Sinon$1                   from "sinon";
import * as Wonder_jest               from "../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as BenchmarkTool$Wonderjs    from "./tool/BenchmarkTool.js";
import * as Benchmark$WonderBenchmark from "../../../../../node_modules/wonder-benchmark/lib/es6_global/src/Benchmark.js";

describe("redo undo", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var state = [Benchmark$WonderBenchmark.createEmptyState(/* () */0)];
        var browser = [/* None */0];
        var page = [/* None */0];
        beforeAll((function () {
                return BenchmarkTool$Wonderjs.prepareForHeadless(/* None */0, /* Some */[/* :: */[
                              "./test/performance/js/RedoUndoTool.js",
                              /* :: */[
                                "./test/performance/js/BasicBoxesTool.js",
                                /* :: */[
                                  "./test/performance/js/InstanceBasicBoxesTool.js",
                                  /* :: */[
                                    "./test/performance/js/CameraTool.js",
                                    /* [] */0
                                  ]
                                ]
                              ]
                            ]], "redo_undo.json", browser, page, state);
              }));
        afterAll((function () {
                return BenchmarkTool$Wonderjs.handleAfterAll(browser[0], state[0]);
              }));
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        return Wonder_jest.testPromise("copy 1k boxes(objectInstance)+restore from 1k boxes and 1k boxes(objectInstance)", (function () {
                      var body = ( function() {
                var state = wd.setMainConfig({
                    isTest: false
                });

                return initSample(state);



                function initSample(state) {
var n1 = performance.now();


                var data = RedoUndoTool.createBoxesByInstance(1000, state);
                    var state = data[0];
                    var box = data[1];

                    var data = RedoUndoTool.setPosition([box], state);
                    var state = data[0];
                    var boxes = data[1];

                    var data = RedoUndoTool.createCamera(state);
                    var state = data[0];



                    var state = RedoUndoTool.redoUndoShader(state);


var n2 = performance.now();

                    var state = wd.initDirector(state);





var n3 = performance.now();
                    var state = wd.loopBody(100.0, state);




var n4 = performance.now();





return {"errorRate": 10, "textArray": ["prepare", "init", "loopBody"], "timeArray": [n1, n2, n3, n4] }
                }
}
);
                      return Benchmark$WonderBenchmark.compare(/* tuple */[
                                  Wonder_jest.Expect[/* expect */0],
                                  Wonder_jest.Expect[/* toBe */2]
                                ], Benchmark$WonderBenchmark.exec("copy_1k_boxes(objectInstance)+restore_from_1k_boxes_and_1k_boxes(objectInstance)", body, state[0]));
                    }));
      }));

export {
  
}
/*  Not a pure module */
