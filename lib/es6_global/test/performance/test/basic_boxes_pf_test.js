// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                     from "../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon                     from "../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Sinon$1                   from "sinon";
import * as Wonder_jest               from "../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as BenchmarkTool$Wonderjs    from "./tool/BenchmarkTool.js";
import * as Benchmark$WonderBenchmark from "../../../../../node_modules/wonder-benchmark/lib/es6_global/src/Benchmark.js";

describe("basic boxes", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var state = [Benchmark$WonderBenchmark.createEmptyState(/* () */0)];
        var browser = [/* None */0];
        var page = [/* None */0];
        beforeAll((function () {
                return BenchmarkTool$Wonderjs.prepareForHeadless(/* None */0, /* Some */[/* :: */[
                              "./test/performance/js/BasicBoxesTool.js",
                              /* :: */[
                                "./test/performance/js/CameraTool.js",
                                /* [] */0
                              ]
                            ]], "basic_boxes.json", browser, page, state);
              }));
        afterAll((function () {
                return BenchmarkTool$Wonderjs.handleAfterAll(browser[0], state[0]);
              }));
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        Wonder_jest.testPromise("create 5k boxes", (function () {
                var body = ( function() {
                var state = wd.setMainConfig({
                    isTest: false
                });

                return initSample(state);



                function initSample(state) {
var n1 = performance.now();

                    var data = BasicBoxesTool.createBoxesByClone(5000, state);

                    var state = data[0];
                    var boxes = data[1];

                    var data = BasicBoxesTool.setPosition(boxes, state);
                    var state = data[0];
                    var boxes = data[1];

                    var data = BasicBoxesTool.createCamera(state);
                    var state = data[0];

var n2 = performance.now();

                    var state = wd.initDirector(state);



                    /* var state = wd.setState(state); */


var n3 = performance.now();
                    var state = wd.loopBody(100.0, state);




var n4 = performance.now();


                    /* return state; */




return {"errorRate": 10, "textArray": ["prepare", "init", "loopBody"], "timeArray": [n1, n2, n3, n4] }
                }
}
);
                return Benchmark$WonderBenchmark.compare(/* tuple */[
                            Wonder_jest.Expect[/* expect */0],
                            Wonder_jest.Expect[/* toBe */2]
                          ], Benchmark$WonderBenchmark.exec("create_5k_boxes", body, state[0]));
              }));
        Wonder_jest.testPromise("create 5k boxes+transform", (function () {
                var body = ( function() {
                var state = wd.setMainConfig({
                    isTest: false
                });

                return initSample(state);



                function initSample(state) {
var n1 = performance.now();

                    var data = BasicBoxesTool.createBoxesByClone(5000, state);

                    var state = data[0];
                    var boxes = data[1];

                    var data = BasicBoxesTool.setPosition(boxes, state);
                    var state = data[0];
                    var boxes = data[1];

                    var data = BasicBoxesTool.createCamera(state);



                    var state = data[0];


                    var state = BasicBoxesTool.setData(boxes, state);




var n2 = performance.now();

                    var state = wd.initDirector(state);




var n3 = performance.now();
                    var state = wd.loopBody(100.0, state);




var n4 = performance.now();


                    /* return state; */




return {"errorRate": 10, "textArray": ["prepare", "init", "loopBody"], "timeArray": [n1, n2, n3, n4] }
                }
}
);
                return Benchmark$WonderBenchmark.compare(/* tuple */[
                            Wonder_jest.Expect[/* expect */0],
                            Wonder_jest.Expect[/* toBe */2]
                          ], Benchmark$WonderBenchmark.exec("create_5k_boxes+transform", body, state[0]));
              }));
        Wonder_jest.testPromise("create 5k boxes+transform+set parent", (function () {
                var body = ( function() {
                         var state = wd.setMainConfig({
                             isTest: false
                         });

                         return initSample(state);



                         function initSample(state) {
         var n1 = performance.now();

                             var data = BasicBoxesTool.createBoxesByClone(5000, state);

                             var state = data[0];
                             var boxes = data[1];

                             var data = BasicBoxesTool.setPosition(boxes, state);
                             var state = data[0];
                             var boxes = data[1];

                             var data = BasicBoxesTool.createCamera(state);



                             var state = data[0];


                             var state = BasicBoxesTool.setData(boxes, state);

                             var state = BasicBoxesTool.setParent(boxes, state);




         var n2 = performance.now();

                             var state = wd.initDirector(state);




         var n3 = performance.now();
                             var state = wd.loopBody(100.0, state);




         var n4 = performance.now();


                             /* return state; */




return {"errorRate": 10, "textArray": ["prepare", "init", "loopBody"], "timeArray": [n1, n2, n3, n4] }
                         }
         }
         );
                return Benchmark$WonderBenchmark.compare(/* tuple */[
                            Wonder_jest.Expect[/* expect */0],
                            Wonder_jest.Expect[/* toBe */2]
                          ], Benchmark$WonderBenchmark.exec("create_5k_boxes+transform+set_parent", body, state[0]));
              }));
        return Wonder_jest.testPromise("create and dispose 1k boxes", (function () {
                      var body = ( function() {
                         var state = wd.setMainConfig({
                             isTest: false
                         });

                         return initSample(state);



                         function initSample(state) {
         var n1 = performance.now();

                             var data = BasicBoxesTool.createBoxesByClone(1, state);

                             var state = data[0];
                             var boxes = data[1];

                             var data = BasicBoxesTool.setPosition(boxes, state);
                             var state = data[0];
                             var boxes = data[1];

                             var data = BasicBoxesTool.createCamera(state);



                             var state = data[0];


                             var state = BasicBoxesTool.createAndDisposeGameObjects(boxes, state);




         var n2 = performance.now();

                             var state = wd.initDirector(state);




         var n3 = performance.now();
                             var state = wd.loopBody(100.0, state);




         var n4 = performance.now();



                             var state = wd.loopBody(200.0, state);




         var n5 = performance.now();



return {"errorRate": 10, "textArray": ["prepare", "init", "loopBody1", "loopBody2"], "timeArray": [n1, n2, n3, n4, n5] }

                         }
         }
         );
                      return Benchmark$WonderBenchmark.compare(/* tuple */[
                                  Wonder_jest.Expect[/* expect */0],
                                  Wonder_jest.Expect[/* toBe */2]
                                ], Benchmark$WonderBenchmark.exec("create_and_dispose_1k_boxes", body, state[0]));
                    }));
      }));

export {
  
}
/*  Not a pure module */
