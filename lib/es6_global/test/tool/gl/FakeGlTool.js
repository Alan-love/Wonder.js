// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                         from "../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon                         from "../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as DeviceManagerService$Wonderjs from "../../../src/service/record/all/device/DeviceManagerService.js";

function buildFakeGl(sandbox, $staropt$star, $staropt$star$1, $staropt$star$2, $staropt$star$3, $staropt$star$4, $staropt$star$5, $staropt$star$6, $staropt$star$7, $staropt$star$8, $staropt$star$9, $staropt$star$10, $staropt$star$11, $staropt$star$12, $staropt$star$13, $staropt$star$14, $staropt$star$15, $staropt$star$16, $staropt$star$17, $staropt$star$18, $staropt$star$19, $staropt$star$20, $staropt$star$21, $staropt$star$22, $staropt$star$23, $staropt$star$24, $staropt$star$25, $staropt$star$26, $staropt$star$27, $staropt$star$28, $staropt$star$29, $staropt$star$30, $staropt$star$31, $staropt$star$32, $staropt$star$33, $staropt$star$34, $staropt$star$35, $staropt$star$36, $staropt$star$37, $staropt$star$38, $staropt$star$39, $staropt$star$40, $staropt$star$41, $staropt$star$42, $staropt$star$43, $staropt$star$44, $staropt$star$45, $staropt$star$46, $staropt$star$47, $staropt$star$48, $staropt$star$49, $staropt$star$50, $staropt$star$51, $staropt$star$52, $staropt$star$53, $staropt$star$54, $staropt$star$55, $staropt$star$56, $staropt$star$57, $staropt$star$58, $staropt$star$59, _) {
  var compile_status = $staropt$star ? $staropt$star[0] : -1;
  var link_status = $staropt$star$1 ? $staropt$star$1[0] : -1;
  var vertex_shader = $staropt$star$2 ? $staropt$star$2[0] : -1;
  var fragment_shader = $staropt$star$3 ? $staropt$star$3[0] : -1;
  var array_buffer = $staropt$star$4 ? $staropt$star$4[0] : -1;
  var element_array_buffer = $staropt$star$5 ? $staropt$star$5[0] : -1;
  var $$float = $staropt$star$6 ? $staropt$star$6[0] : -1;
  var static_draw = $staropt$star$7 ? $staropt$star$7[0] : -1;
  var dynamic_draw = $staropt$star$8 ? $staropt$star$8[0] : -1;
  var triangles = $staropt$star$9 ? $staropt$star$9[0] : -1;
  var unsigned_short = $staropt$star$10 ? $staropt$star$10[0] : -1;
  var unsigned_int = $staropt$star$11 ? $staropt$star$11[0] : -1;
  var color_buffer_bit = $staropt$star$12 ? $staropt$star$12[0] : -1;
  var depth_buffer_bit = $staropt$star$13 ? $staropt$star$13[0] : -1;
  var stencil_buffer_bit = $staropt$star$14 ? $staropt$star$14[0] : -1;
  var back = $staropt$star$15 ? $staropt$star$15[0] : -1;
  var front = $staropt$star$16 ? $staropt$star$16[0] : -2;
  var frontAndBack = $staropt$star$17 ? $staropt$star$17[0] : -2;
  var getCullFace = $staropt$star$18 ? $staropt$star$18[0] : -3;
  var getDepthTest = $staropt$star$19 ? $staropt$star$19[0] : -4;
  var shaderSource = $staropt$star$20 ? $staropt$star$20[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var enable = $staropt$star$21 ? $staropt$star$21[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var disable = $staropt$star$22 ? $staropt$star$22[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var cullFace = $staropt$star$23 ? $staropt$star$23[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var createProgram = $staropt$star$24 ? $staropt$star$24[0] : Sinon.returns(100, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var createShader = $staropt$star$25 ? $staropt$star$25[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var compileShader = $staropt$star$26 ? $staropt$star$26[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var getVertexAttribArrayEnabled = $staropt$star$27 ? $staropt$star$27[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var linkProgram = $staropt$star$28 ? $staropt$star$28[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var getShaderParameter = $staropt$star$29 ? $staropt$star$29[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var getProgramParameter = $staropt$star$30 ? $staropt$star$30[0] : Sinon.returns(true, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var getShaderInfoLog = $staropt$star$31 ? $staropt$star$31[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var getProgramInfoLog = $staropt$star$32 ? $staropt$star$32[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var getShaderPrecisionFormat = $staropt$star$33 ? $staropt$star$33[0] : Sinon.returns({
          precision: 1
        }, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var getExtension = $staropt$star$34 ? $staropt$star$34[0] : Sinon.returns(0, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var attachShader = $staropt$star$35 ? $staropt$star$35[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var bindAttribLocation = $staropt$star$36 ? $staropt$star$36[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var deleteShader = $staropt$star$37 ? $staropt$star$37[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var deleteBuffer = $staropt$star$38 ? $staropt$star$38[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var getAttribLocation = $staropt$star$39 ? $staropt$star$39[0] : Sinon.returns(0, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var getUniformLocation = $staropt$star$40 ? $staropt$star$40[0] : Sinon.returns(0, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var bindBuffer = $staropt$star$41 ? $staropt$star$41[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var resetBuffer = $staropt$star$42 ? $staropt$star$42[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var createBuffer = $staropt$star$43 ? $staropt$star$43[0] : Sinon.returns(0, Curry._1(Sinon.createEmptyStub, sandbox[0]));
  var bufferData = $staropt$star$44 ? $staropt$star$44[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var bufferSubData = $staropt$star$45 ? $staropt$star$45[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var vertexAttribPointer = $staropt$star$46 ? $staropt$star$46[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var enableVertexAttribArray = $staropt$star$47 ? $staropt$star$47[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var uniformMatrix3fv = $staropt$star$48 ? $staropt$star$48[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var uniformMatrix4fv = $staropt$star$49 ? $staropt$star$49[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var uniform1f = $staropt$star$50 ? $staropt$star$50[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var uniform3f = $staropt$star$51 ? $staropt$star$51[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var drawElements = $staropt$star$52 ? $staropt$star$52[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var drawArray = $staropt$star$53 ? $staropt$star$53[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var viewport = $staropt$star$54 ? $staropt$star$54[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var clearColor = $staropt$star$55 ? $staropt$star$55[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var clear = $staropt$star$56 ? $staropt$star$56[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var colorMask = $staropt$star$57 ? $staropt$star$57[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var useProgram = $staropt$star$58 ? $staropt$star$58[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  var disableVertexAttribArray = $staropt$star$59 ? $staropt$star$59[0] : Curry._1(Sinon.createEmptyStub, sandbox[0]);
  return {
          COMPILE_STATUS: compile_status,
          LINK_STATUS: link_status,
          VERTEX_SHADER: vertex_shader,
          FRAGMENT_SHADER: fragment_shader,
          ARRAY_BUFFER: array_buffer,
          ELEMENT_ARRAY_BUFFER: element_array_buffer,
          FLOAT: $$float,
          STATIC_DRAW: static_draw,
          DYNAMIC_DRAW: dynamic_draw,
          TRIANGLES: triangles,
          UNSIGNED_INT: unsigned_int,
          UNSIGNED_SHORT: unsigned_short,
          COLOR_BUFFER_BIT: color_buffer_bit,
          DEPTH_BUFFER_BIT: depth_buffer_bit,
          STENCIL_BUFFER_BIT: stencil_buffer_bit,
          VERTEX_ATTRIB_ARRAY_ENABLED: getVertexAttribArrayEnabled,
          BACK: back,
          FRONT: front,
          FRONT_AND_BACK: frontAndBack,
          DEPTH_TEST: getDepthTest,
          CULL_FACE: getCullFace,
          cullFace: cullFace,
          enable: enable,
          disable: disable,
          linkProgram: linkProgram,
          getShaderParameter: getShaderParameter,
          getProgramParameter: getProgramParameter,
          getShaderInfoLog: getShaderInfoLog,
          getProgramInfoLog: getProgramInfoLog,
          getShaderPrecisionFormat: getShaderPrecisionFormat,
          getExtension: getExtension,
          attachShader: attachShader,
          bindAttribLocation: bindAttribLocation,
          deleteShader: deleteShader,
          deleteBuffer: deleteBuffer,
          getAttribLocation: getAttribLocation,
          getUniformLocation: getUniformLocation,
          bindBuffer: bindBuffer,
          resetBuffer: resetBuffer,
          createBuffer: createBuffer,
          bufferData: bufferData,
          bufferSubData: bufferSubData,
          vertexAttribPointer: vertexAttribPointer,
          enableVertexAttribArray: enableVertexAttribArray,
          uniformMatrix3fv: uniformMatrix3fv,
          uniformMatrix4fv: uniformMatrix4fv,
          uniform1f: uniform1f,
          uniform3f: uniform3f,
          drawElements: drawElements,
          drawArray: drawArray,
          viewport: viewport,
          clearColor: clearColor,
          clear: clear,
          colorMask: colorMask,
          useProgram: useProgram,
          disableVertexAttribArray: disableVertexAttribArray,
          shaderSource: shaderSource,
          createProgram: createProgram,
          createShader: createShader,
          compileShader: compileShader
        };
}

function setFakeGl(fakeGlObj, state) {
  var newrecord = state.slice();
  newrecord[/* deviceManagerRecord */9] = DeviceManagerService$Wonderjs.setGl(fakeGlObj, state[/* deviceManagerRecord */9]);
  return newrecord;
}

export {
  buildFakeGl ,
  setFakeGl   ,
  
}
/* Sinon Not a pure module */
