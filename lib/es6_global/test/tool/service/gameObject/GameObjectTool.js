// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as GameObjectAPI$Wonderjs                         from "../../../../src/api/GameObjectAPI.js";
import * as AllMaterialTool$Wonderjs                       from "../material/AllMaterialTool.js";
import * as DisposeECSService$Wonderjs                     from "../../../../src/service/primitive/ecs/DisposeECSService.js";
import * as ReallocateCPUMemoryJob$Wonderjs                from "../../../../src/job/no_worker/loop/ReallocateCPUMemoryJob.js";
import * as DisposeVboBufferService$Wonderjs               from "../../../../src/service/record/main/vboBuffer/DisposeVboBufferService.js";
import * as SparseMapService$WonderCommonlib               from "../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapService.js";
import * as DisposeGameObjectMainService$Wonderjs          from "../../../../src/service/state/main/gameObject/DisposeGameObjectMainService.js";
import * as DisposeComponentGameObjectMainService$Wonderjs from "../../../../src/service/state/main/gameObject/DisposeComponentGameObjectMainService.js";

function createGameObject(state) {
  var match = GameObjectAPI$Wonderjs.createGameObject(state);
  var gameObject = match[1];
  var state$1 = match[0];
  return /* tuple */[
          state$1,
          gameObject,
          GameObjectAPI$Wonderjs.unsafeGetGameObjectTransformComponent(gameObject, state$1)
        ];
}

function getGameObjectRecord(state) {
  return state[/* gameObjectRecord */10];
}

function initGameObject(gameObject, state) {
  return GameObjectAPI$Wonderjs.initGameObject(gameObject, AllMaterialTool$Wonderjs.prepareForInit(state));
}

function batchDisposeGameObject(gameObjectArray, state) {
  var match = DisposeGameObjectMainService$Wonderjs.batchDispose(/* tuple */[
        DisposeComponentGameObjectMainService$Wonderjs.batchDisposeBasicMaterialComponent,
        DisposeComponentGameObjectMainService$Wonderjs.batchDisposeLightMaterialComponent
      ], gameObjectArray, /* false */0, state);
  var state$1 = ReallocateCPUMemoryJob$Wonderjs.execJob(/* None */0, match[0]);
  var newrecord = state$1.slice();
  newrecord[/* vboBufferRecord */34] = DisposeVboBufferService$Wonderjs.disposeSourceInstanceVboBuffer(match[3], DisposeVboBufferService$Wonderjs.disposeCustomGeometryVboBuffer(match[2], DisposeVboBufferService$Wonderjs.disposeBoxGeometryVboBuffer(match[1], state$1[/* vboBufferRecord */34])));
  return newrecord;
}

function batchDisposeGameObjectKeepOrder(gameObjectArray, state) {
  var match = DisposeGameObjectMainService$Wonderjs.batchDispose(/* tuple */[
        DisposeComponentGameObjectMainService$Wonderjs.batchDisposeBasicMaterialComponent,
        DisposeComponentGameObjectMainService$Wonderjs.batchDisposeLightMaterialComponent
      ], gameObjectArray, /* true */1, state);
  var state$1 = match[0];
  var newrecord = state$1.slice();
  newrecord[/* vboBufferRecord */34] = DisposeVboBufferService$Wonderjs.disposeSourceInstanceVboBuffer(match[3], DisposeVboBufferService$Wonderjs.disposeCustomGeometryVboBuffer(match[2], DisposeVboBufferService$Wonderjs.disposeBoxGeometryVboBuffer(match[1], state$1[/* vboBufferRecord */34])));
  return newrecord;
}

function disposeGameObject(gameObject, state) {
  return batchDisposeGameObject(/* int array */[gameObject], state);
}

function disposeGameObjectKeepOrder(gameObject, state) {
  return batchDisposeGameObjectKeepOrder(/* int array */[gameObject], state);
}

function disposeGameObjectBasicCameraViewComponent(_, component, state) {
  return DisposeComponentGameObjectMainService$Wonderjs.batchDisposeBasicCameraViewComponent(state, /* int array */[component]);
}

function disposeGameObjectPerspectiveCameraProjectionComponent(_, component, state) {
  return DisposeComponentGameObjectMainService$Wonderjs.batchDisposePerspectiveCameraProjectionComponent(state, /* int array */[component]);
}

function disposeGameObjectTransformComponent(_, component, isKeepOrder, state) {
  return DisposeComponentGameObjectMainService$Wonderjs.batchDisposeTransformComponent(state, isKeepOrder, /* int array */[component]);
}

function disposeGameObjectBoxGeometryComponentWithoutVboBuffer(_, component, state) {
  return DisposeComponentGameObjectMainService$Wonderjs.batchDisposeBoxGeometryComponent(state, /* int array */[component])[0];
}

function disposeGameObjectCustomGeometryComponentWithoutVboBuffer(_, component, state) {
  var match = DisposeComponentGameObjectMainService$Wonderjs.batchDisposeCustomGeometryComponent(state, /* int array */[component]);
  return ReallocateCPUMemoryJob$Wonderjs.execJob(/* None */0, match[0]);
}

function disposeGameObjectBasicMaterialComponent(_, component, state) {
  return DisposeComponentGameObjectMainService$Wonderjs.batchDisposeBasicMaterialComponent(state, /* int array */[component]);
}

function disposeGameObjectLightMaterialComponent(_, component, state) {
  return DisposeComponentGameObjectMainService$Wonderjs.batchDisposeLightMaterialComponent(state, /* int array */[component]);
}

function disposeGameObjectMeshRendererComponent(gameObject, component, state) {
  return DisposeComponentGameObjectMainService$Wonderjs.batchDisposeMeshRendererComponent(DisposeECSService$Wonderjs.buildMapFromArray(/* int array */[gameObject], SparseMapService$WonderCommonlib.createEmpty(/* () */0)), state, /* int array */[component]);
}

function disposeGameObjectAmbientLightComponent(_, component, state) {
  return DisposeComponentGameObjectMainService$Wonderjs.batchDisposeAmbientLightComponent(state, /* int array */[component]);
}

function disposeGameObjectDirectionLightComponent(_, component, state) {
  return DisposeComponentGameObjectMainService$Wonderjs.batchDisposeDirectionLightComponent(state, /* int array */[component]);
}

function disposeGameObjectPointLightComponent(_, component, state) {
  return DisposeComponentGameObjectMainService$Wonderjs.batchDisposePointLightComponent(state, /* int array */[component]);
}

function disposeGameObjectSourceInstanceComponent(_, component, state) {
  var partial_arg = /* tuple */[
    DisposeComponentGameObjectMainService$Wonderjs.batchDisposeBasicMaterialComponent,
    DisposeComponentGameObjectMainService$Wonderjs.batchDisposeLightMaterialComponent
  ];
  return DisposeComponentGameObjectMainService$Wonderjs.batchDisposeSourceInstanceComponent(state, /* false */0, (function (param, param$1, param$2) {
                  return DisposeGameObjectMainService$Wonderjs.batchDispose(partial_arg, param, param$1, param$2);
                }), /* int array */[component])[0];
}

function disposeGameObjectObjectInstanceComponent(_, component, state) {
  return DisposeComponentGameObjectMainService$Wonderjs.batchDisposeObjectInstanceComponent(state, /* int array */[component]);
}

export {
  createGameObject                                         ,
  getGameObjectRecord                                      ,
  initGameObject                                           ,
  batchDisposeGameObject                                   ,
  batchDisposeGameObjectKeepOrder                          ,
  disposeGameObject                                        ,
  disposeGameObjectKeepOrder                               ,
  disposeGameObjectBasicCameraViewComponent                ,
  disposeGameObjectPerspectiveCameraProjectionComponent    ,
  disposeGameObjectTransformComponent                      ,
  disposeGameObjectBoxGeometryComponentWithoutVboBuffer    ,
  disposeGameObjectCustomGeometryComponentWithoutVboBuffer ,
  disposeGameObjectBasicMaterialComponent                  ,
  disposeGameObjectLightMaterialComponent                  ,
  disposeGameObjectMeshRendererComponent                   ,
  disposeGameObjectAmbientLightComponent                   ,
  disposeGameObjectDirectionLightComponent                 ,
  disposeGameObjectPointLightComponent                     ,
  disposeGameObjectSourceInstanceComponent                 ,
  disposeGameObjectObjectInstanceComponent                 ,
  
}
/* GameObjectAPI-Wonderjs Not a pure module */
