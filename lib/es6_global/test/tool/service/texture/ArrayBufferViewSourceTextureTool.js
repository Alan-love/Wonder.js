// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as OptionService$Wonderjs                                       from "../../../../src/service/atom/OptionService.js";
import * as TextureTypeService$Wonderjs                                  from "../../../../src/service/primitive/texture/TextureTypeService.js";
import * as TextureWrapService$Wonderjs                                  from "../../../../src/service/primitive/texture/TextureWrapService.js";
import * as TextureFilterService$Wonderjs                                from "../../../../src/service/primitive/texture/TextureFilterService.js";
import * as TextureFormatService$Wonderjs                                from "../../../../src/service/primitive/texture/TextureFormatService.js";
import * as IndexSourceTextureService$Wonderjs                           from "../../../../src/service/record/all/texture/IndexSourceTextureService.js";
import * as OperateGlTextureMapService$Wonderjs                          from "../../../../src/service/primitive/texture/OperateGlTextureMapService.js";
import * as IndexSourceTextureMainService$Wonderjs                       from "../../../../src/service/state/main/texture/IndexSourceTextureMainService.js";
import * as BufferArrayBufferViewSourceTextureService$Wonderjs           from "../../../../src/service/record/main/texture/BufferArrayBufferViewSourceTextureService.js";
import * as OperateTypeArrayArrayBufferViewSourceTextureService$Wonderjs from "../../../../src/service/record/all/texture/arrayBufferView_source/OperateTypeArrayArrayBufferViewSourceTextureService.js";

function getRecord(state) {
  return OptionService$Wonderjs.unsafeGet(state[/* arrayBufferViewSourceTextureRecord */19]);
}

var generateArrayBufferViewSourceTextureIndex = IndexSourceTextureMainService$Wonderjs.generateArrayBufferViewSourceTextureIndex;

function unsafeGetTexture(texture, state) {
  return OperateGlTextureMapService$Wonderjs.unsafeGetTexture(IndexSourceTextureService$Wonderjs.getArrayBufferViewSourceTextureIndexInTypeArray(texture, IndexSourceTextureMainService$Wonderjs.getArrayBufferViewSourceTextureIndexOffset(state)), OptionService$Wonderjs.unsafeGet(state[/* arrayBufferViewSourceTextureRecord */19])[/* glTextureMap */11]);
}

function isNeedUpdate(texture, state) {
  return +(OperateTypeArrayArrayBufferViewSourceTextureService$Wonderjs.getIsNeedUpdate(IndexSourceTextureService$Wonderjs.getArrayBufferViewSourceTextureIndexInTypeArray(texture, IndexSourceTextureMainService$Wonderjs.getArrayBufferViewSourceTextureIndexOffset(state)), OptionService$Wonderjs.unsafeGet(state[/* arrayBufferViewSourceTextureRecord */19])[/* isNeedUpdates */7]) === BufferArrayBufferViewSourceTextureService$Wonderjs.getDefaultIsNeedUpdate(/* () */0));
}

function buildSource() {
  return new Uint8Array(/* int array */[
              1,
              255,
              255,
              255
            ]);
}

function getDefaultWrapS() {
  return TextureWrapService$Wonderjs.getClampToEdge(/* () */0);
}

function getDefaultWrapT() {
  return TextureWrapService$Wonderjs.getClampToEdge(/* () */0);
}

function getDefaultMagFilter() {
  return TextureFilterService$Wonderjs.getLinear(/* () */0);
}

function getDefaultMinFilter() {
  return TextureFilterService$Wonderjs.getNearest(/* () */0);
}

function getDefaultFormat() {
  return TextureFormatService$Wonderjs.getRgba(/* () */0);
}

function getDefaultType() {
  return TextureTypeService$Wonderjs.getUnsignedByte(/* () */0);
}

function getDefaultIsNeedUpdate() {
  return BufferArrayBufferViewSourceTextureService$Wonderjs.getDefaultIsNeedUpdate(/* () */0);
}

function getDefaultWidth() {
  return BufferArrayBufferViewSourceTextureService$Wonderjs.getDefaultWidth(/* () */0);
}

function getDefaultHeight() {
  return BufferArrayBufferViewSourceTextureService$Wonderjs.getDefaultHeight(/* () */0);
}

export {
  getRecord                                 ,
  generateArrayBufferViewSourceTextureIndex ,
  unsafeGetTexture                          ,
  isNeedUpdate                              ,
  buildSource                               ,
  getDefaultWrapS                           ,
  getDefaultWrapT                           ,
  getDefaultMagFilter                       ,
  getDefaultMinFilter                       ,
  getDefaultFormat                          ,
  getDefaultType                            ,
  getDefaultIsNeedUpdate                    ,
  getDefaultWidth                           ,
  getDefaultHeight                          ,
  
}
/* OptionService-Wonderjs Not a pure module */
