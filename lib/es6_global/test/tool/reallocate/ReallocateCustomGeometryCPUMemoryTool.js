// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE

import * as Curry from "../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Wonder_jest from "../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as SettingTool$Wonderjs from "../service/setting/SettingTool.js";
import * as GameObjectTool$Wonderjs from "../service/gameObject/GameObjectTool.js";
import * as CustomGeometryAPI$Wonderjs from "../../../src/api/geometry/CustomGeometryAPI.js";
import * as CustomGeometryTool$Wonderjs from "../service/geometry/CustomGeometryTool.js";

function prepareForOptimize(state) {
  var state$1 = SettingTool$Wonderjs.setMemory(state[0], /* Some */[1], /* () */0);
  var match = CustomGeometryTool$Wonderjs.createThreeGameObjectsAndSetPointData(state$1);
  var match$1 = match[6];
  var match$2 = match[5];
  var match$3 = match[4];
  var match$4 = match[3];
  var match$5 = match[2];
  var geometry2 = match$5[1];
  var geometry1 = match$5[0];
  var match$6 = match[1];
  var gameObject2 = match$6[1];
  var gameObject1 = match$6[0];
  var state$2 = GameObjectTool$Wonderjs.disposeGameObjectCustomGeometryComponentWithoutVboBuffer(gameObject1, geometry1, match[0]);
  var state$3 = GameObjectTool$Wonderjs.disposeGameObjectCustomGeometryComponentWithoutVboBuffer(gameObject2, geometry2, state$2);
  return /* tuple */[
          state$3,
          /* tuple */[
            gameObject1,
            gameObject2,
            match$6[2]
          ],
          /* tuple */[
            geometry1,
            geometry2,
            match$5[2]
          ],
          /* tuple */[
            match$4[0],
            match$4[1],
            match$4[2]
          ],
          /* tuple */[
            match$3[0],
            match$3[1],
            match$3[2]
          ],
          /* tuple */[
            match$2[0],
            match$2[1],
            match$2[2]
          ],
          /* tuple */[
            match$1[0],
            match$1[1],
            match$1[2]
          ]
        ];
}

function judgeForOptimize(state, _, param, param$1, param$2, param$3, param$4) {
  var geometry3 = param[2];
  return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](/* tuple */[
                  CustomGeometryAPI$Wonderjs.getCustomGeometryVertices(geometry3, state),
                  CustomGeometryAPI$Wonderjs.getCustomGeometryTexCoords(geometry3, state),
                  CustomGeometryAPI$Wonderjs.getCustomGeometryNormals(geometry3, state),
                  CustomGeometryAPI$Wonderjs.getCustomGeometryIndices(geometry3, state)
                ]), /* tuple */[
              param$1[2],
              param$2[2],
              param$3[2],
              param$4[2]
            ]);
}

export {
  prepareForOptimize ,
  judgeForOptimize ,
  
}
/* Wonder_jest Not a pure module */
