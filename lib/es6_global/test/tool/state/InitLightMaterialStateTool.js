// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as LightMaterialTool$Wonderjs                       from "../service/material/LightMaterialTool.js";
import * as InitMaterialStateTool$Wonderjs                   from "./InitMaterialStateTool.js";
import * as CreateInitLightMaterialStateMainService$Wonderjs from "../../../src/service/state/main/material/light/CreateInitLightMaterialStateMainService.js";

function createStateWithoutMaterialData(state) {
  var match = InitMaterialStateTool$Wonderjs.isRenderConfigRecordExist(state);
  if (match !== 0) {
    var newrecord = state.slice();
    var newrecord$1 = LightMaterialTool$Wonderjs.getRecord(state).slice();
    newrecord[/* lightMaterialRecord */16] = /* Some */[(newrecord$1[/* shaderIndices */2] = new Uint32Array(/* int array */[]), newrecord$1)];
    return CreateInitLightMaterialStateMainService$Wonderjs.createInitMaterialState(/* tuple */[
                0,
                /* int array */[]
              ], newrecord);
  } else {
    var state$1 = InitMaterialStateTool$Wonderjs.setRenderConfig(1, state);
    var newrecord$2 = state$1.slice();
    var newrecord$3 = LightMaterialTool$Wonderjs.getRecord(state$1).slice();
    newrecord$2[/* lightMaterialRecord */16] = /* Some */[(newrecord$3[/* shaderIndices */2] = new Uint32Array(/* int array */[]), newrecord$3)];
    return CreateInitLightMaterialStateMainService$Wonderjs.createInitMaterialState(/* tuple */[
                0,
                /* int array */[]
              ], newrecord$2);
  }
}

export {
  createStateWithoutMaterialData ,
  
}
/* LightMaterialTool-Wonderjs Not a pure module */
