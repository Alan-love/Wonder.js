// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                                   from "../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon                                   from "../../../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Sinon$1                                 from "sinon";
import * as Wonder_jest                             from "../../../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as TestTool$Wonderjs                       from "../../../../tool/TestTool.js";
import * as CameraTool$Wonderjs                     from "../../../../tool/service/camera/CameraTool.js";
import * as DirectorTool$Wonderjs                   from "../../../../tool/core/DirectorTool.js";
import * as MainStateTool$Wonderjs                  from "../../../../tool/service/state/MainStateTool.js";
import * as NoWorkerJobConfigTool$Wonderjs          from "../../../../tool/service/noWorkerJob/NoWorkerJobConfigTool.js";
import * as PerspectiveCameraProjectionAPI$Wonderjs from "../../../../../src/api/PerspectiveCameraProjectionAPI.js";

describe("test update basicCameraView job", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var state = [MainStateTool$Wonderjs.createState(/* () */0)];
        var _buildNoWorkerJobConfig = function () {
          return NoWorkerJobConfigTool$Wonderjs.buildNoWorkerJobConfig(/* None */0, /* None */0, /* Some */["\n        [\n    {\n      \"name\": \"default\",\n      \"jobs\": [\n        {\n          \"name\": \"update_camera\"\n        }\n      ]\n    }\n  ]\n        "], /* None */0, /* Some */["\n[\n        {\n          \"name\": \"update_camera\"\n        }\n]\n        "], /* () */0);
        };
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                state[0] = TestTool$Wonderjs.initWithJobConfig(sandbox, /* None */0, /* None */0, /* Some */[_buildNoWorkerJobConfig(/* () */0)], /* None */0, /* () */0);
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        CameraTool$Wonderjs.testBuildPMatrix((function () {
                return state[0];
              }), (function (state) {
                return DirectorTool$Wonderjs.run(state, /* None */0, /* () */0);
              }));
        return Wonder_jest.test("test dirty during multi updates", (function () {
                      var match = CameraTool$Wonderjs.createBasicCameraViewPerspectiveCamera(state[0]);
                      var basicCameraView = match[1];
                      var state$1 = DirectorTool$Wonderjs.runWithDefaultTime(match[0]);
                      var state$2 = PerspectiveCameraProjectionAPI$Wonderjs.setPerspectiveCameraNear(basicCameraView, 0.2, state$1);
                      var state$3 = DirectorTool$Wonderjs.runWithDefaultTime(state$2);
                      return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](PerspectiveCameraProjectionAPI$Wonderjs.unsafeGetPerspectiveCameraProjectionPMatrix(basicCameraView, state$3)), new Float32Array(/* float array */[
                                      1.7320508075688776,
                                      0,
                                      0,
                                      0,
                                      0,
                                      1.7320508075688776,
                                      0,
                                      0,
                                      0,
                                      0,
                                      -1.0004000800160033,
                                      -1,
                                      0,
                                      0,
                                      -0.40008001600320064,
                                      0
                                    ]));
                    }));
      }));

export {
  
}
/*  Not a pure module */
