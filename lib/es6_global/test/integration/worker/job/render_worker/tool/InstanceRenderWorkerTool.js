// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Sinon                          from "../../../../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as OptionTool$Wonderjs            from "../../../../../tool/service/atom/OptionTool.js";
import * as RenderWorkerStateTool$Wonderjs from "../../../../../tool/service/state/RenderWorkerStateTool.js";

function _setGPUDetectDataAllowHardwareInstance(sandbox, state) {
  var newrecord = state.slice();
  var init = state[/* gpuDetectRecord */2];
  newrecord[/* gpuDetectRecord */2] = /* record */[
    /* extensionInstancedArrays : Some */[{
        drawElementsInstancedANGLE: Sinon.createEmptyStubWithJsObjSandbox(sandbox),
        vertexAttribDivisorANGLE: Sinon.createEmptyStubWithJsObjSandbox(sandbox)
      }],
    /* precision */init[/* precision */1]
  ];
  return newrecord;
}

function setGPUDetectDataAllowHardwareInstance(sandbox) {
  RenderWorkerStateTool$Wonderjs.setState(_setGPUDetectDataAllowHardwareInstance(sandbox, RenderWorkerStateTool$Wonderjs.createState(/* () */0)));
  return /* () */0;
}

function getExtensionInstancedArrays(state) {
  return OptionTool$Wonderjs.unsafeGet(state[/* gpuDetectRecord */2][/* extensionInstancedArrays */0]);
}

export {
  _setGPUDetectDataAllowHardwareInstance ,
  setGPUDetectDataAllowHardwareInstance  ,
  getExtensionInstancedArrays            ,
  
}
/* Sinon Not a pure module */
