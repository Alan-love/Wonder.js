// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                                    from "../../../../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon                                    from "../../../../../../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Sinon$1                                  from "sinon";
import * as Wonder_jest                              from "../../../../../../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as StateTool$Wonderjs                       from "../../../../../../tool/core/StateTool.js";
import * as Transform$Wonderjs                       from "../../../../../../../../src/ecs/component/api/transform/Transform.js";
import * as GameObject$Wonderjs                      from "../../../../../../../../src/ecs/admin/api/GameObject.js";
import * as GeometryTool$Wonderjs                    from "../../../../../../tool/component/geometry/GeometryTool.js";
import * as RenderJobsTool$Wonderjs                  from "../../../../../../tool/render/core/render/jobs/RenderJobsTool.js";
import * as RenderBasicHardwareInstanceTool$Wonderjs from "../../../../../../tool/render/instance/RenderBasicHardwareInstanceTool.js";

describe("test hardware instance hierachy", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var state = [StateTool$Wonderjs.createState(/* None */0, /* () */0)];
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                state[0] = RenderJobsTool$Wonderjs.initWithRenderConfigAndBufferConfig(sandbox, GeometryTool$Wonderjs.buildBufferConfig(3000));
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        return Wonder_jest.test("test hierachy transform", (function () {
                      var match = RenderBasicHardwareInstanceTool$Wonderjs.createSourceInstanceGameObject(sandbox, state[0]);
                      var match$1 = RenderBasicHardwareInstanceTool$Wonderjs.createSourceInstanceGameObject(sandbox, match[0]);
                      var objectInstanceGameObject2 = match$1[2][4];
                      var state$1 = match$1[0];
                      var sourceTransform1 = GameObject$Wonderjs.getGameObjectTransformComponent(match[1], state$1);
                      var sourceTransform2 = GameObject$Wonderjs.getGameObjectTransformComponent(match$1[1], state$1);
                      var objectInstanceTransform1 = GameObject$Wonderjs.getGameObjectTransformComponent(match[2][4], state$1);
                      var objectInstanceTransform2 = GameObject$Wonderjs.getGameObjectTransformComponent(objectInstanceGameObject2, state$1);
                      var state$2 = Transform$Wonderjs.setTransformParent(sourceTransform1, sourceTransform2, state$1);
                      var state$3 = Transform$Wonderjs.setTransformParent(objectInstanceTransform1, objectInstanceTransform2, state$2);
                      var pos1 = /* tuple */[
                        1,
                        2,
                        3
                      ];
                      var pos2 = /* tuple */[
                        5,
                        10,
                        30
                      ];
                      var state$4 = Transform$Wonderjs.setTransformLocalPosition(objectInstanceTransform1, pos2, Transform$Wonderjs.setTransformLocalPosition(sourceTransform1, pos1, state$3));
                      return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](/* tuple */[
                                      Transform$Wonderjs.getTransformPosition(sourceTransform2, state$4),
                                      Transform$Wonderjs.getTransformPosition(objectInstanceGameObject2, state$4)
                                    ]), /* tuple */[
                                  pos1,
                                  pos2
                                ]);
                    }));
      }));

export {
  
}
/*  Not a pure module */
