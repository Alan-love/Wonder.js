// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                                 from "../../../../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon                                 from "../../../../../../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Sinon$1                               from "sinon";
import * as Caml_int32                            from "../../../../../../../../../../node_modules/bs-platform/lib/es6/caml_int32.js";
import * as Wonder_jest                           from "../../../../../../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as Material$Wonderjs                     from "../../../../../../../../src/ecs/component/api/material/Material.js";
import * as StateTool$Wonderjs                    from "../../../../../../tool/core/StateTool.js";
import * as FakeGlTool$Wonderjs                   from "../../../../../../tool/gl/FakeGlTool.js";
import * as GeometryTool$Wonderjs                 from "../../../../../../tool/component/geometry/GeometryTool.js";
import * as GLSLSenderTool$Wonderjs               from "../../../../../../tool/render/shader/GLSLSenderTool.js";
import * as RenderJobsTool$Wonderjs               from "../../../../../../tool/render/core/render/jobs/RenderJobsTool.js";
import * as GLSLLocationTool$Wonderjs             from "../../../../../../tool/render/shader/GLSLLocationTool.js";
import * as RenderBasicBatchInstanceTool$Wonderjs from "../../../../../../tool/render/instance/RenderBasicBatchInstanceTool.js";

describe("test render basic batch instance", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var state = [StateTool$Wonderjs.createState(/* None */0, /* () */0)];
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                state[0] = RenderJobsTool$Wonderjs.initWithRenderConfigAndBufferConfig(sandbox, GeometryTool$Wonderjs.buildBufferConfig(3000));
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        describe("use program", (function () {
                var _prepareForUseProgram = function (sandbox, state) {
                  var match = RenderBasicBatchInstanceTool$Wonderjs.prepare(sandbox, 1, state);
                  var createProgram = Sinon.returns(1, Sinon.onCall(0, Sinon.createEmptyStubWithJsObjSandbox(sandbox)));
                  var useProgram = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                  var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[createProgram], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[useProgram], /* None */0, /* () */0), match[0]);
                  return /* tuple */[
                          state$1,
                          1,
                          createProgram,
                          useProgram
                        ];
                };
                Wonder_jest.test("create program and use program only once", (function () {
                        var match = _prepareForUseProgram(sandbox, state[0]);
                        RenderBasicBatchInstanceTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(match[0]));
                        return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(match[2])), 1);
                      }));
                return Wonder_jest.test("only use sourceInstance's gameObject's program", (function () {
                              var match = _prepareForUseProgram(sandbox, state[0]);
                              RenderBasicBatchInstanceTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(match[0]));
                              return Sinon.toCalledWith(/* :: */[
                                          match[1],
                                          /* [] */0
                                        ], Wonder_jest.Expect[/* expect */0](match[3]));
                            }));
              }));
        describe("send attribute data", (function () {
                describe("send sourceInstance gameObject's a_position", (function () {
                        return Wonder_jest.test("test attach buffer to attribute", (function () {
                                      var match = RenderBasicBatchInstanceTool$Wonderjs.prepare(sandbox, 1, state[0]);
                                      var vertexAttribPointer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                      var getAttribLocation = GLSLLocationTool$Wonderjs.getAttribLocation(/* Some */[0], sandbox, "a_position");
                                      var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[getAttribLocation], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[vertexAttribPointer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                      RenderBasicBatchInstanceTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(state$1));
                                      return Sinon.toCalledWith(/* :: */[
                                                  0,
                                                  /* :: */[
                                                    3,
                                                    /* :: */[
                                                      1,
                                                      /* :: */[
                                                        false,
                                                        /* :: */[
                                                          0,
                                                          /* :: */[
                                                            0,
                                                            /* [] */0
                                                          ]
                                                        ]
                                                      ]
                                                    ]
                                                  ]
                                                ], Wonder_jest.Expect[/* expect */0](Sinon.getCall(0, vertexAttribPointer)));
                                    }));
                      }));
                return /* () */0;
              }));
        describe("send uniform data", (function () {
                Wonder_jest.test("send shader uniform data only once per shader", (function () {
                        var match = RenderBasicBatchInstanceTool$Wonderjs.prepare(sandbox, 1, state[0]);
                        var match$1 = RenderBasicBatchInstanceTool$Wonderjs.createSourceInstanceGameObject(sandbox, 1, match[0]);
                        var match$2 = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, match$1[0]);
                        var uniformMatrix4fv = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                        var getUniformLocation = GLSLLocationTool$Wonderjs.getUniformLocation(/* Some */[1], sandbox, "u_vMatrix");
                        var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[getUniformLocation], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[uniformMatrix4fv], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match$2[0]);
                        RenderBasicBatchInstanceTool$Wonderjs.render(RenderJobsTool$Wonderjs.updateSystem(RenderJobsTool$Wonderjs.initSystemAndRender(state$1)));
                        return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(Sinon.withOneArg(1, uniformMatrix4fv))), 2);
                      }));
                GLSLSenderTool$Wonderjs.JudgeSendUniformData[/* testSendVector3 */3](sandbox, "u_color", (function (param, _, _$1, state) {
                        return Material$Wonderjs.setMaterialColor(param[1], /* float array */[
                                    0,
                                    1,
                                    0.2
                                  ], state);
                      }), /* :: */[
                      0,
                      /* :: */[
                        1,
                        /* :: */[
                          0.2,
                          /* [] */0
                        ]
                      ]
                    ], /* None */0, /* () */0);
                describe("send object instance gameObject's data", (function () {
                        return Wonder_jest.test("send u_mMatrix data", (function () {
                                      var match = RenderBasicBatchInstanceTool$Wonderjs.prepare(sandbox, 2, state[0]);
                                      var match$1 = RenderBasicBatchInstanceTool$Wonderjs.createSourceInstanceGameObject(sandbox, 3, match[0]);
                                      var uniformMatrix4fv = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                      var getUniformLocation = GLSLLocationTool$Wonderjs.getUniformLocation(/* Some */[1], sandbox, "u_mMatrix");
                                      var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[getUniformLocation], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[uniformMatrix4fv], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match$1[0]);
                                      RenderBasicBatchInstanceTool$Wonderjs.render(RenderJobsTool$Wonderjs.updateSystem(RenderJobsTool$Wonderjs.initSystemAndRender(state$1)));
                                      return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(Sinon.withOneArg(1, uniformMatrix4fv))), 5);
                                    }));
                      }));
                return /* () */0;
              }));
        describe("draw", (function () {
                return Wonder_jest.test("drawElements", (function () {
                              var match = RenderBasicBatchInstanceTool$Wonderjs.prepare(sandbox, 3, state[0]);
                              var drawElements = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                              var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[drawElements], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                              var state$2 = RenderJobsTool$Wonderjs.initSystemAndRender(state$1);
                              var state$3 = RenderBasicBatchInstanceTool$Wonderjs.render(state$2);
                              return Sinon.toCalledThrice(Wonder_jest.Expect[/* expect */0](Sinon.withFourArgs(1, GeometryTool$Wonderjs.getIndicesCount(match[2], state$3), GeometryTool$Wonderjs.getIndexType(state$3), Caml_int32.imul(GeometryTool$Wonderjs.getIndexTypeSize(state$3), 0), drawElements)));
                            }));
              }));
        return /* () */0;
      }));

export {
  
}
/*  Not a pure module */
