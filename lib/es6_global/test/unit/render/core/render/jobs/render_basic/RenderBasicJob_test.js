// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                         from "../../../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon                         from "../../../../../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Sinon$1                       from "sinon";
import * as Caml_int32                    from "../../../../../../../../../node_modules/bs-platform/lib/es6/caml_int32.js";
import * as Wonder_jest                   from "../../../../../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as Geometry$Wonderjs             from "../../../../../../../src/ecs/component/api/geometry/Geometry.js";
import * as Material$Wonderjs             from "../../../../../../../src/ecs/component/api/material/Material.js";
import * as StateTool$Wonderjs            from "../../../../../tool/core/StateTool.js";
import * as Transform$Wonderjs            from "../../../../../../../src/ecs/component/api/transform/Transform.js";
import * as FakeGlTool$Wonderjs           from "../../../../../tool/gl/FakeGlTool.js";
import * as GameObject$Wonderjs           from "../../../../../../../src/ecs/admin/api/GameObject.js";
import * as GeometryTool$Wonderjs         from "../../../../../tool/component/geometry/GeometryTool.js";
import * as TransformTool$Wonderjs        from "../../../../../tool/component/transform/TransformTool.js";
import * as GLSLSenderTool$Wonderjs       from "../../../../../tool/render/shader/GLSLSenderTool.js";
import * as RenderJobsTool$Wonderjs       from "../../../../../tool/render/core/render/jobs/RenderJobsTool.js";
import * as WebGLRenderTool$Wonderjs      from "../../../../../tool/render/core/WebGLRenderTool.js";
import * as GLSLLocationTool$Wonderjs     from "../../../../../tool/render/shader/GLSLLocationTool.js";
import * as CameraControllerTool$Wonderjs from "../../../../../tool/component/cameraController/CameraControllerTool.js";

describe("test render_basic job", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var state = [StateTool$Wonderjs.createState(/* None */0, /* () */0)];
        var _prepare = function (sandbox, state) {
          var match = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, state);
          return CameraControllerTool$Wonderjs.createCameraGameObject(match[0])[0];
        };
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                state[0] = RenderJobsTool$Wonderjs.initWithRenderConfig(sandbox);
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        describe("use program", (function () {
                var _prepareForUseProgram = function (sandbox, state) {
                  var state$1 = _prepare(sandbox, state);
                  var createProgram = Sinon.returns(1, Sinon.createEmptyStubWithJsObjSandbox(sandbox));
                  var useProgram = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                  var state$2 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[createProgram], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[useProgram], /* None */0, /* () */0), state$1);
                  return /* tuple */[
                          state$2,
                          1,
                          useProgram
                        ];
                };
                Wonder_jest.test("test", (function () {
                        var match = _prepareForUseProgram(sandbox, state[0]);
                        WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(match[0]));
                        return Sinon.toCalledWith(/* :: */[
                                    match[1],
                                    /* [] */0
                                  ], Wonder_jest.Expect[/* expect */0](match[2]));
                      }));
                return Wonder_jest.test("if the program is already used, not use again", (function () {
                              var match = _prepareForUseProgram(sandbox, state[0]);
                              var state$1 = RenderJobsTool$Wonderjs.initSystemAndRender(match[0]);
                              var state$2 = WebGLRenderTool$Wonderjs.render(state$1);
                              WebGLRenderTool$Wonderjs.render(state$2);
                              return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(match[2])), 1);
                            }));
              }));
        describe("send attribute data", (function () {
                describe("init vbo buffers when first send", (function () {
                        var _prepare = function (sandbox, state) {
                          var match = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, state);
                          var match$1 = CameraControllerTool$Wonderjs.createCameraGameObject(match[0]);
                          return /* tuple */[
                                  match$1[0],
                                  match[2]
                                ];
                        };
                        describe("init vertex buffer", (function () {
                                Wonder_jest.test("create buffer", (function () {
                                        var match = _prepare(sandbox, state[0]);
                                        var createBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                        var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[createBuffer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                        WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(state$1));
                                        return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(createBuffer)), 2);
                                      }));
                                Wonder_jest.test("bufferData", (function () {
                                        var match = _prepare(sandbox, state[0]);
                                        var bufferData = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                        var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* None */0, /* Some */[2], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[bufferData], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                        var state$2 = WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(state$1));
                                        var vertices = Geometry$Wonderjs.getGeometryVertices(match[1], state$2);
                                        return Sinon.toCalledOnce(Wonder_jest.Expect[/* expect */0](Sinon.withThreeArgs(1, vertices, 2, bufferData)));
                                      }));
                                return Wonder_jest.test("bind buffer and unbind buffer", (function () {
                                              var match = _prepare(sandbox, state[0]);
                                              var createBuffer = Sinon.returns(10, Sinon.createEmptyStubWithJsObjSandbox(sandbox));
                                              var bindBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                              var bufferData = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                              var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[bindBuffer], /* None */0, /* Some */[createBuffer], /* Some */[bufferData], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                              WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(state$1));
                                              return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](/* tuple */[
                                                              Sinon.calledBefore(Sinon.withTwoArgs(1, 10, bindBuffer), bufferData),
                                                              Sinon.calledAfter(Sinon.withTwoArgs(1, null, bindBuffer), bufferData)
                                                            ]), /* tuple */[
                                                          /* true */1,
                                                          /* true */1
                                                        ]);
                                            }));
                              }));
                        describe("init index buffer", (function () {
                                Wonder_jest.test("create buffer", (function () {
                                        var match = _prepare(sandbox, state[0]);
                                        var createBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                        var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[createBuffer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                        WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(state$1));
                                        return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(createBuffer)), 2);
                                      }));
                                Wonder_jest.test("bufferData", (function () {
                                        var match = _prepare(sandbox, state[0]);
                                        var bufferData = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                        var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* Some */[2], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[bufferData], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                        var state$2 = WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(state$1));
                                        var indices = Geometry$Wonderjs.getGeometryIndices(match[1], state$2);
                                        return Sinon.toCalledOnce(Wonder_jest.Expect[/* expect */0](Sinon.withThreeArgs(1, indices, 2, bufferData)));
                                      }));
                                return Wonder_jest.test("bind buffer and unbind buffer", (function () {
                                              var match = _prepare(sandbox, state[0]);
                                              var createBuffer = Sinon.returns(10, Sinon.createEmptyStubWithJsObjSandbox(sandbox));
                                              var bindBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                              var bufferData = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                              var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[5], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[bindBuffer], /* None */0, /* Some */[createBuffer], /* Some */[bufferData], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                              WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(state$1));
                                              return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](/* tuple */[
                                                              Sinon.calledBefore(Sinon.withTwoArgs(5, 10, bindBuffer), bufferData),
                                                              Sinon.calledAfter(Sinon.withTwoArgs(5, null, bindBuffer), Sinon.withOneArg(5, bufferData))
                                                            ]), /* tuple */[
                                                          /* true */1,
                                                          /* true */1
                                                        ]);
                                            }));
                              }));
                        return /* () */0;
                      }));
                describe("send a_position", (function () {
                        Wonder_jest.test("if lastSendArrayBuffer === buffer, not send", (function () {
                                var state$1 = _prepare(sandbox, state[0]);
                                var vertexAttribPointer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                var getAttribLocation = GLSLLocationTool$Wonderjs.getAttribLocation(/* Some */[0], sandbox, "a_position");
                                var state$2 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[getAttribLocation], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[vertexAttribPointer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state$1);
                                var state$3 = RenderJobsTool$Wonderjs.initSystemAndRender(state$2);
                                var state$4 = WebGLRenderTool$Wonderjs.render(state$3);
                                WebGLRenderTool$Wonderjs.render(state$4);
                                return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(vertexAttribPointer)), 1);
                              }));
                        describe("else", (function () {
                                Wonder_jest.test("bind array buffer", (function () {
                                        var state$1 = _prepare(sandbox, state[0]);
                                        var createBuffer = Sinon.returns(10, Sinon.createEmptyStubWithJsObjSandbox(sandbox));
                                        var bindBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                        var state$2 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[bindBuffer], /* None */0, /* Some */[createBuffer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state$1);
                                        WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(state$2));
                                        return Sinon.toCalledWith(/* :: */[
                                                    1,
                                                    /* :: */[
                                                      10,
                                                      /* [] */0
                                                    ]
                                                  ], Wonder_jest.Expect[/* expect */0](bindBuffer));
                                      }));
                                Wonder_jest.test("attach buffer to attribute", (function () {
                                        var state$1 = _prepare(sandbox, state[0]);
                                        var vertexAttribPointer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                        var getAttribLocation = GLSLLocationTool$Wonderjs.getAttribLocation(/* Some */[0], sandbox, "a_position");
                                        var state$2 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[getAttribLocation], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[vertexAttribPointer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state$1);
                                        WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(state$2));
                                        return Sinon.toCalledWith(/* :: */[
                                                    0,
                                                    /* :: */[
                                                      3,
                                                      /* :: */[
                                                        1,
                                                        /* :: */[
                                                          false,
                                                          /* :: */[
                                                            0,
                                                            /* :: */[
                                                              0,
                                                              /* [] */0
                                                            ]
                                                          ]
                                                        ]
                                                      ]
                                                    ]
                                                  ], Wonder_jest.Expect[/* expect */0](vertexAttribPointer));
                                      }));
                                describe("enable attribute", (function () {
                                        Wonder_jest.test("if already enabled since use this program, not enable", (function () {
                                                var state$1 = _prepare(sandbox, state[0]);
                                                var enableVertexAttribArray = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                                var getAttribLocation = GLSLLocationTool$Wonderjs.getAttribLocation(/* Some */[0], sandbox, "a_position");
                                                var state$2 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[getAttribLocation], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[enableVertexAttribArray], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state$1);
                                                var state$3 = RenderJobsTool$Wonderjs.initSystemAndRender(state$2);
                                                var state$4 = WebGLRenderTool$Wonderjs.render(state$3);
                                                WebGLRenderTool$Wonderjs.render(state$4);
                                                return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(Sinon.withOneArg(0, enableVertexAttribArray))), 1);
                                              }));
                                        return Wonder_jest.test("else, enable", (function () {
                                                      var state$1 = _prepare(sandbox, state[0]);
                                                      var enableVertexAttribArray = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                                      var getAttribLocation = GLSLLocationTool$Wonderjs.getAttribLocation(/* Some */[0], sandbox, "a_position");
                                                      var state$2 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[getAttribLocation], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[enableVertexAttribArray], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state$1);
                                                      var state$3 = RenderJobsTool$Wonderjs.initSystemAndRender(state$2);
                                                      var state$4 = WebGLRenderTool$Wonderjs.render(state$3);
                                                      var state$5 = GLSLSenderTool$Wonderjs.cleanLastSendArrayBuffer(GLSLSenderTool$Wonderjs.disableVertexAttribArray(state$4));
                                                      WebGLRenderTool$Wonderjs.render(state$5);
                                                      return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(Sinon.withOneArg(0, enableVertexAttribArray))), 2);
                                                    }));
                                      }));
                                return /* () */0;
                              }));
                        return /* () */0;
                      }));
                describe("fix bug", (function () {
                        var _prepareTwo = function (sandbox, state) {
                          var match = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, state);
                          var match$1 = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, match[0]);
                          var match$2 = CameraControllerTool$Wonderjs.createCameraGameObject(match$1[0]);
                          return /* tuple */[
                                  match$2[0],
                                  match[2],
                                  match$1[2]
                                ];
                        };
                        Wonder_jest.test("different gameObject(with different geometry) should bufferData different array buffer and element array buffer", (function () {
                                var match = _prepareTwo(sandbox, state[0]);
                                var geometry1 = match[1];
                                var bufferData = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[3], /* Some */[1], /* None */0, /* Some */[2], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[bufferData], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                var state$2 = WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.initSystemAndRender(state$1));
                                var indices = Geometry$Wonderjs.getGeometryIndices(geometry1, state$2);
                                var vertices = Geometry$Wonderjs.getGeometryVertices(geometry1, state$2);
                                return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](/* tuple */[
                                                Sinon.getCallCount(Sinon.withThreeArgs(3, vertices, 2, bufferData)),
                                                Sinon.getCallCount(Sinon.withThreeArgs(1, indices, 2, bufferData))
                                              ]), /* tuple */[
                                            2,
                                            2
                                          ]);
                              }));
                        return Wonder_jest.test("different gameObject(with different geometry) should bind different array buffer and element array buffer", (function () {
                                      var match = _prepareTwo(sandbox, state[0]);
                                      var createBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                      Sinon.returns(10, Sinon.onCall(0, createBuffer));
                                      Sinon.returns(12, Sinon.onCall(1, createBuffer));
                                      Sinon.returns(11, Sinon.onCall(2, createBuffer));
                                      Sinon.returns(13, Sinon.onCall(3, createBuffer));
                                      var bindBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                      var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[2], /* Some */[1], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[bindBuffer], /* None */0, /* Some */[createBuffer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                      var state$2 = RenderJobsTool$Wonderjs.initSystemAndRender(state$1);
                                      WebGLRenderTool$Wonderjs.render(state$2);
                                      return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](/* tuple */[
                                                      Sinon.getCallCount(Sinon.withTwoArgs(2, 10, bindBuffer)),
                                                      Sinon.getCallCount(Sinon.withTwoArgs(2, 11, bindBuffer)),
                                                      Sinon.getCallCount(Sinon.withTwoArgs(1, 12, bindBuffer)),
                                                      Sinon.getCallCount(Sinon.withTwoArgs(1, 13, bindBuffer))
                                                    ]), /* tuple */[
                                                  2,
                                                  2,
                                                  2,
                                                  2
                                                ]);
                                    }));
                      }));
                return /* () */0;
              }));
        describe("send uniform data", (function () {
                var testSendShaderUniformDataOnlyOnce = function (name, prepareSendUinformDataFunc) {
                  return Wonder_jest.test("send shader uniform data only once", (function () {
                                var match = Curry._2(prepareSendUinformDataFunc, sandbox, state[0]);
                                var match$1 = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, match[0]);
                                var uniformMatrix4fv = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                var getUniformLocation = GLSLLocationTool$Wonderjs.getUniformLocation(/* Some */[0], sandbox, name);
                                var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[getUniformLocation], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[uniformMatrix4fv], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match$1[0]);
                                WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.updateSystem(RenderJobsTool$Wonderjs.initSystemAndRender(state$1)));
                                return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getCallCount(Sinon.withOneArg(0, uniformMatrix4fv))), 1);
                              }));
                };
                GLSLSenderTool$Wonderjs.JudgeSendUniformData[/* testSendMatrix4 */2](sandbox, "u_mMatrix", (function (gameObjectTransform, _, _$1, state) {
                        return Transform$Wonderjs.setTransformLocalPosition(gameObjectTransform, /* tuple */[
                                    1,
                                    2,
                                    3
                                  ], state);
                      }), new Float32Array(/* float array */[
                          1,
                          0,
                          0,
                          0,
                          0,
                          1,
                          0,
                          0,
                          0,
                          0,
                          1,
                          0,
                          1,
                          2,
                          3,
                          1
                        ]), /* Some */[(function (_prepareSendUinformData) {
                          Wonder_jest.test("if not do any transform operation, should still send identity matrix value on the first send", (function () {
                                  var match = Curry._2(_prepareSendUinformData, sandbox, state[0]);
                                  var uniformMatrix4fv = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                  var getUniformLocation = GLSLLocationTool$Wonderjs.getUniformLocation(/* Some */[0], sandbox, "u_mMatrix");
                                  var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[getUniformLocation], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[uniformMatrix4fv], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                  WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.updateSystem(RenderJobsTool$Wonderjs.initSystemAndRender(state$1)));
                                  return Sinon.toCalledWith(/* :: */[
                                              0,
                                              /* :: */[
                                                false,
                                                /* :: */[
                                                  TransformTool$Wonderjs.getDefaultLocalToWorldMatrix(/* () */0),
                                                  /* [] */0
                                                ]
                                              ]
                                            ], Wonder_jest.Expect[/* expect */0](uniformMatrix4fv));
                                }));
                          describe("test two gameObjects", (function () {
                                  return Wonder_jest.test("if only set first one's transform, second one's sended u_mMatrix data shouldn't be affect", (function () {
                                                var match = Curry._2(_prepareSendUinformData, sandbox, state[0]);
                                                var match$1 = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, match[0]);
                                                var state$1 = Transform$Wonderjs.setTransformLocalPosition(match[2][0], /* tuple */[
                                                      1,
                                                      2,
                                                      3
                                                    ], match$1[0]);
                                                var uniformMatrix4fv = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                                var getUniformLocation = GLSLLocationTool$Wonderjs.getUniformLocation(/* Some */[0], sandbox, "u_mMatrix");
                                                var state$2 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[getUniformLocation], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[uniformMatrix4fv], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state$1);
                                                WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.updateSystem(RenderJobsTool$Wonderjs.initSystemAndRender(state$2)));
                                                return Sinon.toCalledWith(/* :: */[
                                                            0,
                                                            /* :: */[
                                                              false,
                                                              /* :: */[
                                                                TransformTool$Wonderjs.getDefaultLocalToWorldMatrix(/* () */0),
                                                                /* [] */0
                                                              ]
                                                            ]
                                                          ], Wonder_jest.Expect[/* expect */0](Sinon.getCall(1, Sinon.withOneArg(0, uniformMatrix4fv))));
                                              }));
                                }));
                          return /* () */0;
                        })], /* () */0);
                GLSLSenderTool$Wonderjs.JudgeSendUniformData[/* testSendMatrix4 */2](sandbox, "u_vMatrix", (function (_, cameraTransform, _$1, state) {
                        return Transform$Wonderjs.setTransformLocalPosition(cameraTransform, /* tuple */[
                                    10,
                                    2,
                                    3
                                  ], state);
                      }), new Float32Array(/* float array */[
                          1,
                          0,
                          0,
                          0,
                          0,
                          1,
                          0,
                          0,
                          0,
                          0,
                          1,
                          0,
                          -10,
                          -2,
                          -3,
                          1
                        ]), /* Some */[(function (_prepareSendUinformData) {
                          return testSendShaderUniformDataOnlyOnce("u_vMatrix", _prepareSendUinformData);
                        })], /* () */0);
                GLSLSenderTool$Wonderjs.JudgeSendUniformData[/* testSendMatrix4 */2](sandbox, "u_pMatrix", (function (_, _$1, _$2, state) {
                        return state;
                      }), CameraControllerTool$Wonderjs.getPMatrixOfCreateCameraControllerPerspectiveCamera(/* () */0), /* Some */[(function (_prepareSendUinformData) {
                          return testSendShaderUniformDataOnlyOnce("u_pMatrix", _prepareSendUinformData);
                        })], /* () */0);
                return GLSLSenderTool$Wonderjs.JudgeSendUniformData[/* testSendVector3 */3](sandbox, "u_color", (function (param, _, _$1, state) {
                              return Material$Wonderjs.setMaterialColor(param[1], /* float array */[
                                          0,
                                          1,
                                          0.2
                                        ], state);
                            }), /* :: */[
                            0,
                            /* :: */[
                              1,
                              /* :: */[
                                0.2,
                                /* [] */0
                              ]
                            ]
                          ], /* Some */[(function (_prepareSendUinformData) {
                                describe("test two gameObjects", (function () {
                                        return Wonder_jest.test("if only set first one's color, second one's sended u_color data shouldn't be affect", (function () {
                                                      var match = Curry._2(_prepareSendUinformData, sandbox, state[0]);
                                                      var match$1 = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, match[0]);
                                                      var state$1 = Material$Wonderjs.setMaterialColor(match[2][1], /* float array */[
                                                            0,
                                                            1,
                                                            0.2
                                                          ], match$1[0]);
                                                      var uniform3f = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                                      var getUniformLocation = GLSLLocationTool$Wonderjs.getUniformLocation(/* Some */[0], sandbox, "u_color");
                                                      var state$2 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[getUniformLocation], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[uniform3f], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state$1);
                                                      WebGLRenderTool$Wonderjs.render(RenderJobsTool$Wonderjs.updateSystem(RenderJobsTool$Wonderjs.initSystemAndRender(state$2)));
                                                      return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Sinon.getArgs(Sinon.getCall(1, Sinon.withOneArg(0, uniform3f)))), /* :: */[
                                                                  0,
                                                                  /* :: */[
                                                                    1,
                                                                    /* :: */[
                                                                      1,
                                                                      /* :: */[
                                                                        1,
                                                                        /* [] */0
                                                                      ]
                                                                    ]
                                                                  ]
                                                                ]);
                                                    }));
                                      }));
                                return /* () */0;
                              })], /* () */0);
              }));
        describe("draw", (function () {
                describe("if geometry has index buffer, bind index buffer and drawElements", (function () {
                        var _prepareForDrawElements = function (sandbox, state) {
                          var match = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, state);
                          var match$1 = CameraControllerTool$Wonderjs.createCameraGameObject(match[0]);
                          return /* tuple */[
                                  match$1[0],
                                  match[2]
                                ];
                        };
                        describe("bind index buffer", (function () {
                                var _prepareForElementArrayBuffer = function (state) {
                                  var createBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                  Sinon.returns(10, createBuffer);
                                  var bindBuffer = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                  var drawElements = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                  var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[bindBuffer], /* None */0, /* Some */[createBuffer], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[drawElements], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), state);
                                  var state$2 = RenderJobsTool$Wonderjs.initSystemAndRender(state$1);
                                  return /* tuple */[
                                          state$2,
                                          bindBuffer,
                                          1,
                                          10
                                        ];
                                };
                                Wonder_jest.test("if lastSendElementArrayBuffer === buffer, not bind", (function () {
                                        var state$1 = _prepare(sandbox, state[0]);
                                        var match = _prepareForElementArrayBuffer(state$1);
                                        var buffer = match[3];
                                        var element_array_buffer = match[2];
                                        var bindBuffer = match[1];
                                        var state$2 = WebGLRenderTool$Wonderjs.render(match[0]);
                                        var bindElementArrayBufferCallCountBeforeSecondRender = Sinon.getCallCount(Sinon.withTwoArgs(element_array_buffer, buffer, bindBuffer));
                                        WebGLRenderTool$Wonderjs.render(state$2);
                                        var bindElementArrayBufferCallCountAfterSecondRender = Sinon.getCallCount(Sinon.withTwoArgs(element_array_buffer, buffer, bindBuffer));
                                        return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](bindElementArrayBufferCallCountAfterSecondRender), bindElementArrayBufferCallCountBeforeSecondRender);
                                      }));
                                Wonder_jest.test("else, bind", (function () {
                                        var state$1 = _prepare(sandbox, state[0]);
                                        var match = _prepareForElementArrayBuffer(state$1);
                                        var buffer = match[3];
                                        var element_array_buffer = match[2];
                                        var bindBuffer = match[1];
                                        var bindElementArrayBufferCallCountAfterInit = Sinon.getCallCount(Sinon.withTwoArgs(element_array_buffer, buffer, bindBuffer));
                                        WebGLRenderTool$Wonderjs.render(match[0]);
                                        var bindElementArrayBufferCallCountAfterRender = Sinon.getCallCount(Sinon.withTwoArgs(element_array_buffer, buffer, bindBuffer));
                                        return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](bindElementArrayBufferCallCountAfterRender), (bindElementArrayBufferCallCountAfterInit + 1 | 0) + 1 | 0);
                                      }));
                                describe("test create gameObject after dispose one", (function () {
                                        return Wonder_jest.test("should bind new one's index buffer", (function () {
                                                      var match = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, state[0]);
                                                      var match$1 = CameraControllerTool$Wonderjs.createCameraGameObject(match[0]);
                                                      var match$2 = _prepareForElementArrayBuffer(match$1[0]);
                                                      var element_array_buffer = match$2[2];
                                                      var bindBuffer = match$2[1];
                                                      var state$1 = WebGLRenderTool$Wonderjs.render(match$2[0]);
                                                      var state$2 = GameObject$Wonderjs.disposeGameObject(match[1], state$1);
                                                      var match$3 = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, state$2);
                                                      var state$3 = GameObject$Wonderjs.initGameObject(match$3[1], match$3[0]);
                                                      var bindElementArrayBufferCallCountAfterFirstRender = Sinon.getCallCount(Sinon.withOneArg(element_array_buffer, bindBuffer));
                                                      WebGLRenderTool$Wonderjs.render(state$3);
                                                      var bindElementArrayBufferCallCountAfterSecondRender = Sinon.getCallCount(Sinon.withOneArg(element_array_buffer, bindBuffer));
                                                      return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](bindElementArrayBufferCallCountAfterSecondRender), (bindElementArrayBufferCallCountAfterFirstRender + 1 | 0) + 1 | 0);
                                                    }));
                                      }));
                                return /* () */0;
                              }));
                        return Wonder_jest.test("drawElements", (function () {
                                      var match = _prepareForDrawElements(sandbox, state[0]);
                                      var drawElements = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
                                      var state$1 = FakeGlTool$Wonderjs.setFakeGl(FakeGlTool$Wonderjs.buildFakeGl(sandbox, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[drawElements], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0), match[0]);
                                      var state$2 = RenderJobsTool$Wonderjs.initSystemAndRender(state$1);
                                      var state$3 = WebGLRenderTool$Wonderjs.render(state$2);
                                      return Sinon.toCalledOnce(Wonder_jest.Expect[/* expect */0](Sinon.withFourArgs(1, GeometryTool$Wonderjs.getIndicesCount(match[1], state$3), GeometryTool$Wonderjs.getIndexType(state$3), Caml_int32.imul(GeometryTool$Wonderjs.getIndexTypeSize(state$3), 0), drawElements)));
                                    }));
                      }));
                return /* () */0;
              }));
        return /* () */0;
      }));

export {
  
}
/*  Not a pure module */
