// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                          from "../../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon                          from "../../../../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Sinon$1                        from "sinon";
import * as Wonder_jest                    from "../../../../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as StateTool$Wonderjs             from "../../../../tool/core/StateTool.js";
import * as RenderJobsTool$Wonderjs        from "../../../../tool/render/core/render/jobs/RenderJobsTool.js";
import * as GetRenderArrayJobTool$Wonderjs from "../../../../tool/render/core/render/jobs/GetRenderArrayJobTool.js";

describe("test get_render_array job", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var state = [StateTool$Wonderjs.createState(/* None */0, /* () */0)];
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                state[0] = RenderJobsTool$Wonderjs.initWithRenderConfig(sandbox);
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        return Wonder_jest.test("set render array to state.renderData.renderArray", (function () {
                      var match = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, state[0]);
                      var match$1 = RenderJobsTool$Wonderjs.prepareGameObject(sandbox, match[0]);
                      var render = function (state) {
                        return GetRenderArrayJobTool$Wonderjs.getJob(RenderJobsTool$Wonderjs.buildConfigData(/* None */0, /* None */0, /* () */0), state);
                      };
                      var state$1 = RenderJobsTool$Wonderjs.passGl(sandbox, match$1[0]);
                      var state$2 = render(RenderJobsTool$Wonderjs.initSystemAndRender(state$1));
                      return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](state$2[/* renderData */21][/* renderArray */0]), /* Some */[/* int array */[
                                    match[1],
                                    match$1[1]
                                  ]]);
                    }));
      }));

export {
  
}
/*  Not a pure module */
