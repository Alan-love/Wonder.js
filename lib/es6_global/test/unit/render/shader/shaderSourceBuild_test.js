// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                             from "../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon                             from "../../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Sinon$1                           from "sinon";
import * as Wonder_jest                       from "../../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as GLSLTool$Wonderjs                 from "../../tool/render/core/GLSLTool.js";
import * as StateTool$Wonderjs                from "../../tool/core/StateTool.js";
import * as GpuDetectTool$Wonderjs            from "../../tool/render/device/GpuDetectTool.js";
import * as InitBasicMaterialJobTool$Wonderjs from "../../tool/render/core/init/jobs/InitBasicMaterialJobTool.js";

describe("build shader source", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var state = [StateTool$Wonderjs.createState(/* None */0, /* () */0)];
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                state[0] = InitBasicMaterialJobTool$Wonderjs.initWithRenderConfig(sandbox);
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        describe("build glsl source", (function () {
                describe("fs top define precision based on gpu detect data->precision", (function () {
                        Wonder_jest.test("test highp precision", (function () {
                                var state$1 = GpuDetectTool$Wonderjs.setPrecision(/* HIGHP */0, state[0]);
                                var shaderSource = InitBasicMaterialJobTool$Wonderjs.prepareForJudgeGLSL(sandbox, state$1);
                                return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](GLSLTool$Wonderjs.containSpecifyCount(GLSLTool$Wonderjs.getFsSource(shaderSource), "precision highp float;\nprecision highp int;\n", /* Some */[1], /* () */0)), /* true */1);
                              }));
                        Wonder_jest.test("test mediump precision", (function () {
                                var state$1 = GpuDetectTool$Wonderjs.setPrecision(/* MEDIUMP */1, state[0]);
                                var shaderSource = InitBasicMaterialJobTool$Wonderjs.prepareForJudgeGLSL(sandbox, state$1);
                                return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](GLSLTool$Wonderjs.containSpecifyCount(GLSLTool$Wonderjs.getFsSource(shaderSource), "precision mediump float;\nprecision mediump int;\n", /* Some */[1], /* () */0)), /* true */1);
                              }));
                        return Wonder_jest.test("test lowp precision", (function () {
                                      var state$1 = GpuDetectTool$Wonderjs.setPrecision(/* LOWP */2, state[0]);
                                      var shaderSource = InitBasicMaterialJobTool$Wonderjs.prepareForJudgeGLSL(sandbox, state$1);
                                      return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](GLSLTool$Wonderjs.containSpecifyCount(GLSLTool$Wonderjs.getFsSource(shaderSource), "precision lowp float;\nprecision lowp int;\n", /* Some */[1], /* () */0)), /* true */1);
                                    }));
                      }));
                return /* () */0;
              }));
        return /* () */0;
      }));

export {
  
}
/*  Not a pure module */
