// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                   from "../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon                   from "../../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Sinon$1                 from "sinon";
import * as Wonder_jest             from "../../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as TestTool$Wonderjs       from "../../tool/TestTool.js";
import * as Scheduler$Wonderjs      from "../../../../src/core/api/Scheduler.js";
import * as StateTool$Wonderjs      from "../../tool/core/StateTool.js";
import * as Transform$Wonderjs      from "../../../../src/ecs/component/api/transform/Transform.js";
import * as DirectorTool$Wonderjs   from "../../tool/core/DirectorTool.js";
import * as GameObjectTool$Wonderjs from "../../tool/core/GameObjectTool.js";

describe("Scheduler", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var state = [StateTool$Wonderjs.createState(/* None */0, /* () */0)];
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                state[0] = DirectorTool$Wonderjs.prepare(TestTool$Wonderjs.init(sandbox, /* None */0, /* None */0, /* () */0));
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        Wonder_jest.test("update scheduler before update system", (function () {
                TestTool$Wonderjs.closeContractCheck(/* () */0);
                var match = GameObjectTool$Wonderjs.createGameObject(state[0]);
                var transform = match[2];
                var localPos = /* tuple */[
                  1,
                  2,
                  3
                ];
                var state$1 = Scheduler$Wonderjs.scheduleLoop((function (_, state) {
                        return Transform$Wonderjs.setTransformLocalPosition(transform, localPos, state);
                      }), match[0]);
                var state$2 = DirectorTool$Wonderjs.init(state$1);
                var state$3 = DirectorTool$Wonderjs.sync(state$2, /* Some */[1], /* () */0);
                return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](Transform$Wonderjs.getTransformLocalPosition(transform, state$3)), localPos);
              }));
        describe("scheduleLoop", (function () {
                Wonder_jest.test("test no schedule shouldn't error", (function () {
                        return Wonder_jest.Expect[/* toThrow */18](Wonder_jest.Expect[/* not_ */22](Wonder_jest.Expect[/* expect */0]((function () {
                                              DirectorTool$Wonderjs.init(state[0]);
                                              return /* () */0;
                                            }))));
                      }));
                return Wonder_jest.test("schedule the task in each frame", (function () {
                              TestTool$Wonderjs.closeContractCheck(/* () */0);
                              var result = [0];
                              var state$1 = Scheduler$Wonderjs.scheduleLoop((function (elapsed, state) {
                                      result[0] += elapsed;
                                      return state;
                                    }), state[0]);
                              var state$2 = DirectorTool$Wonderjs.init(state$1);
                              var state$3 = DirectorTool$Wonderjs.sync(state$2, /* Some */[1], /* () */0);
                              DirectorTool$Wonderjs.sync(state$3, /* Some */[2], /* () */0);
                              return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](result[0]), 3);
                            }));
              }));
        return /* () */0;
      }));

export {
  
}
/*  Not a pure module */
