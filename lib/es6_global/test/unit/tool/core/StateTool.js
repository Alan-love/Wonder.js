// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                           from "../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Wonder_jest                     from "../../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as Main$Wonderjs                   from "../../../../src/core/api/Main.js";
import * as State$Wonderjs                  from "../../../../src/core/api/State.js";
import * as MainTool$Wonderjs               from "./MainTool.js";
import * as ArraySystem$Wonderjs            from "../../../../src/structure/ArraySystem.js";
import * as StateSystem$Wonderjs            from "../../../../src/core/StateSystem.js";
import * as SparseMapSystem$WonderCommonlib from "../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";

function getStateData() {
  return State$Wonderjs.getStateData(/* () */0);
}

function getState() {
  return StateSystem$Wonderjs.getState(State$Wonderjs.getStateData(/* () */0));
}

function createNewCompleteState() {
  return Main$Wonderjs.setMainConfig(MainTool$Wonderjs.buildMainConfig(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0));
}

function testShadowCopyArrayLikeMapData(getMapFunc, state) {
  Curry._1(getMapFunc, state).forEach((function (map) {
          SparseMapSystem$WonderCommonlib.set(0, SparseMapSystem$WonderCommonlib.createEmpty(/* () */0), map);
          return /* () */0;
        }));
  var copiedState = State$Wonderjs.deepCopyStateForRestore(state);
  Curry._1(getMapFunc, copiedState).forEach((function (map) {
          SparseMapSystem$WonderCommonlib.deleteVal(0, map);
          return /* () */0;
        }));
  var match = ArraySystem$Wonderjs.reduceOneParam((function (param, map) {
          var targetArr = param[1];
          var sourceArr = param[0];
          sourceArr.push(SparseMapSystem$WonderCommonlib.unsafeGet(0, map));
          targetArr.push(undefined);
          return /* tuple */[
                  sourceArr,
                  targetArr
                ];
        }), /* tuple */[
        /* array */[],
        /* array */[]
      ], Curry._1(getMapFunc, state));
  return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* not_ */22](Wonder_jest.Expect[/* expect */0](match[0])), match[1]);
}

var deepCopyStateForRestore = State$Wonderjs.deepCopyStateForRestore;

var restore = State$Wonderjs.restoreState;

var createState = StateSystem$Wonderjs.createState;

export {
  deepCopyStateForRestore        ,
  restore                        ,
  getStateData                   ,
  getState                       ,
  createState                    ,
  createNewCompleteState         ,
  testShadowCopyArrayLikeMapData ,
  
}
/* Wonder_jest Not a pure module */
