// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry from "../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon from "../../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";

function createGetContextStub(fakeGl, sandbox) {
  return Sinon.returns(fakeGl, Curry._1(Sinon.createEmptyStub, sandbox[0]));
}

function buildFakeGl(sandbox) {
  return {
          VERTEX_SHADER: 0,
          FRAGMENT_SHADER: 1,
          HIGH_FLOAT: 2,
          MEDIUM_FLOAT: 3,
          getShaderPrecisionFormat: Sinon.returns({
                precision: 1
              }, Curry._1(Sinon.createEmptyStub, sandbox[0])),
          getExtension: Sinon.returns(0, Curry._1(Sinon.createEmptyStub, sandbox[0]))
        };
}

function buildFakeDomForNotPassCanvasId(sandbox) {
  var fakeGl = buildFakeGl(sandbox);
  var canvasDom = {
    id: "a",
    nodeType: 1,
    getContext: createGetContextStub(fakeGl, sandbox)
  };
  var div = {
    innerHTML: "",
    firstChild: canvasDom
  };
  var body = {
    prepend: Curry._1(Sinon.createEmptyStub, sandbox[0])
  };
  Sinon.returns(div, Sinon.withOneArg("div", Curry._3(Sinon.createMethodStub, sandbox[0], document, "createElement")));
  Sinon.returns(/* :: */[
        body,
        /* [] */0
      ], Sinon.withOneArg("body", Curry._3(Sinon.createMethodStub, sandbox[0], document, "querySelectorAll")));
  return /* tuple */[
          canvasDom,
          fakeGl,
          div,
          body
        ];
}

function buildMainConfig($staropt$star, $staropt$star$1, $staropt$star$2, $staropt$star$3, $staropt$star$4, _) {
  var bufferConfig = $staropt$star ? $staropt$star[0] : undefined;
  var gpuConfig = $staropt$star$1 ? $staropt$star$1[0] : undefined;
  var canvasId = $staropt$star$2 ? $staropt$star$2[0] : undefined;
  var isTest = $staropt$star$3 ? $staropt$star$3[0] : undefined;
  var contextConfig = $staropt$star$4 ? $staropt$star$4[0] : undefined;
  return {
          bufferConfig: bufferConfig,
          gpuConfig: gpuConfig,
          canvasId: canvasId,
          isTest: isTest,
          contextConfig: contextConfig
        };
}

export {
  createGetContextStub           ,
  buildFakeGl                    ,
  buildFakeDomForNotPassCanvasId ,
  buildMainConfig                ,
  
}
/* Sinon Not a pure module */
