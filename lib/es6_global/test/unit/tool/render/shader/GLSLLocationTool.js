// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Sinon                       from "../../../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Sinon$1                     from "sinon";
import * as Caml_array                  from "../../../../../../../node_modules/bs-platform/lib/es6/caml_array.js";
import * as GLSLLocationSystem$Wonderjs from "../../../../../src/renderer/shader/location/GLSLLocationSystem.js";

function _getLocation($staropt$star, sandbox, name) {
  var pos = $staropt$star ? $staropt$star[0] : 10;
  var stub = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
  Sinon.returns(pos, Sinon.withTwoArgs(Sinon$1.match.any, name, stub));
  return stub;
}

function getUniformLocationWithPosArr(sandbox, posArr, nameArr) {
  var stub = Sinon.createEmptyStubWithJsObjSandbox(sandbox);
  posArr.forEach((function (pos, i) {
          Sinon.returns(pos, Sinon.withTwoArgs(Sinon$1.match.any, Caml_array.caml_array_get(nameArr, i), stub));
          return /* () */0;
        }));
  return stub;
}

var getGLSLLocationData = GLSLLocationSystem$Wonderjs._getGLSLLocationData;

var getAttribLocation = _getLocation;

var getUniformLocation = _getLocation;

export {
  getGLSLLocationData          ,
  _getLocation                 ,
  getAttribLocation            ,
  getUniformLocation           ,
  getUniformLocationWithPosArr ,
  
}
/* Sinon Not a pure module */
