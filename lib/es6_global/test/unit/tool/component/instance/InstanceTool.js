// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Sinon                   from "../../../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Js_option               from "../../../../../../../node_modules/bs-platform/lib/es6/js_option.js";
import * as GameObject$Wonderjs     from "../../../../../src/ecs/admin/api/GameObject.js";
import * as GpuDetectTool$Wonderjs  from "../../render/device/GpuDetectTool.js";
import * as SourceInstance$Wonderjs from "../../../../../src/ecs/component/api/instance/SourceInstance.js";

function addSourceInstance(gameObject, state) {
  var match = SourceInstance$Wonderjs.createSourceInstance(state);
  var sourceInstance = match[1];
  var state$1 = GameObject$Wonderjs.addGameObjectSourceInstanceComponent(gameObject, sourceInstance, match[0]);
  return /* tuple */[
          state$1,
          sourceInstance
        ];
}

function setGpuDetectDataAllowHardwareInstance(sandbox, state) {
  var newrecord = state.slice();
  var init = state[/* gpuDetectData */4];
  newrecord[/* gpuDetectData */4] = /* record */[
    /* extensionInstancedArrays : Some */[{
        drawElementsInstancedANGLE: Sinon.createEmptyStubWithJsObjSandbox(sandbox),
        vertexAttribDivisorANGLE: Sinon.createEmptyStubWithJsObjSandbox(sandbox)
      }],
    /* precision */init[/* precision */1]
  ];
  return newrecord;
}

function setGpuDetectDataAllowBatchInstance(state) {
  var newrecord = state.slice();
  var init = state[/* gpuDetectData */4];
  newrecord[/* gpuDetectData */4] = /* record */[
    /* extensionInstancedArrays : None */0,
    /* precision */init[/* precision */1]
  ];
  return newrecord;
}

function getExtensionInstancedArrays(state) {
  return Js_option.getExn(GpuDetectTool$Wonderjs.getData(state)[/* extensionInstancedArrays */0]);
}

export {
  addSourceInstance                     ,
  setGpuDetectDataAllowHardwareInstance ,
  setGpuDetectDataAllowBatchInstance    ,
  getExtensionInstancedArrays           ,
  
}
/* Sinon Not a pure module */
