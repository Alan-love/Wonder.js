// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                                    from "../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon                                    from "../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Sinon$1                                  from "sinon";
import * as Wonder_jest                              from "../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as TestTool$Wonderjs                        from "../../tool/TestTool.js";
import * as MainStateTool$Wonderjs                   from "../../tool/service/state/MainStateTool.js";
import * as PerspectiveCameraProjectionTool$Wonderjs from "../../tool/service/camera/PerspectiveCameraProjectionTool.js";

describe("UpdatePerspectiveCameraProjectionService", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var state = [MainStateTool$Wonderjs.createState(/* () */0)];
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                state[0] = TestTool$Wonderjs.init(sandbox, /* None */0, /* None */0, /* () */0);
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        describe("updateCameraProjection", (function () {
                return Wonder_jest.test("if not has fovy/aspect/near/far value, error", (function () {
                              return Wonder_jest.Expect[/* toThrowMessage */20]("fovy,aspect,near,far should all exist", Wonder_jest.Expect[/* expect */0]((function () {
                                                return PerspectiveCameraProjectionTool$Wonderjs.updateCameraProjection(0, state[0]);
                                              })));
                            }));
              }));
        return /* () */0;
      }));

export {
  
}
/*  Not a pure module */
