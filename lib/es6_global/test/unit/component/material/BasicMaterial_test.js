// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                      from "../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Sinon                      from "../../../../../../node_modules/wonder-bs-sinon/lib/es6_global/src/sinon.js";
import * as Sinon$1                    from "sinon";
import * as Wonder_jest                from "../../../../../../node_modules/wonder-bs-jest/lib/es6_global/src/wonder_jest.js";
import * as GlTool$Wonderjs            from "../../tool/gl/GlTool.js";
import * as TestTool$Wonderjs          from "../../tool/TestTool.js";
import * as StateTool$Wonderjs         from "../../tool/core/StateTool.js";
import * as GameObject$Wonderjs        from "../../../../src/ecs/admin/api/GameObject.js";
import * as MaterialTool$Wonderjs      from "../../tool/component/material/MaterialTool.js";
import * as BasicMaterial$Wonderjs     from "../../../../src/ecs/component/api/material/BasicMaterial.js";
import * as BasicMaterialTool$Wonderjs from "../../tool/component/material/BasicMaterialTool.js";

describe("BasicMaterial", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var state = [StateTool$Wonderjs.createState(/* None */0, /* () */0)];
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                state[0] = TestTool$Wonderjs.init(sandbox, /* None */0, /* None */0, /* () */0);
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        describe("createBasicMaterial", (function () {
                return Wonder_jest.test("create a new material which is just index(int)", (function () {
                              var match = BasicMaterial$Wonderjs.createBasicMaterial(state[0]);
                              return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](match[1]), 0);
                            }));
              }));
        describe("init", (function () {
                describe("contract check", (function () {
                        return Wonder_jest.test("shouldn't dispose any material before init", (function () {
                                      var match = BasicMaterial$Wonderjs.createBasicMaterial(state[0]);
                                      var match$1 = BasicMaterial$Wonderjs.createBasicMaterial(match[0]);
                                      var state$1 = MaterialTool$Wonderjs.dispose(match[1], match$1[0]);
                                      return Wonder_jest.Expect[/* toThrowMessage */20]("shouldn't dispose any material before init", Wonder_jest.Expect[/* expect */0]((function () {
                                                        BasicMaterialTool$Wonderjs.initMaterials(GlTool$Wonderjs.getGl(state$1), state$1);
                                                        return /* () */0;
                                                      })));
                                    }));
                      }));
                return /* () */0;
              }));
        describe("disposeComponent", (function () {
                describe("test add new one after dispose old one", (function () {
                        Wonder_jest.test("use disposed index as new index firstly", (function () {
                                var match = BasicMaterialTool$Wonderjs.createGameObject(state[0]);
                                var material1 = match[2];
                                var match$1 = BasicMaterialTool$Wonderjs.createGameObject(match[0]);
                                var state$1 = GameObject$Wonderjs.disposeGameObjectMaterialComponent(match[1], material1, match$1[0]);
                                var match$2 = BasicMaterialTool$Wonderjs.createGameObject(state$1);
                                return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](match$2[2]), material1);
                              }));
                        return Wonder_jest.test("if has no disposed index, get index from meshRendererData.index", (function () {
                                      var match = BasicMaterialTool$Wonderjs.createGameObject(state[0]);
                                      var material1 = match[2];
                                      var match$1 = BasicMaterialTool$Wonderjs.createGameObject(match[0]);
                                      var state$1 = GameObject$Wonderjs.disposeGameObjectMaterialComponent(match[1], material1, match$1[0]);
                                      var match$2 = BasicMaterialTool$Wonderjs.createGameObject(state$1);
                                      var match$3 = BasicMaterialTool$Wonderjs.createGameObject(match$2[0]);
                                      return Curry._2(Wonder_jest.Expect[/* Operators */23][/* = */5], Wonder_jest.Expect[/* expect */0](/* tuple */[
                                                      match$2[2],
                                                      match$3[2]
                                                    ]), /* tuple */[
                                                  material1,
                                                  match$1[2] + 1 | 0
                                                ]);
                                    }));
                      }));
                return /* () */0;
              }));
        return /* () */0;
      }));

export {
  
}
/*  Not a pure module */
