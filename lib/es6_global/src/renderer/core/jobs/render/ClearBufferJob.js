// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                          from "../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as RenderConfigSystem$Wonderjs    from "../../../config/render/RenderConfigSystem.js";
import * as DeviceManagerSystem$Wonderjs   from "../../../device/DeviceManagerSystem.js";
import * as ExceptionHandleSystem$Wonderjs from "../../../../exception/ExceptionHandleSystem.js";

function _getBitFromFlags(gl, param, getBufferBitFunc, bit) {
  var match = +param[1].includes(param[0]);
  if (match !== 0) {
    if (bit) {
      return /* Some */[bit[0] | Curry._1(getBufferBitFunc, gl)];
    } else {
      return /* Some */[Curry._1(getBufferBitFunc, gl)];
    }
  } else {
    return bit;
  }
}

function _getBit(gl, flags) {
  var match = _getBitFromFlags(gl, /* tuple */[
        "STENCIL_BUFFER",
        flags
      ], (function (prim) {
          return prim.STENCIL_BUFFER_BIT;
        }), _getBitFromFlags(gl, /* tuple */[
            "DEPTH_BUFFER",
            flags
          ], (function (prim) {
              return prim.DEPTH_BUFFER_BIT;
            }), _getBitFromFlags(gl, /* tuple */[
                "COLOR_BUFFER",
                flags
              ], (function (prim) {
                  return prim.COLOR_BUFFER_BIT;
                }), /* None */0)));
  if (match) {
    return match[0];
  } else {
    return ExceptionHandleSystem$Wonderjs.throwMessage("should find bit");
  }
}

function getJob(param, gl, state) {
  var flags = param[0];
  if (flags) {
    return DeviceManagerSystem$Wonderjs.clearBuffer(gl, _getBit(gl, flags[0]), state);
  } else {
    return RenderConfigSystem$Wonderjs.throwJobFlagsShouldBeDefined(/* () */0);
  }
}

export {
  _getBitFromFlags ,
  _getBit          ,
  getJob           ,
  
}
/* RenderConfigSystem-Wonderjs Not a pure module */
