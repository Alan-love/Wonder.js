// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Js_option from "../../../../../node_modules/bs-platform/lib/es6/js_option.js";

function _getRenderData(state) {
  return state[/* renderData */21];
}

function _getCameraData(state) {
  return Js_option.getExn(state[/* renderData */21][/* cameraData */1]);
}

function getCameraVMatrixDataFromState(state) {
  return Js_option.getExn(state[/* renderData */21][/* cameraData */1])[/* vMatrix */0];
}

function getCameraPMatrixDataFromState(state) {
  return Js_option.getExn(state[/* renderData */21][/* cameraData */1])[/* pMatrix */1];
}

function getRenderArrayFromState(state) {
  return state[/* renderData */21][/* renderArray */0];
}

function setRenderArray(renderArray, state) {
  var match = renderArray.length;
  state[/* renderData */21][/* renderArray */0] = match !== 0 ? /* Some */[renderArray] : /* None */0;
  return /* () */0;
}

function setCameraData(cameraData, state) {
  state[/* renderData */21][/* cameraData */1] = cameraData;
  return /* () */0;
}

function restore(_, targetState) {
  var newrecord = targetState.slice();
  newrecord[/* renderData */21] = /* record */[
    /* renderArray : None */0,
    /* cameraData : None */0
  ];
  return newrecord;
}

export {
  _getRenderData                ,
  _getCameraData                ,
  getCameraVMatrixDataFromState ,
  getCameraPMatrixDataFromState ,
  getRenderArrayFromState       ,
  setRenderArray                ,
  setCameraData                 ,
  restore                       ,
  
}
/* No side effect */
