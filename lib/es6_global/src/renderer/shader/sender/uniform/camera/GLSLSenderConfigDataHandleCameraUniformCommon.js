// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Log$WonderLog                                                    from "../../../../../../../../node_modules/wonder-log/lib/es6_global/src/Log.js";
import * as RenderDataSystem$Wonderjs                                        from "../../../../render/RenderDataSystem.js";
import * as GLSLSenderConfigDataHandleUniformShaderCachableCommon$Wonderjs   from "../GLSLSenderConfigDataHandleUniformShaderCachableCommon.js";
import * as GLSLSenderConfigDataHandleUniformShaderNoCachableCommon$Wonderjs from "../GLSLSenderConfigDataHandleUniformShaderNoCachableCommon.js";

function addCameraSendData(param, sendDataArrTuple) {
  var type_ = param[3];
  var pos = param[1];
  var field = param[0];
  switch (field) {
    case "pMatrix" : 
        return GLSLSenderConfigDataHandleUniformShaderNoCachableCommon$Wonderjs.addUniformSendDataByType(/* tuple */[
                    type_,
                    pos
                  ], sendDataArrTuple, RenderDataSystem$Wonderjs.getCameraPMatrixDataFromState);
    case "position" : 
        return GLSLSenderConfigDataHandleUniformShaderCachableCommon$Wonderjs.addUniformSendDataByType(/* tuple */[
                    param[4],
                    param[2],
                    pos,
                    type_
                  ], sendDataArrTuple, RenderDataSystem$Wonderjs.getCameraPositionDataFromState);
    case "vMatrix" : 
        return GLSLSenderConfigDataHandleUniformShaderNoCachableCommon$Wonderjs.addUniformSendDataByType(/* tuple */[
                    type_,
                    pos
                  ], sendDataArrTuple, RenderDataSystem$Wonderjs.getCameraVMatrixDataFromState);
    default:
      return Log$WonderLog.fatal(Log$WonderLog.buildFatalMessage("_addCameraSendData", "unknow field:" + (String(field) + ""), "", "", ""));
  }
}

export {
  addCameraSendData ,
  
}
/* Log-WonderLog Not a pure module */
