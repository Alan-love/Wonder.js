// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Log$WonderLog                    from "../../../../../../node_modules/wonder-log/lib/es6_global/src/Log.js";
import * as Contract$WonderLog               from "../../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateData$Wonderjs               from "../../../core/StateData.js";
import * as JudgeUtils$WonderCommonlib       from "../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/JudgeUtils.js";
import * as ArraySystem$WonderCommonlib      from "../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArraySystem.js";
import * as GLSLSenderStateUtils$Wonderjs    from "./utils/GLSLSenderStateUtils.js";
import * as GLSLSenderSendDataUtils$Wonderjs from "./utils/GLSLSenderSendDataUtils.js";

function disableVertexAttribArray(gl, state) {
  Contract$WonderLog.requireCheck((function () {
          return Contract$WonderLog.test(Log$WonderLog.buildAssertMessage("vertexAttribHistory:array(\'a) has no hole", "not"), (function () {
                        var match = GLSLSenderStateUtils$Wonderjs.getGLSLSenderData(state);
                        var vertexAttribHistoryArray = match[/* vertexAttribHistoryArray */9];
                        return Contract$WonderLog.Operators[/* = */0](vertexAttribHistoryArray.filter(JudgeUtils$WonderCommonlib.isBool).length, vertexAttribHistoryArray.length);
                      }));
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  var data = GLSLSenderStateUtils$Wonderjs.getGLSLSenderData(state);
  var vertexAttribHistoryArray = data[/* vertexAttribHistoryArray */9];
  vertexAttribHistoryArray.forEach((function (isEnable, pos) {
          if (isEnable !== 0) {
            gl.disableVertexAttribArray(pos);
            return /* () */0;
          } else {
            return Log$WonderLog.fatal(Log$WonderLog.buildFatalMessage("disableVertexAttribArray", "should always be true", "", "", ""));
          }
        }));
  data[/* vertexAttribHistoryArray */9] = ArraySystem$WonderCommonlib.createEmpty(/* () */0);
  return state;
}

var getGLSLSenderData = GLSLSenderStateUtils$Wonderjs.getGLSLSenderData;

var deepCopyStateForRestore = GLSLSenderStateUtils$Wonderjs.deepCopyStateForRestore;

var restore = GLSLSenderStateUtils$Wonderjs.restore;

var sendFloat = GLSLSenderSendDataUtils$Wonderjs.sendFloat;

var sendFloat3 = GLSLSenderSendDataUtils$Wonderjs.sendFloat3;

var sendVec3 = GLSLSenderSendDataUtils$Wonderjs.sendVec3;

export {
  getGLSLSenderData        ,
  disableVertexAttribArray ,
  deepCopyStateForRestore  ,
  restore                  ,
  sendFloat                ,
  sendFloat3               ,
  sendVec3                 ,
  
}
/* Log-WonderLog Not a pure module */
