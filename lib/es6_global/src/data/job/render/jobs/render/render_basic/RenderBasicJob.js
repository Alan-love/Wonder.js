// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as ArraySystem$Wonderjs                  from "../../../../../../structure/ArraySystem.js";
import * as GeometryAdmin$Wonderjs                from "../../../../../../ecs/admin/component/GeometryAdmin.js";
import * as InstanceUtils$Wonderjs                from "../../../../../../renderer/utils/InstanceUtils.js";
import * as GameObjectAdmin$Wonderjs              from "../../../../../../ecs/admin/GameObjectAdmin.js";
import * as RenderDataSystem$Wonderjs             from "../../../../../../renderer/render/RenderDataSystem.js";
import * as GLSLSenderDrawUtils$Wonderjs          from "../../../../../../renderer/shader/sender/utils/GLSLSenderDrawUtils.js";
import * as RenderBasicJobCommon$Wonderjs         from "./RenderBasicJobCommon.js";
import * as RenderBasicInstanceJobCommon$Wonderjs from "./instance/RenderBasicInstanceJobCommon.js";

function _getBasicMaterialRenderArray(renderArray, state) {
  return renderArray.filter((function (uid) {
                return GameObjectAdmin$Wonderjs.hasBasicMaterialComponent(uid, state);
              }));
}

function _render(gl, state) {
  var match = RenderDataSystem$Wonderjs.getRenderArrayFromState(state);
  if (match) {
    return ArraySystem$Wonderjs.reduceState((function (state, uid) {
                  if (InstanceUtils$Wonderjs.isSourceInstance(uid, state)) {
                    return RenderBasicInstanceJobCommon$Wonderjs.render(gl, uid, state);
                  } else {
                    var match = RenderBasicJobCommon$Wonderjs.render(gl, uid, state);
                    var state$1 = match[0];
                    GLSLSenderDrawUtils$Wonderjs.drawElement(/* tuple */[
                          GeometryAdmin$Wonderjs.getDrawMode(gl),
                          GeometryAdmin$Wonderjs.getIndexType(gl),
                          GeometryAdmin$Wonderjs.getIndexTypeSize(gl),
                          GeometryAdmin$Wonderjs.getIndicesCount(match[2], state$1)
                        ], gl);
                    return state$1;
                  }
                }), state, _getBasicMaterialRenderArray(match[0], state));
  } else {
    return state;
  }
}

function execJob(_, gl, state) {
  return _render(gl, state);
}

export {
  _getBasicMaterialRenderArray ,
  _render                      ,
  execJob                      ,
  
}
/* ArraySystem-Wonderjs Not a pure module */
