// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as MappedIndexService$Wonderjs          from "../../../primitiive/MappedIndexService.js";
import * as DisposeLightService$Wonderjs         from "../DisposeLightService.js";
import * as IndexDirectionLightService$Wonderjs  from "./IndexDirectionLightService.js";
import * as RecordDirectionLightService$Wonderjs from "./RecordDirectionLightService.js";

function isAlive(light, record) {
  return DisposeLightService$Wonderjs.isAlive(light, IndexDirectionLightService$Wonderjs.getMappedIndexMap(record));
}

function _disposeData(sourceIndex, record) {
  var mappedIndexMap = record[/* mappedIndexMap */4];
  var index = record[/* index */0];
  var gameObjectMap = DisposeLightService$Wonderjs.disposeData(sourceIndex, record[/* gameObjectMap */5]);
  var lastComponentIndex = index - 1 | 0;
  var mappedSourceIndex = MappedIndexService$Wonderjs.getMappedIndex(sourceIndex, mappedIndexMap);
  return /* record */[
          /* index */index - 1 | 0,
          /* buffer */record[/* buffer */1],
          /* colors */DisposeLightService$Wonderjs.swapData(/* tuple */[
                mappedSourceIndex,
                lastComponentIndex
              ], /* tuple */[
                mappedIndexMap,
                RecordDirectionLightService$Wonderjs.getColorDataSize(/* () */0),
                RecordDirectionLightService$Wonderjs.getDefaultColor(/* () */0)
              ], DisposeLightService$Wonderjs.deleteBySwapAndResetFloat32TypeArr, record[/* colors */2]),
          /* intensities */DisposeLightService$Wonderjs.swapData(/* tuple */[
                mappedSourceIndex,
                lastComponentIndex
              ], /* tuple */[
                mappedIndexMap,
                RecordDirectionLightService$Wonderjs.getIntensityDataSize(/* () */0),
                RecordDirectionLightService$Wonderjs.getDefaultIntensity(/* () */0)
              ], DisposeLightService$Wonderjs.deleteSingleValueBySwapAndResetFloat32TypeArr, record[/* intensities */3]),
          /* mappedIndexMap */DisposeLightService$Wonderjs.setMappedIndexMap(sourceIndex, mappedSourceIndex, lastComponentIndex, mappedIndexMap),
          /* gameObjectMap */gameObjectMap
        ];
}

function handleDisposeComponent(light, record) {
  return DisposeLightService$Wonderjs.handleDisposeComponent(light, /* tuple */[
              isAlive,
              _disposeData
            ], record);
}

function handleBatchDisposeComponent(lightArray, _, record) {
  return DisposeLightService$Wonderjs.handleBatchDisposeComponent(lightArray, /* tuple */[
              isAlive,
              _disposeData
            ], record);
}

export {
  isAlive                     ,
  _disposeData                ,
  handleDisposeComponent      ,
  handleBatchDisposeComponent ,
  
}
/* DisposeLightService-Wonderjs Not a pure module */
