// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Log$WonderLog                    from "../../../../../../../node_modules/wonder-log/lib/es6_global/src/Log.js";
import * as Contract$WonderLog               from "../../../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as MainStateData$Wonderjs           from "../../../state/main/data/MainStateData.js";
import * as IsDebugMainService$Wonderjs      from "../../../state/main/state/IsDebugMainService.js";
import * as SparseMapService$WonderCommonlib from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapService.js";

function markModelMatrixIsStatic(sourceInstance, isStatic, record) {
  var newrecord = record.slice();
  newrecord[/* isTransformStaticMap */4] = SparseMapService$WonderCommonlib.set(sourceInstance, isStatic, record[/* isTransformStaticMap */4]);
  return newrecord;
}

function isTransformStatic(sourceInstance, param) {
  return Contract$WonderLog.ensureCheck((function (isStatic) {
                return Contract$WonderLog.test(Log$WonderLog.buildAssertMessage("isStatic exist", "not"), (function () {
                              return Contract$WonderLog.assertNullableExist(isStatic);
                            }));
              }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData), SparseMapService$WonderCommonlib.unsafeGet(sourceInstance, param[/* isTransformStaticMap */4]));
}

function markIsSendTransformMatrixData(sourceInstance, isSend, record) {
  var newrecord = record.slice();
  newrecord[/* isSendTransformMatrixDataMap */5] = SparseMapService$WonderCommonlib.set(sourceInstance, isSend, record[/* isSendTransformMatrixDataMap */5]);
  return newrecord;
}

function isSendTransformMatrixData(sourceInstance, param) {
  return Contract$WonderLog.ensureCheck((function (isSend) {
                return Contract$WonderLog.test(Log$WonderLog.buildAssertMessage("isSend exist", "not"), (function () {
                              return Contract$WonderLog.assertNullableExist(isSend);
                            }));
              }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData), SparseMapService$WonderCommonlib.unsafeGet(sourceInstance, param[/* isSendTransformMatrixDataMap */5]));
}

export {
  markModelMatrixIsStatic       ,
  isTransformStatic             ,
  markIsSendTransformMatrixData ,
  isSendTransformMatrixData     ,
  
}
/* Log-WonderLog Not a pure module */
