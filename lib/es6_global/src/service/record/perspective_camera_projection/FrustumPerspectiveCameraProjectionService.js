// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as OptionService$Wonderjs           from "../../atom/OptionService.js";
import * as DirtyArrayService$Wonderjs       from "../../primitiive/DirtyArrayService.js";
import * as SparseMapService$WonderCommonlib from "../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapService.js";

function _setMapValue(cameraProjection, dirtyArray, record) {
  var newrecord = record.slice();
  newrecord[/* dirtyArray */1] = DirtyArrayService$Wonderjs.addToDirtyArray(cameraProjection, dirtyArray);
  return newrecord;
}

function getFovy(cameraProjection, record) {
  return SparseMapService$WonderCommonlib.get(cameraProjection, record[/* fovyMap */5]);
}

function unsafeGetFovy(cameraProjection, record) {
  return OptionService$Wonderjs.unsafeGet(SparseMapService$WonderCommonlib.get(cameraProjection, record[/* fovyMap */5]));
}

function setFovy(cameraProjection, fovy, record) {
  var newrecord = record.slice();
  return _setMapValue(cameraProjection, record[/* dirtyArray */1], (newrecord[/* fovyMap */5] = SparseMapService$WonderCommonlib.set(cameraProjection, fovy, record[/* fovyMap */5]), newrecord));
}

function getAspect(cameraProjection, record) {
  return SparseMapService$WonderCommonlib.get(cameraProjection, record[/* aspectMap */6]);
}

function unsafeGetAspect(cameraProjection, record) {
  return OptionService$Wonderjs.unsafeGet(SparseMapService$WonderCommonlib.get(cameraProjection, record[/* aspectMap */6]));
}

function setAspect(cameraProjection, aspect, record) {
  var newrecord = record.slice();
  return _setMapValue(cameraProjection, record[/* dirtyArray */1], (newrecord[/* aspectMap */6] = SparseMapService$WonderCommonlib.set(cameraProjection, aspect, record[/* aspectMap */6]), newrecord));
}

function getNear(cameraProjection, record) {
  return SparseMapService$WonderCommonlib.get(cameraProjection, record[/* nearMap */3]);
}

function unsafeGetNear(cameraProjection, record) {
  return OptionService$Wonderjs.unsafeGet(SparseMapService$WonderCommonlib.get(cameraProjection, record[/* nearMap */3]));
}

function setNear(cameraProjection, near, record) {
  var newrecord = record.slice();
  return _setMapValue(cameraProjection, record[/* dirtyArray */1], (newrecord[/* nearMap */3] = SparseMapService$WonderCommonlib.set(cameraProjection, near, record[/* nearMap */3]), newrecord));
}

function getFar(cameraProjection, record) {
  return SparseMapService$WonderCommonlib.get(cameraProjection, record[/* farMap */4]);
}

function unsafeGetFar(cameraProjection, record) {
  return OptionService$Wonderjs.unsafeGet(SparseMapService$WonderCommonlib.get(cameraProjection, record[/* farMap */4]));
}

function setFar(cameraProjection, far, record) {
  var newrecord = record.slice();
  return _setMapValue(cameraProjection, record[/* dirtyArray */1], (newrecord[/* farMap */4] = SparseMapService$WonderCommonlib.set(cameraProjection, far, record[/* farMap */4]), newrecord));
}

export {
  _setMapValue    ,
  getFovy         ,
  unsafeGetFovy   ,
  setFovy         ,
  getAspect       ,
  unsafeGetAspect ,
  setAspect       ,
  getNear         ,
  unsafeGetNear   ,
  setNear         ,
  getFar          ,
  unsafeGetFar    ,
  setFar          ,
  
}
/* OptionService-Wonderjs Not a pure module */
