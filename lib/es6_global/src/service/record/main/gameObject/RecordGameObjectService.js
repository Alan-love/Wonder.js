// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as SparseMapService$Wonderjs        from "../../../atom/SparseMapService.js";
import * as ArrayService$WonderCommonlib     from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArrayService.js";
import * as SparseMapService$WonderCommonlib from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapService.js";

function create() {
  return /* record */[
          /* uid */0,
          /* disposeCount */0,
          /* disposedUidMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedUidArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedUidArrayForKeepOrder */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedBasicCameraViewArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedTransformArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedTransformArrayForKeepOrder */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedPerspectiveCameraProjectionArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedBasicMaterialArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedLightMaterialArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedBoxGeometryArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedCustomGeometryArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedSourceInstanceArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedObjectInstanceArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedAmbientLightArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedDirectionLightArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedPointLightArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedMeshRendererComponentArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* disposedMeshRendererUidArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* aliveUidArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
          /* currentGeometryDataMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* transformMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* basicCameraViewMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* perspectiveCameraProjectionMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* meshRendererMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* basicMaterialMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* lightMaterialMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* sourceInstanceMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* objectInstanceMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* ambientLightMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* directionLightMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* pointLightMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0)
        ];
}

function deepCopyForRestore(record) {
  var uid = record[/* uid */0];
  var disposeCount = record[/* disposeCount */1];
  var disposedUidMap = record[/* disposedUidMap */2];
  var disposedUidArray = record[/* disposedUidArray */3];
  var disposedUidArrayForKeepOrder = record[/* disposedUidArrayForKeepOrder */4];
  var disposedBasicCameraViewArray = record[/* disposedBasicCameraViewArray */5];
  var disposedTransformArray = record[/* disposedTransformArray */6];
  var disposedTransformArrayForKeepOrder = record[/* disposedTransformArrayForKeepOrder */7];
  var disposedPerspectiveCameraProjectionArray = record[/* disposedPerspectiveCameraProjectionArray */8];
  var disposedBasicMaterialArray = record[/* disposedBasicMaterialArray */9];
  var disposedLightMaterialArray = record[/* disposedLightMaterialArray */10];
  var disposedBoxGeometryArray = record[/* disposedBoxGeometryArray */11];
  var disposedCustomGeometryArray = record[/* disposedCustomGeometryArray */12];
  var disposedSourceInstanceArray = record[/* disposedSourceInstanceArray */13];
  var disposedObjectInstanceArray = record[/* disposedObjectInstanceArray */14];
  var disposedAmbientLightArray = record[/* disposedAmbientLightArray */15];
  var disposedDirectionLightArray = record[/* disposedDirectionLightArray */16];
  var disposedPointLightArray = record[/* disposedPointLightArray */17];
  var disposedMeshRendererComponentArray = record[/* disposedMeshRendererComponentArray */18];
  var disposedMeshRendererUidArray = record[/* disposedMeshRendererUidArray */19];
  var aliveUidArray = record[/* aliveUidArray */20];
  var currentGeometryDataMap = record[/* currentGeometryDataMap */21];
  var transformMap = record[/* transformMap */22];
  var basicCameraViewMap = record[/* basicCameraViewMap */23];
  var perspectiveCameraProjectionMap = record[/* perspectiveCameraProjectionMap */24];
  var meshRendererMap = record[/* meshRendererMap */25];
  var basicMaterialMap = record[/* basicMaterialMap */26];
  var lightMaterialMap = record[/* lightMaterialMap */27];
  var sourceInstanceMap = record[/* sourceInstanceMap */28];
  var objectInstanceMap = record[/* objectInstanceMap */29];
  var ambientLightMap = record[/* ambientLightMap */30];
  var directionLightMap = record[/* directionLightMap */31];
  var pointLightMap = record[/* pointLightMap */32];
  return /* record */[
          /* uid */uid,
          /* disposeCount */disposeCount,
          /* disposedUidMap */SparseMapService$Wonderjs.copy(disposedUidMap),
          /* disposedUidArray */SparseMapService$Wonderjs.copy(disposedUidArray),
          /* disposedUidArrayForKeepOrder */SparseMapService$Wonderjs.copy(disposedUidArrayForKeepOrder),
          /* disposedBasicCameraViewArray */SparseMapService$Wonderjs.copy(disposedBasicCameraViewArray),
          /* disposedTransformArray */SparseMapService$Wonderjs.copy(disposedTransformArray),
          /* disposedTransformArrayForKeepOrder */SparseMapService$Wonderjs.copy(disposedTransformArrayForKeepOrder),
          /* disposedPerspectiveCameraProjectionArray */SparseMapService$Wonderjs.copy(disposedPerspectiveCameraProjectionArray),
          /* disposedBasicMaterialArray */SparseMapService$Wonderjs.copy(disposedBasicMaterialArray),
          /* disposedLightMaterialArray */SparseMapService$Wonderjs.copy(disposedLightMaterialArray),
          /* disposedBoxGeometryArray */SparseMapService$Wonderjs.copy(disposedBoxGeometryArray),
          /* disposedCustomGeometryArray */SparseMapService$Wonderjs.copy(disposedCustomGeometryArray),
          /* disposedSourceInstanceArray */SparseMapService$Wonderjs.copy(disposedSourceInstanceArray),
          /* disposedObjectInstanceArray */SparseMapService$Wonderjs.copy(disposedObjectInstanceArray),
          /* disposedAmbientLightArray */SparseMapService$Wonderjs.copy(disposedAmbientLightArray),
          /* disposedDirectionLightArray */SparseMapService$Wonderjs.copy(disposedDirectionLightArray),
          /* disposedPointLightArray */SparseMapService$Wonderjs.copy(disposedPointLightArray),
          /* disposedMeshRendererComponentArray */SparseMapService$Wonderjs.copy(disposedMeshRendererComponentArray),
          /* disposedMeshRendererUidArray */SparseMapService$Wonderjs.copy(disposedMeshRendererUidArray),
          /* aliveUidArray */SparseMapService$Wonderjs.copy(aliveUidArray),
          /* currentGeometryDataMap */SparseMapService$Wonderjs.copy(currentGeometryDataMap),
          /* transformMap */SparseMapService$Wonderjs.copy(transformMap),
          /* basicCameraViewMap */SparseMapService$Wonderjs.copy(basicCameraViewMap),
          /* perspectiveCameraProjectionMap */SparseMapService$Wonderjs.copy(perspectiveCameraProjectionMap),
          /* meshRendererMap */SparseMapService$Wonderjs.copy(meshRendererMap),
          /* basicMaterialMap */SparseMapService$Wonderjs.copy(basicMaterialMap),
          /* lightMaterialMap */SparseMapService$Wonderjs.copy(lightMaterialMap),
          /* sourceInstanceMap */SparseMapService$Wonderjs.copy(sourceInstanceMap),
          /* objectInstanceMap */SparseMapService$Wonderjs.copy(objectInstanceMap),
          /* ambientLightMap */SparseMapService$Wonderjs.copy(ambientLightMap),
          /* directionLightMap */SparseMapService$Wonderjs.copy(directionLightMap),
          /* pointLightMap */SparseMapService$Wonderjs.copy(pointLightMap)
        ];
}

export {
  create             ,
  deepCopyForRestore ,
  
}
/* SparseMapService-Wonderjs Not a pure module */
