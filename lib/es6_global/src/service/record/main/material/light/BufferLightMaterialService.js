// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Caml_int32                    from "../../../../../../../../node_modules/bs-platform/lib/es6/caml_int32.js";
import * as ShaderIndicesService$Wonderjs from "../../../../primitive/material/ShaderIndicesService.js";

function getDiffuseColorsSize() {
  return 3;
}

function getDiffuseColorsLength(count) {
  return Caml_int32.imul(count, 3);
}

function getDiffuseColorsOffset(count) {
  return Caml_int32.imul(ShaderIndicesService$Wonderjs.getShaderIndicesLength(count), Uint32Array.BYTES_PER_ELEMENT);
}

function getSpecularColorsSize() {
  return 3;
}

function getSpecularColorsLength(count) {
  return Caml_int32.imul(count, 3);
}

function getSpecularColorsOffset(count) {
  return Caml_int32.imul(ShaderIndicesService$Wonderjs.getShaderIndicesLength(count), Uint32Array.BYTES_PER_ELEMENT) + Caml_int32.imul(Caml_int32.imul(count, 3), Float32Array.BYTES_PER_ELEMENT) | 0;
}

function getShininessSize() {
  return 1;
}

function getShininessLength(count) {
  return (count << 0);
}

function getShininessOffset(count) {
  return getSpecularColorsOffset(count) + Caml_int32.imul(Caml_int32.imul(count, 3), Float32Array.BYTES_PER_ELEMENT) | 0;
}

function getDiffuseColorIndex(index) {
  return Caml_int32.imul(index, 3);
}

function getSpecularColorIndex(index) {
  return Caml_int32.imul(index, 3);
}

function getShininessIndex(index) {
  return (index << 0);
}

function getTotalByteLength(count) {
  return Caml_int32.imul(Caml_int32.imul(count, Uint32Array.BYTES_PER_ELEMENT), ShaderIndicesService$Wonderjs.getShaderIndicesSize(/* () */0)) + Caml_int32.imul(Caml_int32.imul(count, Float32Array.BYTES_PER_ELEMENT), 7) | 0;
}

function createBuffer(count) {
  return new SharedArrayBuffer(getTotalByteLength(count));
}

export {
  getDiffuseColorsSize    ,
  getDiffuseColorsLength  ,
  getDiffuseColorsOffset  ,
  getSpecularColorsSize   ,
  getSpecularColorsLength ,
  getSpecularColorsOffset ,
  getShininessSize        ,
  getShininessLength      ,
  getShininessOffset      ,
  getDiffuseColorIndex    ,
  getSpecularColorIndex   ,
  getShininessIndex       ,
  getTotalByteLength      ,
  createBuffer            ,
  
}
/* ShaderIndicesService-Wonderjs Not a pure module */
