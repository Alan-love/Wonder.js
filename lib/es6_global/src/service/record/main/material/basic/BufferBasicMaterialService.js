// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Caml_int32                    from "../../../../../../../../node_modules/bs-platform/lib/es6/caml_int32.js";
import * as ShaderIndicesService$Wonderjs from "../../../../primitive/material/ShaderIndicesService.js";

function getColorsSize() {
  return 3;
}

function getColorsLength(count) {
  return Caml_int32.imul(count, 3);
}

function getColorsOffset(count) {
  return Caml_int32.imul(ShaderIndicesService$Wonderjs.getShaderIndicesLength(count), Uint32Array.BYTES_PER_ELEMENT);
}

function getColorIndex(index) {
  return Caml_int32.imul(index, 3);
}

function getTotalByteLength(count) {
  return Caml_int32.imul(Caml_int32.imul(count, Uint32Array.BYTES_PER_ELEMENT), ShaderIndicesService$Wonderjs.getShaderIndicesSize(/* () */0)) + Caml_int32.imul(Caml_int32.imul(count, Float32Array.BYTES_PER_ELEMENT), 3) | 0;
}

function createBuffer(count) {
  return new SharedArrayBuffer(getTotalByteLength(count));
}

export {
  getColorsSize      ,
  getColorsLength    ,
  getColorsOffset    ,
  getColorIndex      ,
  getTotalByteLength ,
  createBuffer       ,
  
}
/* ShaderIndicesService-Wonderjs Not a pure module */
