// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Caml_int32 from "../../../../../../../../node_modules/bs-platform/lib/es6/caml_int32.js";

function getBufferMaxCount() {
  return 4;
}

function getColorsSize() {
  return 3;
}

function getIntensitiesSize() {
  return 1;
}

function getConstantsSize() {
  return 1;
}

function getLinearsSize() {
  return 1;
}

function getQuadraticsSize() {
  return 1;
}

function getRangesSize() {
  return 1;
}

function getColorIndex(index) {
  return Caml_int32.imul(index, 3);
}

function getColorsOffset() {
  return 0;
}

function getColorsLength() {
  return 12;
}

function getIntensitiesOffset() {
  return Caml_int32.imul(getColorsLength(/* () */0), Float32Array.BYTES_PER_ELEMENT);
}

function getIntensitiesLength() {
  return 4;
}

function getConstantsOffset() {
  return Caml_int32.imul(getColorsLength(/* () */0), Float32Array.BYTES_PER_ELEMENT) + Caml_int32.imul(getIntensitiesLength(/* () */0), Float32Array.BYTES_PER_ELEMENT) | 0;
}

function getConstantsLength() {
  return 4;
}

function getLinearsOffset() {
  return getConstantsOffset(/* () */0) + Caml_int32.imul(getConstantsLength(/* () */0), Float32Array.BYTES_PER_ELEMENT) | 0;
}

function getLinearsLength() {
  return 4;
}

function getQuadraticsOffset() {
  return getLinearsOffset(/* () */0) + Caml_int32.imul(getLinearsLength(/* () */0), Float32Array.BYTES_PER_ELEMENT) | 0;
}

function getQuadraticsLength() {
  return 4;
}

function getRangesOffset() {
  return getQuadraticsOffset(/* () */0) + Caml_int32.imul(getQuadraticsLength(/* () */0), Float32Array.BYTES_PER_ELEMENT) | 0;
}

function getRangesLength() {
  return 4;
}

function getTotalByteLength(count) {
  return (Caml_int32.imul(count, Float32Array.BYTES_PER_ELEMENT) << 3);
}

function createBuffer(count) {
  return new SharedArrayBuffer(getTotalByteLength(count));
}

export {
  getBufferMaxCount    ,
  getColorsSize        ,
  getIntensitiesSize   ,
  getConstantsSize     ,
  getLinearsSize       ,
  getQuadraticsSize    ,
  getRangesSize        ,
  getColorIndex        ,
  getColorsOffset      ,
  getColorsLength      ,
  getIntensitiesOffset ,
  getIntensitiesLength ,
  getConstantsOffset   ,
  getConstantsLength   ,
  getLinearsOffset     ,
  getLinearsLength     ,
  getQuadraticsOffset  ,
  getQuadraticsLength  ,
  getRangesOffset      ,
  getRangesLength      ,
  getTotalByteLength   ,
  createBuffer         ,
  
}
/* No side effect */
