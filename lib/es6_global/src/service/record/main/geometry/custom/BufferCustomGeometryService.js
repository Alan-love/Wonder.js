// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Caml_int32 from "../../../../../../../../node_modules/bs-platform/lib/es6/caml_int32.js";

function getVertexSize() {
  return 3;
}

function getVertexLength(count) {
  return Caml_int32.imul(count, 3);
}

function getVerticesOffset() {
  return 0;
}

function getNormalsOffset(count) {
  return 0 + Caml_int32.imul(Caml_int32.imul(count, 3), Float32Array.BYTES_PER_ELEMENT) | 0;
}

function getIndexSize() {
  return 1;
}

function getIndicesLength(count) {
  return (count << 0);
}

function getIndicesOffset(count) {
  return getNormalsOffset(count) + Caml_int32.imul(Caml_int32.imul(count, 3), Float32Array.BYTES_PER_ELEMENT) | 0;
}

function getInfoSize() {
  return 2;
}

function getVerticesInfosLength(count) {
  return (count << 1);
}

function getVerticesInfosOffset(count) {
  return getIndicesOffset(count) + Caml_int32.imul((count << 0), Uint16Array.BYTES_PER_ELEMENT) | 0;
}

function getNormalsInfosLength(count) {
  return (count << 1);
}

function getNormalsInfosOffset(count) {
  return getVerticesInfosOffset(count) + Caml_int32.imul((count << 1), Uint8Array.BYTES_PER_ELEMENT) | 0;
}

function getIndicesInfosLength(count) {
  return (count << 1);
}

function getIndicesInfosOffset(count) {
  return getNormalsInfosOffset(count) + Caml_int32.imul((count << 1), Uint8Array.BYTES_PER_ELEMENT) | 0;
}

function getVertexIndex(index) {
  return Caml_int32.imul(index, 3);
}

function getIndexIndex(index) {
  return (index << 0);
}

function getInfoIndex(index) {
  return (index << 1);
}

function getTotalByteLength(count) {
  return Caml_int32.imul(count, ((Caml_int32.imul(Float32Array.BYTES_PER_ELEMENT, 3) << 1) + (Uint16Array.BYTES_PER_ELEMENT << 0) | 0) + Caml_int32.imul(Uint8Array.BYTES_PER_ELEMENT, 6) | 0);
}

function createBuffer(count) {
  return new SharedArrayBuffer(getTotalByteLength(count));
}

export {
  getVertexSize          ,
  getVertexLength        ,
  getVerticesOffset      ,
  getNormalsOffset       ,
  getIndexSize           ,
  getIndicesLength       ,
  getIndicesOffset       ,
  getInfoSize            ,
  getVerticesInfosLength ,
  getVerticesInfosOffset ,
  getNormalsInfosLength  ,
  getNormalsInfosOffset  ,
  getIndicesInfosLength  ,
  getIndicesInfosOffset  ,
  getVertexIndex         ,
  getIndexIndex          ,
  getInfoIndex           ,
  getTotalByteLength     ,
  createBuffer           ,
  
}
/* No side effect */
