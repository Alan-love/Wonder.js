// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Caml_int32      from "../../../../../../../node_modules/bs-platform/lib/es6/caml_int32.js";
import * as Worker$Wonderjs from "../../../../external/Worker.js";

function getLocalToWorldMatricesSize() {
  return 16;
}

function getLocalToWorldMatricesLength(count) {
  return (count << 4);
}

function getLocalToWorldMatricesOffset() {
  return 0;
}

function getLocalPositionsSize() {
  return 3;
}

function getLocalPositionsLength(count) {
  return Caml_int32.imul(count, 3);
}

function getLocalPositionsOffset(count) {
  return Caml_int32.imul((count << 4), Float32Array.BYTES_PER_ELEMENT);
}

function getLocalToWorldMatrixIndex(index) {
  return (index << 4);
}

function getLocalPositionIndex(index) {
  return Caml_int32.imul(index, 3);
}

function getTotalByteLength(count) {
  return Caml_int32.imul(Caml_int32.imul(count, Float32Array.BYTES_PER_ELEMENT), 19);
}

function createBuffer(count) {
  return Worker$Wonderjs.newSharedArrayBuffer(getTotalByteLength(count));
}

export {
  getLocalToWorldMatricesSize   ,
  getLocalToWorldMatricesLength ,
  getLocalToWorldMatricesOffset ,
  getLocalPositionsSize         ,
  getLocalPositionsLength       ,
  getLocalPositionsOffset       ,
  getLocalToWorldMatrixIndex    ,
  getLocalPositionIndex         ,
  getTotalByteLength            ,
  createBuffer                  ,
  
}
/* Worker-Wonderjs Not a pure module */
