// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Json_decode from "../../../../../../../node_modules/bs-json/lib/es6_global/src/Json_decode.js";

function convertToRecord(setting) {
  return /* record */[
          /* canvasId */Json_decode.optional((function (param) {
                  return Json_decode.field("canvas_id", Json_decode.string, param);
                }), setting),
          /* memory */Json_decode.optional((function (param) {
                  return Json_decode.field("memory", (function (json) {
                                return /* record */[
                                        /* maxDisposeCount */Json_decode.field("maxDisposeCount", Json_decode.$$int, json),
                                        /* maxTypeArrayPoolSize */Json_decode.field("maxTypeArrayPoolSize", Json_decode.$$int, json),
                                        /* maxBigTypeArrayPoolSize */Json_decode.field("maxBigTypeArrayPoolSize", Json_decode.$$int, json)
                                      ];
                              }), param);
                }), setting),
          /* buffer */Json_decode.optional((function (param) {
                  return Json_decode.field("buffer", (function (json) {
                                return /* record */[
                                        /* customGeometryPointDataBufferCount */Json_decode.field("custom_geometry_point_data_buffer_count", Json_decode.$$int, json),
                                        /* transformDataBufferCount */Json_decode.field("transform_data_buffer_count", Json_decode.$$int, json),
                                        /* basicMaterialDataBufferCount */Json_decode.field("basic_material_data_buffer_count", Json_decode.$$int, json),
                                        /* lightMaterialDataBufferCount */Json_decode.field("light_material_data_buffer_count", Json_decode.$$int, json),
                                        /* instanceBuffer */Json_decode.field("instanceBuffer", (function (json) {
                                                return /* record */[
                                                        /* sourceInstanceCount */Json_decode.field("sourceInstanceCount", Json_decode.$$int, json),
                                                        /* objectInstanceCountPerSourceInstance */Json_decode.field("objectInstanceCountPerSourceInstance", Json_decode.$$int, json)
                                                      ];
                                              }), json)
                                      ];
                              }), param);
                }), setting),
          /* isDebug */Json_decode.optional((function (param) {
                  return Json_decode.field("is_debug", Json_decode.bool, param);
                }), setting),
          /* context */Json_decode.optional((function (param) {
                  return Json_decode.field("context", (function (json) {
                                return /* record */[
                                        /* alpha */Json_decode.field("alpha", Json_decode.bool, json),
                                        /* depth */Json_decode.field("depth", Json_decode.bool, json),
                                        /* stencil */Json_decode.field("stencil", Json_decode.bool, json),
                                        /* antialias */Json_decode.field("antialias", Json_decode.bool, json),
                                        /* premultipliedAlpha */Json_decode.field("premultiplied_alpha", Json_decode.bool, json),
                                        /* preserveDrawingBuffer */Json_decode.field("preserve_drawing_buffer", Json_decode.bool, json)
                                      ];
                              }), param);
                }), setting),
          /* gpu */Json_decode.optional((function (param) {
                  return Json_decode.field("gpu", (function (json) {
                                return /* record */[/* useHardwareInstance */Json_decode.field("use_hardware_instance", Json_decode.bool, json)];
                              }), param);
                }), setting),
          /* worker */Json_decode.optional((function (param) {
                  return Json_decode.field("worker", (function (json) {
                                return /* record */[/* useWorker */Json_decode.field("use_worker", Json_decode.bool, json)];
                              }), param);
                }), setting)
        ];
}

export {
  convertToRecord ,
  
}
/* No side effect */
