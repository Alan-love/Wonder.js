// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE

import * as SparseMapService$WonderCommonlib from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapService.js";
import * as NormalsRenderCustomGeometryService$Wonderjs from "../../../record/render/geometry/custom/NormalsRenderCustomGeometryService.js";
import * as GetCustomGeometryNormalsRenderService$Wonderjs from "../geometry/custom/GetCustomGeometryNormalsRenderService.js";
import * as ComputeCustomGeometryNormalsRenderService$Wonderjs from "../geometry/custom/ComputeCustomGeometryNormalsRenderService.js";

function getOrCreateBuffer(gl, param, param$1, state) {
  var bufferMap = param[1];
  var geometryIndex = param[0];
  var match = SparseMapService$WonderCommonlib.get(geometryIndex, bufferMap);
  if (match) {
    return match[0];
  } else {
    var buffer = param$1[0](gl, param$1[1](geometryIndex, state), state);
    SparseMapService$WonderCommonlib.set(geometryIndex, buffer, bufferMap);
    return buffer;
  }
}

function getOrCreateNormalBuffer(gl, param, createBufferFunc, state) {
  var bufferMap = param[1];
  var geometryIndex = param[0];
  var match = SparseMapService$WonderCommonlib.get(geometryIndex, bufferMap);
  if (match) {
    return match[0];
  } else {
    var match$1 = NormalsRenderCustomGeometryService$Wonderjs.hasNormals(geometryIndex, state[/* customGeometryRecord */5]);
    var buffer = createBufferFunc(gl, match$1 ? GetCustomGeometryNormalsRenderService$Wonderjs.getNormals(geometryIndex, state) : ComputeCustomGeometryNormalsRenderService$Wonderjs.computeVertexNormals(geometryIndex, state), state);
    SparseMapService$WonderCommonlib.set(geometryIndex, buffer, bufferMap);
    return buffer;
  }
}

export {
  getOrCreateBuffer ,
  getOrCreateNormalBuffer ,
  
}
/* NormalsRenderCustomGeometryService-Wonderjs Not a pure module */
