// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                                              from "../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as TextureFilterService$Wonderjs                      from "../../../primitive/texture/TextureFilterService.js";
import * as BufferBasicSourceTextureService$Wonderjs           from "../../../record/main/texture/BufferBasicSourceTextureService.js";
import * as OperateTypeArrayBasicSourceTextureService$Wonderjs from "../../../record/all/texture/basic_source/OperateTypeArrayBasicSourceTextureService.js";

function _isPowerOfTwo(value) {
  if (value & (value - 1 | 0)) {
    return /* false */0;
  } else {
    return +(value !== 0);
  }
}

function _isSourcePowerOfTwo(width, height) {
  if (_isPowerOfTwo(width)) {
    return _isPowerOfTwo(height);
  } else {
    return /* false */0;
  }
}

function _filterFallback(filter, gl) {
  if (filter === TextureFilterService$Wonderjs.getNearest(/* () */0) || filter === TextureFilterService$Wonderjs.getNearestMipmapNearest(/* () */0) || filter === TextureFilterService$Wonderjs.getNearestMipmapLinear(/* () */0)) {
    return gl.NEAREST;
  } else {
    return gl.LINEAR;
  }
}

function _setTextureParameters(gl, target, isSourcePowerOfTwo, param) {
  var minFilter = param[3];
  var magFilter = param[2];
  if (isSourcePowerOfTwo !== 0) {
    gl.texParameteri(target, gl.TEXTURE_WRAP_S, param[0]);
    gl.texParameteri(target, gl.TEXTURE_WRAP_T, param[1]);
    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, TextureFilterService$Wonderjs.getGlFilter(gl, magFilter));
    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, TextureFilterService$Wonderjs.getGlFilter(gl, minFilter));
    return /* () */0;
  } else {
    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, _filterFallback(magFilter, gl));
    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, _filterFallback(minFilter, gl));
    return /* () */0;
  }
}

function update(param, param$1, param$2, param$3) {
  var target = param$1[9];
  var gl = param[0];
  var isSourcePowerOfTwo = _isSourcePowerOfTwo(param$1[0], param$1[1]);
  Curry._3(param$3[1], gl, param$1[8], param$2[1]);
  _setTextureParameters(gl, target, isSourcePowerOfTwo, /* tuple */[
        param$1[2],
        param$1[3],
        param$1[4],
        param$1[5]
      ]);
  Curry._3(param$3[0], gl, /* tuple */[
        target,
        param$1[6],
        param$1[7]
      ], param[2]);
  OperateTypeArrayBasicSourceTextureService$Wonderjs.setIsNeedUpdate(param[1], BufferBasicSourceTextureService$Wonderjs.getNotNeedUpdate(/* () */0), param$2[0]);
  return /* () */0;
}

function isNeedUpdate(textureInTypeArray, _, isNeedUpdates, getIsNeedUpdateFunc) {
  return +(getIsNeedUpdateFunc(textureInTypeArray, isNeedUpdates) === BufferBasicSourceTextureService$Wonderjs.getDefaultIsNeedUpdate(/* () */0));
}

export {
  _isPowerOfTwo         ,
  _isSourcePowerOfTwo   ,
  _filterFallback       ,
  _setTextureParameters ,
  update                ,
  isNeedUpdate          ,
  
}
/* BufferBasicSourceTextureService-Wonderjs Not a pure module */
