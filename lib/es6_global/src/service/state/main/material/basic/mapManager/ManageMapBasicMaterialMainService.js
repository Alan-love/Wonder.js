// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as OptionService$Wonderjs                        from "../../../../../atom/OptionService.js";
import * as BufferSettingService$Wonderjs                 from "../../../../../record/main/setting/BufferSettingService.js";
import * as ManagerMapMaterialMainService$Wonderjs        from "../../mapManager/ManagerMapMaterialMainService.js";
import * as RecordBasicMaterialMainService$Wonderjs       from "../RecordBasicMaterialMainService.js";
import * as OperateTypeArrayBasicMaterialService$Wonderjs from "../../../../../record/all/material/basic/OperateTypeArrayBasicMaterialService.js";

function getMap(material, state) {
  var match = RecordBasicMaterialMainService$Wonderjs.getRecord(state);
  return ManagerMapMaterialMainService$Wonderjs.getMap(material, BufferSettingService$Wonderjs.getTextureCountPerMaterial(state[/* settingRecord */0]), /* tuple */[
              OperateTypeArrayBasicMaterialService$Wonderjs.getMapUnit,
              OperateTypeArrayBasicMaterialService$Wonderjs.getTextureIndex
            ], /* tuple */[
              match[/* textureIndices */4],
              match[/* mapUnits */5]
            ]);
}

function unsafeGetMap(material, state) {
  return OptionService$Wonderjs.unsafeGet(getMap(material, state));
}

function setMap(material, texture, state) {
  var basicMaterialRecord = RecordBasicMaterialMainService$Wonderjs.getRecord(state);
  var match = ManagerMapMaterialMainService$Wonderjs.setMap(material, texture, BufferSettingService$Wonderjs.getTextureCountPerMaterial(state[/* settingRecord */0]), /* tuple */[
        OperateTypeArrayBasicMaterialService$Wonderjs.getMapUnit,
        OperateTypeArrayBasicMaterialService$Wonderjs.setMapUnit,
        OperateTypeArrayBasicMaterialService$Wonderjs.setTextureIndex
      ], /* tuple */[
        basicMaterialRecord[/* textureIndices */4],
        basicMaterialRecord[/* mapUnits */5],
        basicMaterialRecord[/* textureCountMap */6]
      ]);
  var newrecord = state.slice();
  var newrecord$1 = basicMaterialRecord.slice();
  newrecord[/* basicMaterialRecord */15] = /* Some */[(newrecord$1[/* textureIndices */4] = match[0], newrecord$1[/* mapUnits */5] = match[1], newrecord$1[/* textureCountMap */6] = match[2], newrecord$1)];
  return newrecord;
}

export {
  getMap       ,
  unsafeGetMap ,
  setMap       ,
  
}
/* OptionService-Wonderjs Not a pure module */
