// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE

import * as Curry from "../../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as MapUnitService$Wonderjs from "../../../../primitive/material/MapUnitService.js";
import * as TextureCountMapMaterialService$Wonderjs from "../../../../record/main/material/TextureCountMapMaterialService.js";

function getMap(material, textureCountPerMaterial, param, param$1) {
  var mapUnit = Curry._2(param[0], material, param$1[1]);
  var match = MapUnitService$Wonderjs.hasMap(mapUnit);
  if (match) {
    return /* Some */[param[1](/* tuple */[
                  material,
                  mapUnit,
                  textureCountPerMaterial
                ], param$1[0])];
  } else {
    return /* None */0;
  }
}

function setMap(material, texture, param, param$1) {
  var textureCountMap = param$1[3];
  var mapUnits = param$1[2];
  var textureIndices = param$1[1];
  var textureCountPerMaterial = param$1[0];
  var setTextureIndexFunc = param[2];
  var mapUnit = Curry._2(param[0], material, mapUnits);
  var match = MapUnitService$Wonderjs.hasMap(mapUnit);
  if (match) {
    return /* tuple */[
            Curry._3(setTextureIndexFunc, /* tuple */[
                  material,
                  mapUnit,
                  textureCountPerMaterial
                ], texture, textureIndices),
            mapUnits,
            textureCountMap
          ];
  } else {
    var mapCount = TextureCountMapMaterialService$Wonderjs.unsafeGetCount(material, textureCountMap);
    return /* tuple */[
            Curry._3(setTextureIndexFunc, /* tuple */[
                  material,
                  mapCount,
                  textureCountPerMaterial
                ], texture, textureIndices),
            Curry._3(param[1], material, mapCount, mapUnits),
            TextureCountMapMaterialService$Wonderjs.setCount(material, mapCount + 1 | 0, textureCountMap)
          ];
  }
}

export {
  getMap ,
  setMap ,
  
}
/* No side effect */
