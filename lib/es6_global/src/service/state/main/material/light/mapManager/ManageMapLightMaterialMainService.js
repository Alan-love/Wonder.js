// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE

import * as Caml_array from "../../../../../../../../../node_modules/bs-platform/lib/es6/caml_array.js";
import * as OptionService$Wonderjs from "../../../../../atom/OptionService.js";
import * as BufferSettingService$Wonderjs from "../../../../../record/main/setting/BufferSettingService.js";
import * as ManagerMapMaterialMainService$Wonderjs from "../../mapManager/ManagerMapMaterialMainService.js";
import * as RecordLightMaterialMainService$Wonderjs from "../RecordLightMaterialMainService.js";
import * as OperateTypeArrayLightMaterialService$Wonderjs from "../../../../../record/all/material/light/OperateTypeArrayLightMaterialService.js";

function getDiffuseMap(material, state) {
  var match = RecordLightMaterialMainService$Wonderjs.getRecord(state);
  return ManagerMapMaterialMainService$Wonderjs.getMap(material, BufferSettingService$Wonderjs.getTextureCountPerMaterial(state[/* settingRecord */0]), /* tuple */[
              OperateTypeArrayLightMaterialService$Wonderjs.getDiffuseMapUnit,
              OperateTypeArrayLightMaterialService$Wonderjs.getTextureIndex
            ], /* tuple */[
              match[/* textureIndices */6],
              match[/* diffuseMapUnits */7]
            ]);
}

function unsafeGetDiffuseMap(material, state) {
  return OptionService$Wonderjs.unsafeGet(getDiffuseMap(material, state));
}

function setDiffuseMap(material, texture, state) {
  var lightMaterialRecord = RecordLightMaterialMainService$Wonderjs.getRecord(state);
  var match = ManagerMapMaterialMainService$Wonderjs.setMap(material, texture, /* tuple */[
        OperateTypeArrayLightMaterialService$Wonderjs.getDiffuseMapUnit,
        OperateTypeArrayLightMaterialService$Wonderjs.setDiffuseMapUnit,
        OperateTypeArrayLightMaterialService$Wonderjs.setTextureIndex
      ], /* tuple */[
        BufferSettingService$Wonderjs.getTextureCountPerMaterial(state[/* settingRecord */0]),
        lightMaterialRecord[/* textureIndices */6],
        lightMaterialRecord[/* diffuseMapUnits */7],
        lightMaterialRecord[/* textureCountMap */9]
      ]);
  var newrecord = Caml_array.caml_array_dup(state);
  newrecord[/* lightMaterialRecord */16] = /* Some */[/* record */[
      /* index */lightMaterialRecord[/* index */0],
      /* buffer */lightMaterialRecord[/* buffer */1],
      /* shaderIndices */lightMaterialRecord[/* shaderIndices */2],
      /* diffuseColors */lightMaterialRecord[/* diffuseColors */3],
      /* specularColors */lightMaterialRecord[/* specularColors */4],
      /* shininess */lightMaterialRecord[/* shininess */5],
      /* textureIndices */match[0],
      /* diffuseMapUnits */match[1],
      /* specularMapUnits */lightMaterialRecord[/* specularMapUnits */8],
      /* textureCountMap */match[2],
      /* defaultDiffuseColor */lightMaterialRecord[/* defaultDiffuseColor */10],
      /* defaultSpecularColor */lightMaterialRecord[/* defaultSpecularColor */11],
      /* defaultShininess */lightMaterialRecord[/* defaultShininess */12],
      /* gameObjectMap */lightMaterialRecord[/* gameObjectMap */13],
      /* groupCountMap */lightMaterialRecord[/* groupCountMap */14],
      /* disposedIndexArray */lightMaterialRecord[/* disposedIndexArray */15],
      /* materialArrayForWorkerInit */lightMaterialRecord[/* materialArrayForWorkerInit */16]
    ]];
  return newrecord;
}

function getSpecularMap(material, state) {
  var match = RecordLightMaterialMainService$Wonderjs.getRecord(state);
  return ManagerMapMaterialMainService$Wonderjs.getMap(material, BufferSettingService$Wonderjs.getTextureCountPerMaterial(state[/* settingRecord */0]), /* tuple */[
              OperateTypeArrayLightMaterialService$Wonderjs.getSpecularMapUnit,
              OperateTypeArrayLightMaterialService$Wonderjs.getTextureIndex
            ], /* tuple */[
              match[/* textureIndices */6],
              match[/* specularMapUnits */8]
            ]);
}

function unsafeGetSpecularMap(material, state) {
  return OptionService$Wonderjs.unsafeGet(getSpecularMap(material, state));
}

function setSpecularMap(material, texture, state) {
  var lightMaterialRecord = RecordLightMaterialMainService$Wonderjs.getRecord(state);
  var match = ManagerMapMaterialMainService$Wonderjs.setMap(material, texture, /* tuple */[
        OperateTypeArrayLightMaterialService$Wonderjs.getSpecularMapUnit,
        OperateTypeArrayLightMaterialService$Wonderjs.setSpecularMapUnit,
        OperateTypeArrayLightMaterialService$Wonderjs.setTextureIndex
      ], /* tuple */[
        BufferSettingService$Wonderjs.getTextureCountPerMaterial(state[/* settingRecord */0]),
        lightMaterialRecord[/* textureIndices */6],
        lightMaterialRecord[/* specularMapUnits */8],
        lightMaterialRecord[/* textureCountMap */9]
      ]);
  var newrecord = Caml_array.caml_array_dup(state);
  newrecord[/* lightMaterialRecord */16] = /* Some */[/* record */[
      /* index */lightMaterialRecord[/* index */0],
      /* buffer */lightMaterialRecord[/* buffer */1],
      /* shaderIndices */lightMaterialRecord[/* shaderIndices */2],
      /* diffuseColors */lightMaterialRecord[/* diffuseColors */3],
      /* specularColors */lightMaterialRecord[/* specularColors */4],
      /* shininess */lightMaterialRecord[/* shininess */5],
      /* textureIndices */match[0],
      /* diffuseMapUnits */lightMaterialRecord[/* diffuseMapUnits */7],
      /* specularMapUnits */match[1],
      /* textureCountMap */match[2],
      /* defaultDiffuseColor */lightMaterialRecord[/* defaultDiffuseColor */10],
      /* defaultSpecularColor */lightMaterialRecord[/* defaultSpecularColor */11],
      /* defaultShininess */lightMaterialRecord[/* defaultShininess */12],
      /* gameObjectMap */lightMaterialRecord[/* gameObjectMap */13],
      /* groupCountMap */lightMaterialRecord[/* groupCountMap */14],
      /* disposedIndexArray */lightMaterialRecord[/* disposedIndexArray */15],
      /* materialArrayForWorkerInit */lightMaterialRecord[/* materialArrayForWorkerInit */16]
    ]];
  return newrecord;
}

export {
  getDiffuseMap ,
  unsafeGetDiffuseMap ,
  setDiffuseMap ,
  getSpecularMap ,
  unsafeGetSpecularMap ,
  setSpecularMap ,
  
}
/* OptionService-Wonderjs Not a pure module */
