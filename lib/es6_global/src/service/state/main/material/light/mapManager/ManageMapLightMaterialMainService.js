// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as OptionService$Wonderjs                        from "../../../../../atom/OptionService.js";
import * as BufferSettingService$Wonderjs                 from "../../../../../record/main/setting/BufferSettingService.js";
import * as ManagerMapMaterialMainService$Wonderjs        from "../../mapManager/ManagerMapMaterialMainService.js";
import * as RecordLightMaterialMainService$Wonderjs       from "../RecordLightMaterialMainService.js";
import * as OperateTypeArrayLightMaterialService$Wonderjs from "../../../../../record/all/material/light/OperateTypeArrayLightMaterialService.js";

function getDiffuseMap(material, state) {
  var match = RecordLightMaterialMainService$Wonderjs.getRecord(state);
  return ManagerMapMaterialMainService$Wonderjs.getMap(material, BufferSettingService$Wonderjs.getTextureCountPerMaterial(state[/* settingRecord */0]), /* tuple */[
              OperateTypeArrayLightMaterialService$Wonderjs.getDiffuseMapUnit,
              OperateTypeArrayLightMaterialService$Wonderjs.getTextureIndex
            ], /* tuple */[
              match[/* textureIndices */6],
              match[/* diffuseMapUnits */7]
            ]);
}

function unsafeGetDiffuseMap(material, state) {
  return OptionService$Wonderjs.unsafeGet(getDiffuseMap(material, state));
}

function setDiffuseMap(material, texture, state) {
  var lightMaterialRecord = RecordLightMaterialMainService$Wonderjs.getRecord(state);
  var match = ManagerMapMaterialMainService$Wonderjs.setMap(material, texture, BufferSettingService$Wonderjs.getTextureCountPerMaterial(state[/* settingRecord */0]), /* tuple */[
        OperateTypeArrayLightMaterialService$Wonderjs.getDiffuseMapUnit,
        OperateTypeArrayLightMaterialService$Wonderjs.setDiffuseMapUnit,
        OperateTypeArrayLightMaterialService$Wonderjs.setTextureIndex
      ], /* tuple */[
        lightMaterialRecord[/* textureIndices */6],
        lightMaterialRecord[/* diffuseMapUnits */7],
        lightMaterialRecord[/* textureCountMap */9]
      ]);
  var newrecord = state.slice();
  var newrecord$1 = lightMaterialRecord.slice();
  newrecord[/* lightMaterialRecord */16] = /* Some */[(newrecord$1[/* textureIndices */6] = match[0], newrecord$1[/* diffuseMapUnits */7] = match[1], newrecord$1[/* textureCountMap */9] = match[2], newrecord$1)];
  return newrecord;
}

function getSpecularMap(material, state) {
  var match = RecordLightMaterialMainService$Wonderjs.getRecord(state);
  return ManagerMapMaterialMainService$Wonderjs.getMap(material, BufferSettingService$Wonderjs.getTextureCountPerMaterial(state[/* settingRecord */0]), /* tuple */[
              OperateTypeArrayLightMaterialService$Wonderjs.getSpecularMapUnit,
              OperateTypeArrayLightMaterialService$Wonderjs.getTextureIndex
            ], /* tuple */[
              match[/* textureIndices */6],
              match[/* specularMapUnits */8]
            ]);
}

function unsafeGetSpecularMap(material, state) {
  return OptionService$Wonderjs.unsafeGet(getSpecularMap(material, state));
}

function setSpecularMap(material, texture, state) {
  var lightMaterialRecord = RecordLightMaterialMainService$Wonderjs.getRecord(state);
  var match = ManagerMapMaterialMainService$Wonderjs.setMap(material, texture, BufferSettingService$Wonderjs.getTextureCountPerMaterial(state[/* settingRecord */0]), /* tuple */[
        OperateTypeArrayLightMaterialService$Wonderjs.getSpecularMapUnit,
        OperateTypeArrayLightMaterialService$Wonderjs.setSpecularMapUnit,
        OperateTypeArrayLightMaterialService$Wonderjs.setTextureIndex
      ], /* tuple */[
        lightMaterialRecord[/* textureIndices */6],
        lightMaterialRecord[/* specularMapUnits */8],
        lightMaterialRecord[/* textureCountMap */9]
      ]);
  var newrecord = state.slice();
  var newrecord$1 = lightMaterialRecord.slice();
  newrecord[/* lightMaterialRecord */16] = /* Some */[(newrecord$1[/* textureIndices */6] = match[0], newrecord$1[/* specularMapUnits */8] = match[1], newrecord$1[/* textureCountMap */9] = match[2], newrecord$1)];
  return newrecord;
}

export {
  getDiffuseMap        ,
  unsafeGetDiffuseMap  ,
  setDiffuseMap        ,
  getSpecularMap       ,
  unsafeGetSpecularMap ,
  setSpecularMap       ,
  
}
/* OptionService-Wonderjs Not a pure module */
