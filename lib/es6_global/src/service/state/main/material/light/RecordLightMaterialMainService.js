// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as OptionService$Wonderjs                        from "../../../../atom/OptionService.js";
import * as SparseMapService$Wonderjs                     from "../../../../atom/SparseMapService.js";
import * as ArrayService$WonderCommonlib                  from "../../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArrayService.js";
import * as BufferSettingService$Wonderjs                 from "../../../../record/main/setting/BufferSettingService.js";
import * as ShaderIndicesService$Wonderjs                 from "../../../../primitive/material/ShaderIndicesService.js";
import * as CopyArrayBufferService$Wonderjs               from "../../../../primitive/copy/CopyArrayBufferService.js";
import * as SparseMapService$WonderCommonlib              from "../../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapService.js";
import * as BufferLightMaterialService$Wonderjs           from "../../../../record/main/material/light/BufferLightMaterialService.js";
import * as DefaultTypeArrayValueService$Wonderjs         from "../../../../primitive/buffer/DefaultTypeArrayValueService.js";
import * as CreateTypeArrayLightMaterialService$Wonderjs  from "../../../../record/all/material/light/CreateTypeArrayLightMaterialService.js";
import * as OperateTypeArrayLightMaterialService$Wonderjs from "../../../../record/main/material/light/OperateTypeArrayLightMaterialService.js";

function getRecord(param) {
  return OptionService$Wonderjs.unsafeGet(param[/* lightMaterialRecord */16]);
}

function _setDefaultTypeArrData(count, defaultShaderIndex, defaultDiffuseColor, defaultSpecularColor, defaultShininess, param) {
  return /* tuple */[
          param[0],
          ArrayService$WonderCommonlib.reduceOneParam((function (param, index) {
                  return /* tuple */[
                          ShaderIndicesService$Wonderjs.setShaderIndex(index, defaultShaderIndex, param[0]),
                          OperateTypeArrayLightMaterialService$Wonderjs.setDiffuseColor(index, defaultDiffuseColor, param[1]),
                          OperateTypeArrayLightMaterialService$Wonderjs.setSpecularColor(index, defaultSpecularColor, param[2]),
                          OperateTypeArrayLightMaterialService$Wonderjs.setShininess(index, defaultShininess, param[3])
                        ];
                }), /* tuple */[
                param[1],
                param[2],
                param[3],
                param[4]
              ], ArrayService$WonderCommonlib.range(0, count - 1 | 0))
        ];
}

function _initBufferData(count, defaultShaderIndex, defaultDiffuseColor, defaultSpecularColor, defaultShiness) {
  var buffer = BufferLightMaterialService$Wonderjs.createBuffer(count);
  var match = CreateTypeArrayLightMaterialService$Wonderjs.createTypeArrays(buffer, count);
  return _setDefaultTypeArrData(count, defaultShaderIndex, defaultDiffuseColor, defaultSpecularColor, defaultShiness, /* tuple */[
              buffer,
              match[0],
              match[1],
              match[2],
              match[3]
            ]);
}

function create(state) {
  var lightMaterialDataBufferCount = BufferSettingService$Wonderjs.getLightMaterialDataBufferCount(state[/* settingRecord */0]);
  var defaultShaderIndex = DefaultTypeArrayValueService$Wonderjs.getDefaultShaderIndex(/* () */0);
  var defaultDiffuseColor = /* float array */[
    1,
    1,
    1
  ];
  var defaultSpecularColor = /* float array */[
    1,
    1,
    1
  ];
  var match = _initBufferData(lightMaterialDataBufferCount, defaultShaderIndex, defaultDiffuseColor, defaultSpecularColor, 32.0);
  var match$1 = match[1];
  state[/* lightMaterialRecord */16] = /* Some */[/* record */[
      /* index */0,
      /* buffer */match[0],
      /* shaderIndices */match$1[0],
      /* diffuseColors */match$1[1],
      /* specularColors */match$1[2],
      /* shininess */match$1[3],
      /* defaultShaderIndex */defaultShaderIndex,
      /* defaultDiffuseColor */defaultDiffuseColor,
      /* defaultSpecularColor */defaultSpecularColor,
      /* defaultShininess */32.0,
      /* gameObjectMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
      /* groupCountMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
      /* disposedIndexArray */ArrayService$WonderCommonlib.createEmpty(/* () */0),
      /* materialArrayForWorkerInit */ArrayService$WonderCommonlib.createEmpty(/* () */0)
    ]];
  return state;
}

function deepCopyForRestore(state) {
  var record = getRecord(state);
  var index = record[/* index */0];
  var materialArrayForWorkerInit = record[/* materialArrayForWorkerInit */13];
  var newrecord = state.slice();
  newrecord[/* lightMaterialRecord */16] = /* Some */[/* record */[
      /* index */index,
      /* buffer */CopyArrayBufferService$Wonderjs.copyArrayBuffer(record[/* buffer */1], BufferLightMaterialService$Wonderjs.getTotalByteLength(index)),
      /* shaderIndices */record[/* shaderIndices */2],
      /* diffuseColors */record[/* diffuseColors */3],
      /* specularColors */record[/* specularColors */4],
      /* shininess */record[/* shininess */5],
      /* defaultShaderIndex */record[/* defaultShaderIndex */6],
      /* defaultDiffuseColor */record[/* defaultDiffuseColor */7],
      /* defaultSpecularColor */record[/* defaultSpecularColor */8],
      /* defaultShininess */record[/* defaultShininess */9],
      /* gameObjectMap */SparseMapService$Wonderjs.copy(record[/* gameObjectMap */10]),
      /* groupCountMap */SparseMapService$Wonderjs.copy(record[/* groupCountMap */11]),
      /* disposedIndexArray */record[/* disposedIndexArray */12].slice(),
      /* materialArrayForWorkerInit */materialArrayForWorkerInit.slice()
    ]];
  return newrecord;
}

export {
  getRecord              ,
  _setDefaultTypeArrData ,
  _initBufferData        ,
  create                 ,
  deepCopyForRestore     ,
  
}
/* OptionService-Wonderjs Not a pure module */
