// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as TypeArrayService$Wonderjs           from "../../../primitive/buffer/TypeArrayService.js";
import * as RecordTransformMainService$Wonderjs from "../transform/RecordTransformMainService.js";

function _restoreTypeArrays(currentTransformRecord, targetTransformRecord) {
  var match = +(currentTransformRecord[/* localPositions */3] === targetTransformRecord[/* localPositions */3] && currentTransformRecord[/* localToWorldMatrices */2] === targetTransformRecord[/* localToWorldMatrices */2]);
  if (match !== 0) {
    return /* tuple */[
            currentTransformRecord,
            targetTransformRecord
          ];
  } else {
    RecordTransformMainService$Wonderjs.setDefaultTypeArrData(currentTransformRecord[/* index */0], currentTransformRecord[/* defaultLocalToWorldMatrix */7], currentTransformRecord[/* defaultLocalPosition */8], /* tuple */[
          currentTransformRecord[/* localToWorldMatrices */2],
          currentTransformRecord[/* localPositions */3]
        ]);
    TypeArrayService$Wonderjs.fillFloat32ArrayWithFloat32Array(/* tuple */[
          currentTransformRecord[/* localPositions */3],
          0
        ], /* tuple */[
          targetTransformRecord[/* localPositions */3],
          0
        ], targetTransformRecord[/* localPositions */3].length);
    TypeArrayService$Wonderjs.fillFloat32ArrayWithFloat32Array(/* tuple */[
          currentTransformRecord[/* localToWorldMatrices */2],
          0
        ], /* tuple */[
          targetTransformRecord[/* localToWorldMatrices */2],
          0
        ], targetTransformRecord[/* localToWorldMatrices */2].length);
    return /* tuple */[
            currentTransformRecord,
            targetTransformRecord
          ];
  }
}

function restore(currentState, targetState) {
  var currentTransformRecord = RecordTransformMainService$Wonderjs.getRecord(currentState);
  var targetTransformRecord = RecordTransformMainService$Wonderjs.getRecord(targetState);
  var match = _restoreTypeArrays(currentTransformRecord, targetTransformRecord);
  var currentTransformRecord$1 = match[0];
  var newrecord = targetState.slice();
  var newrecord$1 = match[1].slice();
  newrecord[/* transformRecord */11] = /* Some */[(newrecord$1[/* buffer */1] = currentTransformRecord$1[/* buffer */1], newrecord$1[/* localToWorldMatrices */2] = currentTransformRecord$1[/* localToWorldMatrices */2], newrecord$1[/* localPositions */3] = currentTransformRecord$1[/* localPositions */3], newrecord$1)];
  return newrecord;
}

export {
  _restoreTypeArrays ,
  restore            ,
  
}
/* TypeArrayService-Wonderjs Not a pure module */
