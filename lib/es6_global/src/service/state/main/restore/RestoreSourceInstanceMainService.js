// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as SparseMapService$Wonderjs        from "../../../atom/SparseMapService.js";
import * as MemorySettingService$Wonderjs    from "../../../record/setting/MemorySettingService.js";
import * as TypeArrayPoolService$Wonderjs    from "../../../record/typeArrayPool/TypeArrayPoolService.js";
import * as SparseMapService$WonderCommonlib from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapService.js";

function _buildIsNotSendTransformMatrixDataMap(isSendTransformMatrixDataMap) {
  return SparseMapService$Wonderjs.reduceiValid((function (newMap, _, index) {
                return SparseMapService$WonderCommonlib.set(index, /* false */0, newMap);
              }), SparseMapService$WonderCommonlib.createEmpty(/* () */0), isSendTransformMatrixDataMap);
}

function restore(currentState, sharedData, targetState) {
  var match = currentState[/* sourceInstanceRecord */6];
  var targetRecord = targetState[/* sourceInstanceRecord */6];
  var float32ArrayPoolMap = TypeArrayPoolService$Wonderjs.addAllFloat32TypeArrayToPool(match[/* matrixFloat32ArrayMap */3], MemorySettingService$Wonderjs.getMaxBigTypeArrayPoolSize(targetState[/* settingRecord */0]), sharedData[/* float32ArrayPoolMap */1]);
  var newrecord = targetState.slice();
  var newrecord$1 = targetRecord.slice();
  newrecord$1[/* isSendTransformMatrixDataMap */5] = _buildIsNotSendTransformMatrixDataMap(targetRecord[/* isSendTransformMatrixDataMap */5]);
  newrecord[/* sourceInstanceRecord */6] = newrecord$1;
  return /* tuple */[
          newrecord,
          /* record */[
            /* gl */sharedData[/* gl */0],
            /* float32ArrayPoolMap */float32ArrayPoolMap,
            /* uint16ArrayPoolMap */sharedData[/* uint16ArrayPoolMap */2]
          ]
        ];
}

export {
  _buildIsNotSendTransformMatrixDataMap ,
  restore                               ,
  
}
/* SparseMapService-Wonderjs Not a pure module */
