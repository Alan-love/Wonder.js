// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as TypeArrayService$Wonderjs                from "../../../primitive/buffer/TypeArrayService.js";
import * as RecordCustomGeometryMainService$Wonderjs from "../geometry/custom/RecordCustomGeometryMainService.js";

function _restoreTypeArrays(currentCustomGeometryRecord, targetCustomGeometryRecord) {
  var match = +(currentCustomGeometryRecord[/* vertices */2] === targetCustomGeometryRecord[/* vertices */2] && currentCustomGeometryRecord[/* normals */3] === targetCustomGeometryRecord[/* normals */3] && currentCustomGeometryRecord[/* indices */4] === targetCustomGeometryRecord[/* indices */4]);
  if (match !== 0) {
    return /* tuple */[
            currentCustomGeometryRecord,
            targetCustomGeometryRecord
          ];
  } else {
    RecordCustomGeometryMainService$Wonderjs.setDefaultTypeArrData(currentCustomGeometryRecord[/* index */0], /* tuple */[
          currentCustomGeometryRecord[/* vertices */2],
          currentCustomGeometryRecord[/* normals */3],
          currentCustomGeometryRecord[/* indices */4]
        ]);
    TypeArrayService$Wonderjs.fillFloat32ArrayWithFloat32Array(/* tuple */[
          currentCustomGeometryRecord[/* vertices */2],
          0
        ], /* tuple */[
          targetCustomGeometryRecord[/* vertices */2],
          0
        ], targetCustomGeometryRecord[/* vertices */2].length);
    TypeArrayService$Wonderjs.fillFloat32ArrayWithFloat32Array(/* tuple */[
          currentCustomGeometryRecord[/* normals */3],
          0
        ], /* tuple */[
          targetCustomGeometryRecord[/* normals */3],
          0
        ], targetCustomGeometryRecord[/* normals */3].length);
    TypeArrayService$Wonderjs.fillUint16ArrayWithUint16Array(/* tuple */[
          currentCustomGeometryRecord[/* indices */4],
          0
        ], /* tuple */[
          targetCustomGeometryRecord[/* indices */4],
          0
        ], targetCustomGeometryRecord[/* indices */4].length);
    return /* tuple */[
            currentCustomGeometryRecord,
            targetCustomGeometryRecord
          ];
  }
}

function restore(currentState, targetState) {
  var currentCustomGeometryRecord = RecordCustomGeometryMainService$Wonderjs.getRecord(currentState);
  var targetCustomGeometryRecord = RecordCustomGeometryMainService$Wonderjs.getRecord(targetState);
  var match = _restoreTypeArrays(currentCustomGeometryRecord, targetCustomGeometryRecord);
  var currentCustomGeometryRecord$1 = match[0];
  var newrecord = targetState.slice();
  var newrecord$1 = match[1].slice();
  newrecord[/* customGeometryRecord */21] = /* Some */[(newrecord$1[/* buffer */1] = currentCustomGeometryRecord$1[/* buffer */1], newrecord$1[/* vertices */2] = currentCustomGeometryRecord$1[/* vertices */2], newrecord$1[/* normals */3] = currentCustomGeometryRecord$1[/* normals */3], newrecord$1[/* indices */4] = currentCustomGeometryRecord$1[/* indices */4], newrecord$1)];
  return newrecord;
}

export {
  _restoreTypeArrays ,
  restore            ,
  
}
/* TypeArrayService-Wonderjs Not a pure module */
