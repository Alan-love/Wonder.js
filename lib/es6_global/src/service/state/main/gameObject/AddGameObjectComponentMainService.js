// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as AddGeometryService$Wonderjs                    from "../../../record/geometry/AddGeometryService.js";
import * as AddTransformService$Wonderjs                   from "../../../record/transform/AddTransformService.js";
import * as ComponentMapService$Wonderjs                   from "../../../primitiive/ComponentMapService.js";
import * as AddPointLightService$Wonderjs                  from "../../../record/light/point/AddPointLightService.js";
import * as GroupGeometryService$Wonderjs                  from "../../../record/geometry/GroupGeometryService.js";
import * as AddAmbientLightService$Wonderjs                from "../../../record/light/ambient/AddAmbientLightService.js";
import * as AddMeshRendererService$Wonderjs                from "../../../record/meshRenderer/AddMeshRendererService.js";
import * as AddBasicMaterialService$Wonderjs               from "../../../record/material/basic/AddBasicMaterialService.js";
import * as AddLightMaterialService$Wonderjs               from "../../../record/material/light/AddLightMaterialService.js";
import * as AddDirectionLightService$Wonderjs              from "../../../record/light/direction/AddDirectionLightService.js";
import * as AddObjectInstanceService$Wonderjs              from "../../../record/instance/objectInstance/AddObjectInstanceService.js";
import * as AddSourceInstanceService$Wonderjs              from "../../../record/instance/sourceInstance/AddSourceInstanceService.js";
import * as AddBasicCameraViewService$Wonderjs             from "../../../record/basic_camera_view/AddBasicCameraViewService.js";
import * as GameObjectGeometryService$Wonderjs             from "../../../record/geometry/GameObjectGeometryService.js";
import * as GroupBasicMaterialService$Wonderjs             from "../../../record/material/basic/GroupBasicMaterialService.js";
import * as GroupLightMaterialService$Wonderjs             from "../../../record/material/light/GroupLightMaterialService.js";
import * as GameObjectBasicMaterialService$Wonderjs        from "../../../record/material/basic/GameObjectBasicMaterialService.js";
import * as GameObjectLightMaterialService$Wonderjs        from "../../../record/material/light/GameObjectLightMaterialService.js";
import * as AddPerspectiveCameraProjectionService$Wonderjs from "../../../record/perspective_camera_projection/AddPerspectiveCameraProjectionService.js";

function _addComponent(param, handleAddComponentFunc, componentRecord) {
  var component = param[1];
  var uid = param[0];
  ComponentMapService$Wonderjs.addComponent(uid, component, param[2]);
  return handleAddComponentFunc(component, uid, componentRecord);
}

function _addSharableComponent(param, param$1, componentRecord) {
  var component = param[1];
  var uid = param[0];
  ComponentMapService$Wonderjs.addComponent(uid, component, param[2]);
  if (param[3]) {
    return param$1[0](component, componentRecord);
  } else {
    return param$1[1](component, uid, componentRecord);
  }
}

function addBasicCameraViewComponent(uid, component, state) {
  var newrecord = state.slice();
  newrecord[/* basicCameraViewRecord */13] = _addComponent(/* tuple */[
        uid,
        component,
        state[/* gameObjectRecord */10][/* basicCameraViewMap */5]
      ], AddBasicCameraViewService$Wonderjs.handleAddComponent, state[/* basicCameraViewRecord */13]);
  return newrecord;
}

function addPerspectiveCameraProjectionComponent(uid, component, state) {
  var newrecord = state.slice();
  newrecord[/* perspectiveCameraProjectionRecord */14] = _addComponent(/* tuple */[
        uid,
        component,
        state[/* gameObjectRecord */10][/* perspectiveCameraProjectionMap */6]
      ], AddPerspectiveCameraProjectionService$Wonderjs.handleAddComponent, state[/* perspectiveCameraProjectionRecord */14]);
  return newrecord;
}

function addTransformComponent(uid, component, state) {
  var newrecord = state.slice();
  newrecord[/* transformRecord */11] = _addComponent(/* tuple */[
        uid,
        component,
        state[/* gameObjectRecord */10][/* transformMap */4]
      ], AddTransformService$Wonderjs.handleAddComponent, state[/* transformRecord */11]);
  return newrecord;
}

function addBoxGeometryComponent(uid, component, state) {
  var boxGeometryRecord = state[/* boxGeometryRecord */20];
  var newrecord = state.slice();
  newrecord[/* boxGeometryRecord */20] = _addSharableComponent(/* tuple */[
        uid,
        component,
        state[/* gameObjectRecord */10][/* boxGeometryMap */7],
        GameObjectGeometryService$Wonderjs.getGameObject(component, boxGeometryRecord)
      ], /* tuple */[
        GroupGeometryService$Wonderjs.increaseGroupCount,
        AddGeometryService$Wonderjs.handleAddComponent
      ], boxGeometryRecord);
  return newrecord;
}

function addBasicMaterialComponent(uid, component, state) {
  var basicMaterialRecord = state[/* basicMaterialRecord */15];
  var newrecord = state.slice();
  newrecord[/* basicMaterialRecord */15] = _addSharableComponent(/* tuple */[
        uid,
        component,
        state[/* gameObjectRecord */10][/* basicMaterialMap */9],
        GameObjectBasicMaterialService$Wonderjs.getGameObject(component, basicMaterialRecord)
      ], /* tuple */[
        GroupBasicMaterialService$Wonderjs.increaseGroupCount,
        AddBasicMaterialService$Wonderjs.handleAddComponent
      ], basicMaterialRecord);
  return newrecord;
}

function addLightMaterialComponent(uid, component, state) {
  var lightMaterialRecord = state[/* lightMaterialRecord */16];
  var newrecord = state.slice();
  newrecord[/* lightMaterialRecord */16] = _addSharableComponent(/* tuple */[
        uid,
        component,
        state[/* gameObjectRecord */10][/* lightMaterialMap */10],
        GameObjectLightMaterialService$Wonderjs.getGameObject(component, lightMaterialRecord)
      ], /* tuple */[
        GroupLightMaterialService$Wonderjs.increaseGroupCount,
        AddLightMaterialService$Wonderjs.handleAddComponent
      ], lightMaterialRecord);
  return newrecord;
}

function addMeshRendererComponent(uid, component, state) {
  var newrecord = state.slice();
  newrecord[/* meshRendererRecord */21] = _addComponent(/* tuple */[
        uid,
        component,
        state[/* gameObjectRecord */10][/* meshRendererMap */8]
      ], AddMeshRendererService$Wonderjs.handleAddComponent, state[/* meshRendererRecord */21]);
  return newrecord;
}

function addAmbientLightComponent(uid, component, state) {
  var newrecord = state.slice();
  newrecord[/* ambientLightRecord */17] = _addComponent(/* tuple */[
        uid,
        component,
        state[/* gameObjectRecord */10][/* ambientLightMap */13]
      ], AddAmbientLightService$Wonderjs.handleAddComponent, state[/* ambientLightRecord */17]);
  return newrecord;
}

function addDirectionLightComponent(uid, component, state) {
  var newrecord = state.slice();
  newrecord[/* directionLightRecord */18] = _addComponent(/* tuple */[
        uid,
        component,
        state[/* gameObjectRecord */10][/* directionLightMap */14]
      ], AddDirectionLightService$Wonderjs.handleAddComponent, state[/* directionLightRecord */18]);
  return newrecord;
}

function addPointLightComponent(uid, component, state) {
  var newrecord = state.slice();
  newrecord[/* pointLightRecord */19] = _addComponent(/* tuple */[
        uid,
        component,
        state[/* gameObjectRecord */10][/* pointLightMap */15]
      ], AddPointLightService$Wonderjs.handleAddComponent, state[/* pointLightRecord */19]);
  return newrecord;
}

function addSourceInstanceComponent(uid, component, state) {
  var newrecord = state.slice();
  newrecord[/* sourceInstanceRecord */6] = _addComponent(/* tuple */[
        uid,
        component,
        state[/* gameObjectRecord */10][/* sourceInstanceMap */11]
      ], AddSourceInstanceService$Wonderjs.handleAddComponent, state[/* sourceInstanceRecord */6]);
  return newrecord;
}

function addObjectInstanceComponent(uid, component, state) {
  var newrecord = state.slice();
  newrecord[/* objectInstanceRecord */7] = _addComponent(/* tuple */[
        uid,
        component,
        state[/* gameObjectRecord */10][/* objectInstanceMap */12]
      ], AddObjectInstanceService$Wonderjs.handleAddComponent, state[/* objectInstanceRecord */7]);
  return newrecord;
}

export {
  _addComponent                           ,
  _addSharableComponent                   ,
  addBasicCameraViewComponent             ,
  addPerspectiveCameraProjectionComponent ,
  addTransformComponent                   ,
  addBoxGeometryComponent                 ,
  addBasicMaterialComponent               ,
  addLightMaterialComponent               ,
  addMeshRendererComponent                ,
  addAmbientLightComponent                ,
  addDirectionLightComponent              ,
  addPointLightComponent                  ,
  addSourceInstanceComponent              ,
  addObjectInstanceComponent              ,
  
}
/* ComponentMapService-Wonderjs Not a pure module */
