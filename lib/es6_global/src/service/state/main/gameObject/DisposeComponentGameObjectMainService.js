// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as ArrayService$Wonderjs                              from "../../../atom/ArrayService.js";
import * as ComponentMapService$Wonderjs                       from "../../../primitive/gameObject/ComponentMapService.js";
import * as MemorySettingService$Wonderjs                      from "../../../record/main/setting/MemorySettingService.js";
import * as DisposePointLightService$Wonderjs                  from "../../../record/main/light/point/DisposePointLightService.js";
import * as DisposeAmbientLightService$Wonderjs                from "../../../record/main/light/ambient/DisposeAmbientLightService.js";
import * as DisposeMeshRendererService$Wonderjs                from "../../../record/main/meshRenderer/DisposeMeshRendererService.js";
import * as DisposeBasicMaterialService$Wonderjs               from "../../../record/main/material/basic/DisposeBasicMaterialService.js";
import * as DisposeLightMaterialService$Wonderjs               from "../../../record/main/material/light/DisposeLightMaterialService.js";
import * as DisposeTransformMainService$Wonderjs               from "../transform/DisposeTransformMainService.js";
import * as DisposeDirectionLightService$Wonderjs              from "../../../record/main/light/direction/DisposeDirectionLightService.js";
import * as DisposeBasicCameraViewService$Wonderjs             from "../../../record/main/basic_camera_view/DisposeBasicCameraViewService.js";
import * as DisposeBoxGeometryMainService$Wonderjs             from "../geometry/box/DisposeBoxGeometryMainService.js";
import * as RecordBasicMaterialMainService$Wonderjs            from "../material/basic/RecordBasicMaterialMainService.js";
import * as RecordLightMaterialMainService$Wonderjs            from "../material/light/RecordLightMaterialMainService.js";
import * as DisposeCustomGeometryMainService$Wonderjs          from "../geometry/custom/DisposeCustomGeometryMainService.js";
import * as DisposeObjectInstanceMainService$Wonderjs          from "../instance/DisposeObjectInstanceMainService.js";
import * as DisposeSourceInstanceMainService$Wonderjs          from "../instance/DisposeSourceInstanceMainService.js";
import * as MaterialArrayForWorkerInitService$Wonderjs         from "../../../primitive/material/MaterialArrayForWorkerInitService.js";
import * as DisposePerspectiveCameraProjectionService$Wonderjs from "../../../record/main/perspective_camera_projection/DisposePerspectiveCameraProjectionService.js";

function deferDisposeBasicCameraViewComponent(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedBasicCameraViewArray */5] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedBasicCameraViewArray */5]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposePerspectiveCameraProjectionComponent(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedPerspectiveCameraProjectionArray */8] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedPerspectiveCameraProjectionArray */8]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposeTransformComponent(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedTransformArray */6] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedTransformArray */6]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposeTransformComponentForKeepOrder(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedTransformArrayForKeepOrder */7] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedTransformArrayForKeepOrder */7]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposeBasicMaterialComponent(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedBasicMaterialArray */9] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedBasicMaterialArray */9]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposeLightMaterialComponent(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedLightMaterialArray */10] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedLightMaterialArray */10]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposeBoxGeometryComponent(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedBoxGeometryArray */11] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedBoxGeometryArray */11]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposeCustomGeometryComponent(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedCustomGeometryArray */12] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedCustomGeometryArray */12]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposeSourceInstanceComponent(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedSourceInstanceArray */13] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedSourceInstanceArray */13]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposeObjectInstanceComponent(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedObjectInstanceArray */14] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedObjectInstanceArray */14]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposeAmbientLightComponent(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedAmbientLightArray */15] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedAmbientLightArray */15]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposeDirectionLightComponent(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedDirectionLightArray */16] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedDirectionLightArray */16]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposePointLightComponent(component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedPointLightArray */17] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedPointLightArray */17]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function deferDisposeMeshRendererComponent(uid, component, state) {
  var newrecord = state.slice();
  var newrecord$1 = state[/* gameObjectRecord */10].slice();
  newrecord$1[/* disposedMeshRendererComponentArray */18] = ArrayService$Wonderjs.push(component, state[/* gameObjectRecord */10][/* disposedMeshRendererComponentArray */18]);
  newrecord$1[/* disposedMeshRendererUidArray */19] = ArrayService$Wonderjs.push(uid, state[/* gameObjectRecord */10][/* disposedMeshRendererUidArray */19]);
  newrecord[/* gameObjectRecord */10] = newrecord$1;
  return newrecord;
}

function batchDisposeBasicCameraViewComponent(state, componentArray) {
  var basicCameraViewRecord = state[/* basicCameraViewRecord */13];
  var newrecord = state.slice();
  newrecord[/* basicCameraViewRecord */13] = ComponentMapService$Wonderjs.batchDisposeComponent(basicCameraViewRecord, DisposeBasicCameraViewService$Wonderjs.handleBatchDisposeComponent, componentArray);
  return newrecord;
}

function batchDisposePerspectiveCameraProjectionComponent(state, componentArray) {
  var perspectiveCameraProjectionRecord = state[/* perspectiveCameraProjectionRecord */14];
  var newrecord = state.slice();
  newrecord[/* perspectiveCameraProjectionRecord */14] = ComponentMapService$Wonderjs.batchDisposeComponent(perspectiveCameraProjectionRecord, DisposePerspectiveCameraProjectionService$Wonderjs.handleBatchDisposeComponent, componentArray);
  return newrecord;
}

function batchDisposeMeshRendererComponent(uidMap, state, componentArray) {
  var meshRendererRecord = state[/* meshRendererRecord */22];
  var newrecord = state.slice();
  newrecord[/* meshRendererRecord */22] = ComponentMapService$Wonderjs.batchDisposeComponentWithUidMap(uidMap, meshRendererRecord, DisposeMeshRendererService$Wonderjs.handleBatchDisposeComponent, componentArray);
  return newrecord;
}

function batchDisposeTransformComponent(state, isKeepOrder, componentArray) {
  return DisposeTransformMainService$Wonderjs.handleBatchDisposeComponent(componentArray, MemorySettingService$Wonderjs.getMaxTypeArrayPoolSize(state[/* settingRecord */0]), isKeepOrder, state);
}

function batchDisposeBoxGeometryComponent(state, componentArray) {
  return DisposeBoxGeometryMainService$Wonderjs.handleBatchDisposeComponent(componentArray, state);
}

function batchDisposeCustomGeometryComponent(state, componentArray) {
  return DisposeCustomGeometryMainService$Wonderjs.handleBatchDisposeComponent(componentArray, state);
}

function batchDisposeBasicMaterialComponent(state, componentArray) {
  var newrecord = state.slice();
  newrecord[/* basicMaterialRecord */15] = /* Some */[ComponentMapService$Wonderjs.batchDisposeComponent(RecordBasicMaterialMainService$Wonderjs.getRecord(state), DisposeBasicMaterialService$Wonderjs.handleBatchDisposeComponent, componentArray)];
  return newrecord;
}

function batchDisposeBasicMaterialComponentForWorker(state, componentArray) {
  var record = ComponentMapService$Wonderjs.batchDisposeComponent(RecordBasicMaterialMainService$Wonderjs.getRecord(state), DisposeBasicMaterialService$Wonderjs.handleBatchDisposeComponent, componentArray);
  var materialArrayForWorkerInit = record[/* materialArrayForWorkerInit */9];
  var newrecord = state.slice();
  var newrecord$1 = record.slice();
  newrecord[/* basicMaterialRecord */15] = /* Some */[(newrecord$1[/* materialArrayForWorkerInit */9] = MaterialArrayForWorkerInitService$Wonderjs.removeDisposedOnesFromMaterialArrayForWorkerInit(componentArray, materialArrayForWorkerInit), newrecord$1)];
  return newrecord;
}

function batchDisposeLightMaterialComponent(state, componentArray) {
  var newrecord = state.slice();
  newrecord[/* lightMaterialRecord */16] = /* Some */[ComponentMapService$Wonderjs.batchDisposeComponent(RecordLightMaterialMainService$Wonderjs.getRecord(state), DisposeLightMaterialService$Wonderjs.handleBatchDisposeComponent, componentArray)];
  return newrecord;
}

function batchDisposeLightMaterialComponentForWorker(state, componentArray) {
  var record = ComponentMapService$Wonderjs.batchDisposeComponent(RecordLightMaterialMainService$Wonderjs.getRecord(state), DisposeLightMaterialService$Wonderjs.handleBatchDisposeComponent, componentArray);
  var materialArrayForWorkerInit = record[/* materialArrayForWorkerInit */13];
  var newrecord = state.slice();
  var newrecord$1 = record.slice();
  newrecord[/* lightMaterialRecord */16] = /* Some */[(newrecord$1[/* materialArrayForWorkerInit */13] = MaterialArrayForWorkerInitService$Wonderjs.removeDisposedOnesFromMaterialArrayForWorkerInit(componentArray, materialArrayForWorkerInit), newrecord$1)];
  return newrecord;
}

function batchDisposeAmbientLightComponent(state, componentArray) {
  var ambientLightRecord = state[/* ambientLightRecord */17];
  var newrecord = state.slice();
  newrecord[/* ambientLightRecord */17] = ComponentMapService$Wonderjs.batchDisposeComponent(ambientLightRecord, DisposeAmbientLightService$Wonderjs.handleBatchDisposeComponent, componentArray);
  return newrecord;
}

function batchDisposeDirectionLightComponent(state, componentArray) {
  var directionLightRecord = state[/* directionLightRecord */18];
  var newrecord = state.slice();
  newrecord[/* directionLightRecord */18] = ComponentMapService$Wonderjs.batchDisposeComponent(directionLightRecord, DisposeDirectionLightService$Wonderjs.handleBatchDisposeComponent, componentArray);
  return newrecord;
}

function batchDisposePointLightComponent(state, componentArray) {
  var pointLightRecord = state[/* pointLightRecord */19];
  var newrecord = state.slice();
  newrecord[/* pointLightRecord */19] = ComponentMapService$Wonderjs.batchDisposeComponent(pointLightRecord, DisposePointLightService$Wonderjs.handleBatchDisposeComponent, componentArray);
  return newrecord;
}

function batchDisposeSourceInstanceComponent(state, isKeepOrder, disposeGameObjectFunc, componentArray) {
  return DisposeSourceInstanceMainService$Wonderjs.handleBatchDisposeComponent(componentArray, isKeepOrder, disposeGameObjectFunc, state);
}

function batchDisposeObjectInstanceComponent(state, componentArray) {
  var match = componentArray.length;
  if (match !== 0) {
    return DisposeObjectInstanceMainService$Wonderjs.handleBatchDisposeComponent(componentArray, state);
  } else {
    return state;
  }
}

export {
  deferDisposeBasicCameraViewComponent             ,
  deferDisposePerspectiveCameraProjectionComponent ,
  deferDisposeTransformComponent                   ,
  deferDisposeTransformComponentForKeepOrder       ,
  deferDisposeBasicMaterialComponent               ,
  deferDisposeLightMaterialComponent               ,
  deferDisposeBoxGeometryComponent                 ,
  deferDisposeCustomGeometryComponent              ,
  deferDisposeSourceInstanceComponent              ,
  deferDisposeObjectInstanceComponent              ,
  deferDisposeAmbientLightComponent                ,
  deferDisposeDirectionLightComponent              ,
  deferDisposePointLightComponent                  ,
  deferDisposeMeshRendererComponent                ,
  batchDisposeBasicCameraViewComponent             ,
  batchDisposePerspectiveCameraProjectionComponent ,
  batchDisposeMeshRendererComponent                ,
  batchDisposeTransformComponent                   ,
  batchDisposeBoxGeometryComponent                 ,
  batchDisposeCustomGeometryComponent              ,
  batchDisposeBasicMaterialComponent               ,
  batchDisposeBasicMaterialComponentForWorker      ,
  batchDisposeLightMaterialComponent               ,
  batchDisposeLightMaterialComponentForWorker      ,
  batchDisposeAmbientLightComponent                ,
  batchDisposeDirectionLightComponent              ,
  batchDisposePointLightComponent                  ,
  batchDisposeSourceInstanceComponent              ,
  batchDisposeObjectInstanceComponent              ,
  
}
/* ArrayService-Wonderjs Not a pure module */
