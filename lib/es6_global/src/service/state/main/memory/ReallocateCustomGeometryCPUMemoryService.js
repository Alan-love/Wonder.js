// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as TypeArrayService$Wonderjs                 from "../../../primitive/buffer/TypeArrayService.js";
import * as ArrayService$WonderCommonlib              from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArrayService.js";
import * as SparseMapService$WonderCommonlib          from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapService.js";
import * as ReallocateCPUMemoryService$Wonderjs       from "../../../primitive/memory/ReallocateCPUMemoryService.js";
import * as BufferCustomGeometryService$Wonderjs      from "../../../record/main/geometry/custom/BufferCustomGeometryService.js";
import * as ReallocatedPointsGeometryService$Wonderjs from "../../../primitive/geometry/ReallocatedPointsGeometryService.js";

function _updateInfos(infos, infoIndex, param, offset) {
  var increment = param[1] - param[0] | 0;
  return ReallocatedPointsGeometryService$Wonderjs.setInfo(infoIndex, offset, offset + increment | 0, infos);
}

function _setNewMap(oldIndex, newIndex, oldMap, newMap) {
  return SparseMapService$WonderCommonlib.set(newIndex, SparseMapService$WonderCommonlib.unsafeGet(oldIndex, oldMap), newMap);
}

function _allocateNewData(newAliveIndexArray, param) {
  var indicesInfos = param[/* indicesInfos */7];
  var normalsInfos = param[/* normalsInfos */6];
  var verticesInfos = param[/* verticesInfos */5];
  var indices = param[/* indices */4];
  var normals = param[/* normals */3];
  var vertices = param[/* vertices */2];
  return ArrayService$WonderCommonlib.reduceOneParam((function (param, index) {
                var newIndicesOffset = param[6];
                var newNormalsOffset = param[5];
                var newVerticesOffset = param[4];
                var infoIndex = BufferCustomGeometryService$Wonderjs.getInfoIndex(index);
                var verticesInfo = ReallocatedPointsGeometryService$Wonderjs.getInfo(infoIndex, verticesInfos);
                var normalsInfo = ReallocatedPointsGeometryService$Wonderjs.getInfo(infoIndex, normalsInfos);
                var indicesInfo = ReallocatedPointsGeometryService$Wonderjs.getInfo(infoIndex, indicesInfos);
                return /* tuple */[
                        param[0] + 1 | 0,
                        _updateInfos(verticesInfos, infoIndex, verticesInfo, newVerticesOffset),
                        _updateInfos(normalsInfos, infoIndex, normalsInfo, newNormalsOffset),
                        _updateInfos(indicesInfos, infoIndex, indicesInfo, newIndicesOffset),
                        TypeArrayService$Wonderjs.fillFloat32ArrayWithFloat32Array(/* tuple */[
                              vertices,
                              newVerticesOffset
                            ], /* tuple */[
                              vertices,
                              verticesInfo[0]
                            ], verticesInfo[1]),
                        TypeArrayService$Wonderjs.fillFloat32ArrayWithFloat32Array(/* tuple */[
                              normals,
                              newNormalsOffset
                            ], /* tuple */[
                              normals,
                              normalsInfo[0]
                            ], normalsInfo[1]),
                        TypeArrayService$Wonderjs.fillUint16ArrayWithUint16Array(/* tuple */[
                              indices,
                              newIndicesOffset
                            ], /* tuple */[
                              indices,
                              indicesInfo[0]
                            ], indicesInfo[1]),
                        vertices,
                        normals,
                        indices
                      ];
              }), /* tuple */[
              0,
              verticesInfos,
              normalsInfos,
              indicesInfos,
              0,
              0,
              0,
              vertices,
              normals,
              indices
            ], newAliveIndexArray);
}

function _setNewDataToState(newAliveIndexArray, customGeometryRecord, param) {
  return /* record */[
          /* index */customGeometryRecord[/* index */0],
          /* buffer */customGeometryRecord[/* buffer */1],
          /* vertices */param[7],
          /* normals */param[8],
          /* indices */param[9],
          /* verticesInfos */param[1],
          /* normalsInfos */param[2],
          /* indicesInfos */param[3],
          /* verticesOffset */param[4],
          /* normalsOffset */param[5],
          /* indicesOffset */param[6],
          /* disposeCount */customGeometryRecord[/* disposeCount */11],
          /* gameObjectMap */customGeometryRecord[/* gameObjectMap */12],
          /* groupCountMap */customGeometryRecord[/* groupCountMap */13],
          /* disposedIndexArray */customGeometryRecord[/* disposedIndexArray */14],
          /* disposedIndexMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
          /* aliveIndexArray */newAliveIndexArray
        ];
}

function reAllocate(customGeometryRecord) {
  var disposedIndexMap = customGeometryRecord[/* disposedIndexMap */15];
  var newAliveIndexArray = customGeometryRecord[/* aliveIndexArray */16].filter((function (aliveIndex) {
          return 1 - ReallocateCPUMemoryService$Wonderjs.isDisposed(aliveIndex, disposedIndexMap);
        }));
  return _setNewDataToState(newAliveIndexArray, customGeometryRecord, _allocateNewData(newAliveIndexArray, customGeometryRecord));
}

export {
  _updateInfos       ,
  _setNewMap         ,
  _allocateNewData   ,
  _setNewDataToState ,
  reAllocate         ,
  
}
/* TypeArrayService-Wonderjs Not a pure module */
