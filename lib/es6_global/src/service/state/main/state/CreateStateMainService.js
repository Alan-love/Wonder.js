// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as RecordJobService$Wonderjs                         from "../../../record/main/job/RecordJobService.js";
import * as RecordGLSLService$Wonderjs                        from "../../../record/all/glsl/RecordGLSLService.js";
import * as RecordViewService$Wonderjs                        from "../../../record/main/device/RecordViewService.js";
import * as ShaderChunkSystem$Wonderjs                        from "../../../../glsl/ShaderChunkSystem.js";
import * as RecordSceneService$Wonderjs                       from "../../../record/main/scene/RecordSceneService.js";
import * as RecordShaderService$Wonderjs                      from "../../../record/all/shader/RecordShaderService.js";
import * as RecordProgramService$Wonderjs                     from "../../../record/all/program/RecordProgramService.js";
import * as RecordSettingService$Wonderjs                     from "../../../record/main/setting/RecordSettingService.js";
import * as RecordGPUDetectService$Wonderjs                   from "../../../record/all/gpu/RecordGPUDetectService.js";
import * as RecordVboBufferService$Wonderjs                   from "../../../record/main/vboBuffer/RecordVboBufferService.js";
import * as RecordGameObjectService$Wonderjs                  from "../../../record/main/gameObject/RecordGameObjectService.js";
import * as RecordGlobalTempService$Wonderjs                  from "../../../record/all/globalTemp/RecordGlobalTempService.js";
import * as RecordGLSLLocationService$Wonderjs                from "../../../record/all/location/RecordGLSLLocationService.js";
import * as RecordMeshRendererService$Wonderjs                from "../../../record/main/meshRenderer/RecordMeshRendererService.js";
import * as RecordWorkerDetectService$Wonderjs                from "../../../record/main/workerDetect/RecordWorkerDetectService.js";
import * as RecordDeviceManagerService$Wonderjs               from "../../../record/all/device/RecordDeviceManagerService.js";
import * as RecordGLSLSenderAllService$Wonderjs               from "../../all/sender/RecordGLSLSenderAllService.js";
import * as RecordTypeArrayPoolService$Wonderjs               from "../../../record/main/typeArrayPool/RecordTypeArrayPoolService.js";
import * as RecordObjectInstanceService$Wonderjs              from "../../../record/main/instance/objectInstance/RecordObjectInstanceService.js";
import * as RecordPointLightMainService$Wonderjs              from "../light/point/RecordPointLightMainService.js";
import * as RecordTimeControllerService$Wonderjs              from "../../../record/main/timeController/RecordTimeControllerService.js";
import * as RecordWorkerInstanceService$Wonderjs              from "../../../record/main/workerInstance/RecordWorkerInstanceService.js";
import * as RecordBasicCameraViewService$Wonderjs             from "../../../record/main/basic_camera_view/RecordBasicCameraViewService.js";
import * as RecordBoxGeometryMainService$Wonderjs             from "../geometry/box/RecordBoxGeometryMainService.js";
import * as RecordAmbientLightMainService$Wonderjs            from "../light/ambient/RecordAmbientLightMainService.js";
import * as RecordDirectionLightMainService$Wonderjs          from "../light/direction/RecordDirectionLightMainService.js";
import * as RecordPerspectiveCameraProjectionService$Wonderjs from "../../../record/main/perspective_camera_projection/RecordPerspectiveCameraProjectionService.js";

function createState() {
  return /* record */[
          /* settingRecord */RecordSettingService$Wonderjs.create(/* () */0),
          /* jobRecord */RecordJobService$Wonderjs.create(/* () */0),
          /* noWorkerJobRecord : None */0,
          /* workerJobRecord : None */0,
          /* renderConfigRecord : None */0,
          /* gpuDetectRecord */RecordGPUDetectService$Wonderjs.create(/* () */0),
          /* sourceInstanceRecord : None */0,
          /* objectInstanceRecord */RecordObjectInstanceService$Wonderjs.create(/* () */0),
          /* viewRecord */RecordViewService$Wonderjs.create(/* () */0),
          /* deviceManagerRecord */RecordDeviceManagerService$Wonderjs.create(/* () */0),
          /* gameObjectRecord */RecordGameObjectService$Wonderjs.create(/* () */0),
          /* transformRecord : None */0,
          /* sceneRecord */RecordSceneService$Wonderjs.create(/* () */0),
          /* basicCameraViewRecord */RecordBasicCameraViewService$Wonderjs.create(/* () */0),
          /* perspectiveCameraProjectionRecord */RecordPerspectiveCameraProjectionService$Wonderjs.create(/* () */0),
          /* basicMaterialRecord : None */0,
          /* lightMaterialRecord : None */0,
          /* ambientLightRecord */RecordAmbientLightMainService$Wonderjs.create(/* () */0),
          /* directionLightRecord */RecordDirectionLightMainService$Wonderjs.create(/* () */0),
          /* pointLightRecord */RecordPointLightMainService$Wonderjs.create(/* () */0),
          /* boxGeometryRecord */RecordBoxGeometryMainService$Wonderjs.create(/* () */0),
          /* customGeometryRecord : None */0,
          /* meshRendererRecord */RecordMeshRendererService$Wonderjs.create(/* () */0),
          /* shaderRecord */RecordShaderService$Wonderjs.create(/* () */0),
          /* glslRecord */RecordGLSLService$Wonderjs.create(/* () */0),
          /* programRecord */RecordProgramService$Wonderjs.create(/* () */0),
          /* glslLocationRecord */RecordGLSLLocationService$Wonderjs.create(/* () */0),
          /* glslSenderRecord */RecordGLSLSenderAllService$Wonderjs.create(/* () */0),
          /* glslChunkRecord */ShaderChunkSystem$Wonderjs.create(/* () */0),
          /* renderRecord : None */0,
          /* timeControllerRecord */RecordTimeControllerService$Wonderjs.create(/* () */0),
          /* vboBufferRecord */RecordVboBufferService$Wonderjs.create(/* () */0),
          /* globalTempRecord */RecordGlobalTempService$Wonderjs.create(/* () */0),
          /* typeArrayPoolRecord */RecordTypeArrayPoolService$Wonderjs.create(/* () */0),
          /* workerInstanceRecord */RecordWorkerInstanceService$Wonderjs.create(/* () */0),
          /* workerDetectRecord */RecordWorkerDetectService$Wonderjs.create(/* () */0)
        ];
}

export {
  createState ,
  
}
/* RecordJobService-Wonderjs Not a pure module */
