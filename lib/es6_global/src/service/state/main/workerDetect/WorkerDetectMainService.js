// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                          from "../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as DomService$Wonderjs            from "../../../primitiive/DomService.js";
import * as DetectService$Wonderjs         from "../../../primitiive/DetectService.js";
import * as OperateSettingService$Wonderjs from "../../../record/setting/OperateSettingService.js";

var _isSupportSharedArrayBuffer = (
    function(){
        return typeof SharedArrayBuffer !== "undefined"
    }
    );

function detect(state) {
  var isSupportSharedArrayBuffer = Curry._1(_isSupportSharedArrayBuffer, /* () */0);
  var newrecord = state.slice();
  var match = 1 - isSupportSharedArrayBuffer;
  newrecord[/* workerDetectRecord */34] = /* record */[
    /* isSupportSharedArrayBuffer */isSupportSharedArrayBuffer,
    /* isSupportRenderWorkerAndSharedArrayBuffer */match !== 0 ? /* false */0 : Curry._2(DetectService$Wonderjs.hasProperty, "transferControlToOffscreen", DomService$Wonderjs.buildDom("<canvas></canvas>"))
  ];
  return newrecord;
}

function isSupportSharedArrayBuffer(state) {
  return state[/* workerDetectRecord */34][/* isSupportSharedArrayBuffer */0];
}

function isSupportRenderWorkerAndSharedArrayBuffer(state) {
  return state[/* workerDetectRecord */34][/* isSupportRenderWorkerAndSharedArrayBuffer */1];
}

function isUseWorker(state) {
  if (OperateSettingService$Wonderjs.unsafeGetWorker(state[/* settingRecord */0])[/* useWorker */0]) {
    return state[/* workerDetectRecord */34][/* isSupportRenderWorkerAndSharedArrayBuffer */1];
  } else {
    return /* false */0;
  }
}

export {
  _isSupportSharedArrayBuffer               ,
  detect                                    ,
  isSupportSharedArrayBuffer                ,
  isSupportRenderWorkerAndSharedArrayBuffer ,
  isUseWorker                               ,
  
}
/* _isSupportSharedArrayBuffer Not a pure module */
