// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE

import * as Caml_array from "../../../../../../../../node_modules/bs-platform/lib/es6/caml_array.js";
import * as ArrayService$Wonderjs from "../../../../atom/ArrayService.js";
import * as SparseMapService$WonderCommonlib from "../../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapService.js";

function _addToEventArr(eventName, eventData, eventArrMap) {
  var match = SparseMapService$WonderCommonlib.get(eventName, eventArrMap);
  if (match) {
    return SparseMapService$WonderCommonlib.set(eventName, ArrayService$Wonderjs.push(eventData, match[0]).sort((function (eventDataA, eventDataB) {
                      return eventDataB[/* priority */0] - eventDataA[/* priority */0] | 0;
                    })), eventArrMap);
  } else {
    return SparseMapService$WonderCommonlib.set(eventName, /* array */[eventData], eventArrMap);
  }
}

function _removeFromEventArrMapByHandleFunc(eventName, targetHandleFunc, eventArrMap) {
  var match = SparseMapService$WonderCommonlib.get(eventName, eventArrMap);
  if (match) {
    return SparseMapService$WonderCommonlib.set(eventName, match[0].filter((function (param) {
                      return param[/* handleFunc */1] !== targetHandleFunc;
                    })), eventArrMap);
  } else {
    return eventArrMap;
  }
}

function bind(eventName, priority, handleFunc, state) {
  var eventRecord = state[/* eventRecord */40];
  var newrecord = Caml_array.caml_array_dup(state);
  newrecord[/* eventRecord */40] = /* record */[
    /* domEventStreamSubscription */eventRecord[/* domEventStreamSubscription */0],
    /* mouseDomEventDataArrMap */_addToEventArr(eventName, /* record */[
          /* priority */priority,
          /* handleFunc */handleFunc
        ], eventRecord[/* mouseDomEventDataArrMap */1]),
    /* keyboardDomEventDataArrMap */eventRecord[/* keyboardDomEventDataArrMap */2],
    /* touchDomEventDataArrMap */eventRecord[/* touchDomEventDataArrMap */3],
    /* customGlobalEventArrMap */eventRecord[/* customGlobalEventArrMap */4],
    /* customGameObjectEventArrMap */eventRecord[/* customGameObjectEventArrMap */5],
    /* mouseEventData */eventRecord[/* mouseEventData */6],
    /* keyboardEventData */eventRecord[/* keyboardEventData */7],
    /* touchEventData */eventRecord[/* touchEventData */8]
  ];
  return newrecord;
}

function unbindByHandleFunc(eventName, handleFunc, state) {
  var eventRecord = state[/* eventRecord */40];
  var newrecord = Caml_array.caml_array_dup(state);
  newrecord[/* eventRecord */40] = /* record */[
    /* domEventStreamSubscription */eventRecord[/* domEventStreamSubscription */0],
    /* mouseDomEventDataArrMap */_removeFromEventArrMapByHandleFunc(eventName, handleFunc, eventRecord[/* mouseDomEventDataArrMap */1]),
    /* keyboardDomEventDataArrMap */eventRecord[/* keyboardDomEventDataArrMap */2],
    /* touchDomEventDataArrMap */eventRecord[/* touchDomEventDataArrMap */3],
    /* customGlobalEventArrMap */eventRecord[/* customGlobalEventArrMap */4],
    /* customGameObjectEventArrMap */eventRecord[/* customGameObjectEventArrMap */5],
    /* mouseEventData */eventRecord[/* mouseEventData */6],
    /* keyboardEventData */eventRecord[/* keyboardEventData */7],
    /* touchEventData */eventRecord[/* touchEventData */8]
  ];
  return newrecord;
}

export {
  _addToEventArr ,
  _removeFromEventArrMapByHandleFunc ,
  bind ,
  unbindByHandleFunc ,
  
}
/* ArrayService-Wonderjs Not a pure module */
