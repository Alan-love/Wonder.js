// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';


function getNearest() {
  return 0;
}

function getNearestMipmapNearest() {
  return 1;
}

function getNearestMipmapLinear() {
  return 2;
}

function getLinear() {
  return 3;
}

function getLinearMipmapNearest() {
  return 4;
}

function getLinearMipmapLinear() {
  return 5;
}

function getGlFilter(gl, filter) {
  if (filter) {
    if (filter === 1) {
      return gl.NEAREST_MIPMAP_NEAREST;
    } else if (filter === 2) {
      return gl.NEAREST_MIPMAP_LINEAR;
    } else if (filter === 3) {
      return gl.LINEAR;
    } else if (filter === 4) {
      return gl.LINEAR_MIPMAP_NEAREST;
    } else {
      return gl.LINEAR_MIPMAP_LINEAR;
    }
  } else {
    return gl.NEAREST;
  }
}

export {
  getNearest              ,
  getNearestMipmapNearest ,
  getNearestMipmapLinear  ,
  getLinear               ,
  getLinearMipmapNearest  ,
  getLinearMipmapLinear   ,
  getGlFilter             ,
  
}
/* No side effect */
