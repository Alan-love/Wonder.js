// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as ArraySystem$Wonderjs                      from "../../../../../../structure/ArraySystem.js";
import * as GeometryAdmin$Wonderjs                    from "../../../../../../ecs/admin/component/GeometryAdmin.js";
import * as GameObjectAdmin$Wonderjs                  from "../../../../../../ecs/admin/GameObjectAdmin.js";
import * as GLSLSenderDrawUtils$Wonderjs              from "../../../../../../renderer/shader/sender/utils/GLSLSenderDrawUtils.js";
import * as SourceInstanceAdmin$Wonderjs              from "../../../../../../ecs/admin/component/instance/SourceInstanceAdmin.js";
import * as RenderBasicJobCommon$Wonderjs             from "../RenderBasicJobCommon.js";
import * as GameObjectGetComponentCommon$Wonderjs     from "../../../../../../ecs/admin/GameObjectGetComponentCommon.js";
import * as GLSLSenderConfigDataHandleSystem$Wonderjs from "../../../../../../renderer/shader/sender/GLSLSenderConfigDataHandleSystem.js";

function render(gl, uid, state) {
  var match = RenderBasicJobCommon$Wonderjs.render(gl, uid, state);
  var state$1 = match[0];
  var instanceUniformSendNoCachableData = GLSLSenderConfigDataHandleSystem$Wonderjs.unsafeGetInstanceUniformSendNoCachableData(match[1], state$1);
  var drawMode = GeometryAdmin$Wonderjs.getDrawMode(gl);
  var indexType = GeometryAdmin$Wonderjs.getIndexType(gl);
  var indexTypeSize = GeometryAdmin$Wonderjs.getIndexTypeSize(gl);
  var indicesCount = GeometryAdmin$Wonderjs.getIndicesCount(match[2], state$1);
  var sourceInstance = GameObjectGetComponentCommon$Wonderjs.unsafeGetSourceInstanceComponent(uid, state$1);
  var objectInstanceArray = SourceInstanceAdmin$Wonderjs.getObjectInstanceArray(sourceInstance, state$1);
  return ArraySystem$Wonderjs.reduceState((function (state, uid) {
                var state$1 = ArraySystem$Wonderjs.reduceState((function (state, param) {
                        param[/* sendNoCachableDataFunc */2](gl, param[/* pos */0], param[/* getNoCachableDataFunc */1](GameObjectAdmin$Wonderjs.unsafeGetTransformComponent(uid, state), state));
                        return state;
                      }), state, instanceUniformSendNoCachableData);
                GLSLSenderDrawUtils$Wonderjs.drawElement(/* tuple */[
                      drawMode,
                      indexType,
                      indexTypeSize,
                      indicesCount
                    ], gl);
                return state$1;
              }), state$1, objectInstanceArray);
}

export {
  render ,
  
}
/* ArraySystem-Wonderjs Not a pure module */
