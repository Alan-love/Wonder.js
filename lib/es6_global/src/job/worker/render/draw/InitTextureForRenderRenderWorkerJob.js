// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE

import * as Most from "most";
import * as MostUtils$Wonderjs from "../../../../asset/utils/MostUtils.js";
import * as MessageService$Wonderjs from "../../../../service/primitive/worker/MessageService.js";
import * as InitTextureService$Wonderjs from "../../../../service/primitive/texture/InitTextureService.js";
import * as DeviceManagerService$Wonderjs from "../../../../service/record/all/device/DeviceManagerService.js";
import * as StateRenderWorkerService$Wonderjs from "../../../../service/state/render_worker/state/StateRenderWorkerService.js";
import * as RecordBasicSourceTextureRenderWorkerService$Wonderjs from "../../../../service/state/render_worker/texture/basic_source/RecordBasicSourceTextureRenderWorkerService.js";
import * as SourceMapBasicSourceTextureRenderWorkerService$Wonderjs from "../../../../service/state/render_worker/texture/basic_source/SourceMapBasicSourceTextureRenderWorkerService.js";
import * as RecordArrayBufferViewSourceTextureRenderWorkerService$Wonderjs from "../../../../service/state/render_worker/texture/arrayBufferView_source/RecordArrayBufferViewSourceTextureRenderWorkerService.js";
import * as SourceMapArrayBufferViewSourceTextureRenderWorkerService$Wonderjs from "../../../../service/state/render_worker/texture/arrayBufferView_source/SourceMapArrayBufferViewSourceTextureRenderWorkerService.js";

function _buildAddArrayBufferViewSourceStream(e, stateData) {
  return MostUtils$Wonderjs.callFunc((function () {
                var state = StateRenderWorkerService$Wonderjs.unsafeGetState(stateData);
                var data = MessageService$Wonderjs.getRecord(e);
                var initData = data.initData;
                var textureData = initData.textureData;
                return StateRenderWorkerService$Wonderjs.setState(stateData, SourceMapArrayBufferViewSourceTextureRenderWorkerService$Wonderjs.addSourceArray(textureData.arrayBufferViewSourceTextureData.needAddedSourceArray, state));
              }));
}

function _buildInitTextureStream(e, stateData) {
  return MostUtils$Wonderjs.callFunc((function () {
                var state = StateRenderWorkerService$Wonderjs.unsafeGetState(stateData);
                var data = MessageService$Wonderjs.getRecord(e);
                var initData = data.initData;
                var textureData = initData.textureData;
                var basicSourceTextureRecord = RecordBasicSourceTextureRenderWorkerService$Wonderjs.getRecord(state);
                var arrayBufferViewSourceTextureRecord = RecordArrayBufferViewSourceTextureRenderWorkerService$Wonderjs.getRecord(state);
                state[/* basicSourceTextureRecord */13] = /* Some */[/* record */[
                    /* wrapSs */basicSourceTextureRecord[/* wrapSs */0],
                    /* wrapTs */basicSourceTextureRecord[/* wrapTs */1],
                    /* magFilters */basicSourceTextureRecord[/* magFilters */2],
                    /* minFilters */basicSourceTextureRecord[/* minFilters */3],
                    /* formats */basicSourceTextureRecord[/* formats */4],
                    /* types */basicSourceTextureRecord[/* types */5],
                    /* isNeedUpdates */basicSourceTextureRecord[/* isNeedUpdates */6],
                    /* sourceMap */basicSourceTextureRecord[/* sourceMap */7],
                    /* glTextureMap */InitTextureService$Wonderjs.initTexturesWithIndexArray(DeviceManagerService$Wonderjs.unsafeGetGl(state[/* deviceManagerRecord */3]), textureData.basicSourceTextureData.needInitedTextureIndexArray, basicSourceTextureRecord[/* glTextureMap */8]),
                    /* bindTextureUnitCacheMap */basicSourceTextureRecord[/* bindTextureUnitCacheMap */9]
                  ]];
                state[/* arrayBufferViewSourceTextureRecord */14] = /* Some */[/* record */[
                    /* wrapSs */arrayBufferViewSourceTextureRecord[/* wrapSs */0],
                    /* wrapTs */arrayBufferViewSourceTextureRecord[/* wrapTs */1],
                    /* magFilters */arrayBufferViewSourceTextureRecord[/* magFilters */2],
                    /* minFilters */arrayBufferViewSourceTextureRecord[/* minFilters */3],
                    /* formats */arrayBufferViewSourceTextureRecord[/* formats */4],
                    /* types */arrayBufferViewSourceTextureRecord[/* types */5],
                    /* isNeedUpdates */arrayBufferViewSourceTextureRecord[/* isNeedUpdates */6],
                    /* widths */arrayBufferViewSourceTextureRecord[/* widths */7],
                    /* heights */arrayBufferViewSourceTextureRecord[/* heights */8],
                    /* sourceMap */arrayBufferViewSourceTextureRecord[/* sourceMap */9],
                    /* glTextureMap */InitTextureService$Wonderjs.initTexturesWithIndexArray(DeviceManagerService$Wonderjs.unsafeGetGl(state[/* deviceManagerRecord */3]), textureData.arrayBufferViewSourceTextureData.needInitedTextureIndexArray, arrayBufferViewSourceTextureRecord[/* glTextureMap */10]),
                    /* bindTextureUnitCacheMap */arrayBufferViewSourceTextureRecord[/* bindTextureUnitCacheMap */11]
                  ]];
                return state;
              }));
}

function execJob(_, e, stateData) {
  var state = StateRenderWorkerService$Wonderjs.unsafeGetState(stateData);
  var data = MessageService$Wonderjs.getRecord(e);
  var initData = data.initData;
  var textureData = initData.textureData;
  return Most.fromPromise(Most.forEach((function (state) {
                      StateRenderWorkerService$Wonderjs.setState(stateData, state);
                      return /* () */0;
                    }), MostUtils$Wonderjs.concatArray(/* array */[
                        SourceMapBasicSourceTextureRenderWorkerService$Wonderjs.addSourceFromImageDataStream(textureData.basicSourceTextureData.needAddedImageDataArray, state),
                        _buildAddArrayBufferViewSourceStream(e, stateData),
                        _buildInitTextureStream(e, stateData)
                      ])).then((function () {
                    return Promise.resolve(e);
                  })));
}

export {
  _buildAddArrayBufferViewSourceStream ,
  _buildInitTextureStream ,
  execJob ,
  
}
/* most Not a pure module */
