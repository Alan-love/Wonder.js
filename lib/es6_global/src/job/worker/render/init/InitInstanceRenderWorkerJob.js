// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as MostUtils$Wonderjs                            from "../../../../asset/utils/MostUtils.js";
import * as MessageService$Wonderjs                       from "../../../../service/primitive/worker/MessageService.js";
import * as StateRenderWorkerService$Wonderjs             from "../../../../service/state/render_worker/state/StateRenderWorkerService.js";
import * as BufferRenderWorkerSettingService$Wonderjs     from "../../../../service/record/render_worker/setting/BufferRenderWorkerSettingService.js";
import * as CreateTypeArraySourceInstanceService$Wonderjs from "../../../../service/record/all/instance/CreateTypeArraySourceInstanceService.js";

function _createTypeArrays(buffer, sourceInstanceCount, objectInstanceCountPerSourceInstance, state) {
  var match = CreateTypeArraySourceInstanceService$Wonderjs.createTypeArrays(buffer, sourceInstanceCount, objectInstanceCountPerSourceInstance);
  var init = state[/* sourceInstanceRecord */10];
  state[/* sourceInstanceRecord */10] = /* record */[
    /* objectInstanceTransformIndexMap */init[/* objectInstanceTransformIndexMap */0],
    /* objectInstanceTransformCollections : Some */[match[0]],
    /* isTransformStatics : Some */[match[1]],
    /* matrixInstanceBufferCapacityMap */init[/* matrixInstanceBufferCapacityMap */3],
    /* matrixFloat32ArrayMap */init[/* matrixFloat32ArrayMap */4],
    /* isSendTransformMatrixDataMap */init[/* isSendTransformMatrixDataMap */5]
  ];
  return state;
}

function execJob(_, e, stateData) {
  return MostUtils$Wonderjs.callFunc((function () {
                var state = StateRenderWorkerService$Wonderjs.unsafeGetState(stateData);
                var settingRecord = state[/* settingRecord */0];
                var data = MessageService$Wonderjs.getRecord(e);
                var sourceInstanceData = data.sourceInstanceData;
                var state$1 = _createTypeArrays(sourceInstanceData.buffer, BufferRenderWorkerSettingService$Wonderjs.getSourceInstanceCount(settingRecord), BufferRenderWorkerSettingService$Wonderjs.getObjectInstanceCountPerSourceInstance(settingRecord), state);
                var newrecord = state$1[/* sourceInstanceRecord */10].slice();
                newrecord[/* objectInstanceTransformIndexMap */0] = /* Some */[sourceInstanceData.objectInstanceTransformIndexMap];
                state$1[/* sourceInstanceRecord */10] = newrecord;
                StateRenderWorkerService$Wonderjs.setState(stateData, state$1);
                return e;
              }));
}

export {
  _createTypeArrays ,
  execJob           ,
  
}
/* MostUtils-Wonderjs Not a pure module */
