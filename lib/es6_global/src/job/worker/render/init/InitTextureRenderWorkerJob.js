// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Most                                                              from "most";
import * as MostUtils$Wonderjs                                                from "../../../../asset/utils/MostUtils.js";
import * as ArrayService$Wonderjs                                             from "../../../../service/atom/ArrayService.js";
import * as MessageService$Wonderjs                                           from "../../../../service/primitive/worker/MessageService.js";
import * as InitTextureService$Wonderjs                                       from "../../../../service/primitive/texture/InitTextureService.js";
import * as DeviceManagerService$Wonderjs                                     from "../../../../service/record/all/device/DeviceManagerService.js";
import * as SparseMapService$WonderCommonlib                                  from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapService.js";
import * as StateRenderWorkerService$Wonderjs                                 from "../../../../service/state/render_worker/state/StateRenderWorkerService.js";
import * as BufferRenderWorkerSettingService$Wonderjs                         from "../../../../service/record/render_worker/setting/BufferRenderWorkerSettingService.js";
import * as CreateTypeArrayBasicSourceTextureService$Wonderjs                 from "../../../../service/record/all/texture/basic_source/CreateTypeArrayBasicSourceTextureService.js";
import * as RecordBasicSourceTextureRenderWorkerService$Wonderjs              from "../../../../service/state/render_worker/texture/basic_source/RecordBasicSourceTextureRenderWorkerService.js";
import * as SourceMapBasicSourceTextureRenderWorkerService$Wonderjs           from "../../../../service/state/render_worker/texture/basic_source/SourceMapBasicSourceTextureRenderWorkerService.js";
import * as CreateTypeArrayArrayBufferViewSourceTextureService$Wonderjs       from "../../../../service/record/all/texture/arrayBufferView_source/CreateTypeArrayArrayBufferViewSourceTextureService.js";
import * as RecordArrayBufferViewSourceTextureRenderWorkerService$Wonderjs    from "../../../../service/state/render_worker/texture/arrayBufferView_source/RecordArrayBufferViewSourceTextureRenderWorkerService.js";
import * as SourceMapArrayBufferViewSourceTextureRenderWorkerService$Wonderjs from "../../../../service/state/render_worker/texture/arrayBufferView_source/SourceMapArrayBufferViewSourceTextureRenderWorkerService.js";

function _createTypeArrays(buffer, basicSourceTextureCount, arrayBufferViewSourceTextureCount, state) {
  var match = CreateTypeArrayBasicSourceTextureService$Wonderjs.createTypeArrays(buffer, basicSourceTextureCount);
  state[/* basicSourceTextureRecord */13] = /* Some */[/* record */[
      /* wrapSs : Some */[match[0]],
      /* wrapTs : Some */[match[1]],
      /* magFilters : Some */[match[2]],
      /* minFilters : Some */[match[3]],
      /* formats : Some */[match[4]],
      /* types : Some */[match[5]],
      /* isNeedUpdates : Some */[match[6]],
      /* sourceMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
      /* glTextureMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
      /* bindTextureUnitCacheMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0)
    ]];
  var match$1 = CreateTypeArrayArrayBufferViewSourceTextureService$Wonderjs.createTypeArrays(buffer, basicSourceTextureCount, arrayBufferViewSourceTextureCount);
  state[/* arrayBufferViewSourceTextureRecord */14] = /* Some */[/* record */[
      /* wrapSs : Some */[match$1[0]],
      /* wrapTs : Some */[match$1[1]],
      /* magFilters : Some */[match$1[2]],
      /* minFilters : Some */[match$1[3]],
      /* formats : Some */[match$1[4]],
      /* types : Some */[match$1[5]],
      /* isNeedUpdates : Some */[match$1[6]],
      /* widths : Some */[match$1[7]],
      /* heights : Some */[match$1[8]],
      /* sourceMap : None */0,
      /* glTextureMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0),
      /* bindTextureUnitCacheMap */SparseMapService$WonderCommonlib.createEmpty(/* () */0)
    ]];
  return state;
}

function _buildCreateTypeArraysStream(e, stateData) {
  return MostUtils$Wonderjs.callFunc((function () {
                var state = StateRenderWorkerService$Wonderjs.unsafeGetState(stateData);
                var settingRecord = state[/* settingRecord */0];
                var data = MessageService$Wonderjs.getRecord(e);
                var textureData = data.textureData;
                var basicSourceTextureCount = BufferRenderWorkerSettingService$Wonderjs.unsafeGetBasicSourceTextureCount(settingRecord);
                var arrayBufferViewSourceTextureCount = BufferRenderWorkerSettingService$Wonderjs.unsafeGetArrayBufferViewSourceTextureCount(settingRecord);
                return StateRenderWorkerService$Wonderjs.setState(stateData, _createTypeArrays(textureData.buffer, basicSourceTextureCount, arrayBufferViewSourceTextureCount, state));
              }));
}

function _buildAddArrayBufferViewSourceStream(e, stateData) {
  return MostUtils$Wonderjs.callFunc((function () {
                var state = StateRenderWorkerService$Wonderjs.unsafeGetState(stateData);
                var data = MessageService$Wonderjs.getRecord(e);
                var textureData = data.textureData;
                var sourceMap = textureData.arrayBufferViewSourceTextureData.sourceMap;
                return StateRenderWorkerService$Wonderjs.setState(stateData, SourceMapArrayBufferViewSourceTextureRenderWorkerService$Wonderjs.setSourceMap(sourceMap, state));
              }));
}

function _buildInitTextureStream(e, stateData) {
  return MostUtils$Wonderjs.callFunc((function () {
                var state = StateRenderWorkerService$Wonderjs.unsafeGetState(stateData);
                var data = MessageService$Wonderjs.getRecord(e);
                var textureData = data.textureData;
                var basicSourceTextureRecord = RecordBasicSourceTextureRenderWorkerService$Wonderjs.getRecord(state);
                var arrayBufferViewSourceTextureRecord = RecordArrayBufferViewSourceTextureRenderWorkerService$Wonderjs.getRecord(state);
                var newrecord = basicSourceTextureRecord.slice();
                state[/* basicSourceTextureRecord */13] = /* Some */[(newrecord[/* glTextureMap */8] = InitTextureService$Wonderjs.initTextures(DeviceManagerService$Wonderjs.unsafeGetGl(state[/* deviceManagerRecord */3]), ArrayService$Wonderjs.range(0, textureData.basicSourceTextureData.index - 1 | 0), basicSourceTextureRecord[/* glTextureMap */8]), newrecord)];
                var newrecord$1 = arrayBufferViewSourceTextureRecord.slice();
                state[/* arrayBufferViewSourceTextureRecord */14] = /* Some */[(newrecord$1[/* glTextureMap */10] = InitTextureService$Wonderjs.initTextures(DeviceManagerService$Wonderjs.unsafeGetGl(state[/* deviceManagerRecord */3]), ArrayService$Wonderjs.range(0, textureData.arrayBufferViewSourceTextureData.index - 1 | 0), arrayBufferViewSourceTextureRecord[/* glTextureMap */10]), newrecord$1)];
                return state;
              }));
}

function execJob(_, e, stateData) {
  var state = StateRenderWorkerService$Wonderjs.unsafeGetState(stateData);
  var data = MessageService$Wonderjs.getRecord(e);
  var textureData = data.textureData;
  return Most.fromPromise(Most.forEach((function (state) {
                      StateRenderWorkerService$Wonderjs.setState(stateData, state);
                      return /* () */0;
                    }), MostUtils$Wonderjs.concatArray(/* array */[
                        _buildCreateTypeArraysStream(e, stateData),
                        SourceMapBasicSourceTextureRenderWorkerService$Wonderjs.addSourceFromImageDataStream(textureData.basicSourceTextureData.needAddedImageDataArray, state),
                        _buildAddArrayBufferViewSourceStream(e, stateData),
                        _buildInitTextureStream(e, stateData)
                      ])).then((function () {
                    return Promise.resolve(e);
                  })));
}

export {
  _createTypeArrays                    ,
  _buildCreateTypeArraysStream         ,
  _buildAddArrayBufferViewSourceStream ,
  _buildInitTextureStream              ,
  execJob                              ,
  
}
/* most Not a pure module */
