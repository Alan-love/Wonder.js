// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as MostUtils$Wonderjs                                       from "../../../../asset/utils/MostUtils.js";
import * as MessageService$Wonderjs                                  from "../../../../service/primitive/worker/MessageService.js";
import * as DeviceManagerService$Wonderjs                            from "../../../../service/record/all/device/DeviceManagerService.js";
import * as StateRenderWorkerService$Wonderjs                        from "../../../../service/state/render_worker/state/StateRenderWorkerService.js";
import * as InitInitLightMaterialService$Wonderjs                    from "../../../../service/state/init_material/init_lightMaterial/material/InitInitLightMaterialService.js";
import * as JudgeInstanceRenderWorkerService$Wonderjs                from "../../../../service/state/render_worker/instance/JudgeInstanceRenderWorkerService.js";
import * as CreateTypeArrayLightMaterialService$Wonderjs             from "../../../../service/record/all/material/light/CreateTypeArrayLightMaterialService.js";
import * as RecordLightMaterialRenderWorkerService$Wonderjs          from "../../../../service/state/render_worker/material/light/RecordLightMaterialRenderWorkerService.js";
import * as CreateInitLightMaterialStateRenderWorkerService$Wonderjs from "../../../../service/state/render_worker/material/light/CreateInitLightMaterialStateRenderWorkerService.js";

function _createTypeArrays(count, state) {
  var lightMaterialRecord = RecordLightMaterialRenderWorkerService$Wonderjs.getRecord(state);
  var match = CreateTypeArrayLightMaterialService$Wonderjs.createTypeArrays(lightMaterialRecord[/* buffer */0], count);
  state[/* lightMaterialRecord */12] = /* Some */[/* record */[
      /* buffer */lightMaterialRecord[/* buffer */0],
      /* shaderIndices : Some */[match[0]],
      /* diffuseColors : Some */[match[1]],
      /* specularColors : Some */[match[2]],
      /* shininess : Some */[match[3]],
      /* index */lightMaterialRecord[/* index */5],
      /* disposedIndexArray */lightMaterialRecord[/* disposedIndexArray */6],
      /* isSourceInstanceMap */lightMaterialRecord[/* isSourceInstanceMap */7]
    ]];
  return state;
}

function _initMaterials(_, _$1, state) {
  var match = RecordLightMaterialRenderWorkerService$Wonderjs.getRecord(state);
  InitInitLightMaterialService$Wonderjs.init(DeviceManagerService$Wonderjs.unsafeGetGl(state[/* deviceManagerRecord */3]), /* tuple */[
        match[/* isSourceInstanceMap */7],
        JudgeInstanceRenderWorkerService$Wonderjs.isSupportInstance(state)
      ], CreateInitLightMaterialStateRenderWorkerService$Wonderjs.createInitMaterialState(state));
  return state;
}

function execJob(_, e, stateData) {
  return MostUtils$Wonderjs.callFunc((function () {
                var state = StateRenderWorkerService$Wonderjs.unsafeGetState(stateData);
                var data = MessageService$Wonderjs.getRecord(e);
                var lightMaterialData = data.lightMaterialData;
                var count = data.bufferData.lightMaterialDataBufferCount;
                StateRenderWorkerService$Wonderjs.setState(stateData, _initMaterials(lightMaterialData, data, _createTypeArrays(count, state)));
                return e;
              }));
}

export {
  _createTypeArrays ,
  _initMaterials    ,
  execJob           ,
  
}
/* MostUtils-Wonderjs Not a pure module */
