// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as JobService$Wonderjs                              from "../../service/primitiive/job/JobService.js";
import * as HandleJobService$Wonderjs                        from "../../service/primitiive/job/HandleJobService.js";
import * as HashMapService$WonderCommonlib                   from "../../../../../node_modules/wonder-commonlib/lib/es6_global/src/HashMapService.js";
import * as InitGlRenderWorkerJob$Wonderjs                   from "./render/InitGlRenderWorkerJob.js";
import * as SendJobDataMainWorkerJob$Wonderjs                from "./main/init/SendJobDataMainWorkerJob.js";
import * as DetectWorkerMainWorkerJob$Wonderjs               from "./main/init/DetectWorkerMainWorkerJob.js";
import * as SendInitRenderDataMainWorkerJob$Wonderjs         from "./main/init/SendInitRenderDataMainWorkerJob.js";
import * as GetInitRenderDataRenderWorkerJob$Wonderjs        from "./render/GetInitRenderDataRenderWorkerJob.js";
import * as CreateWorkerInstanceMainWorkerJob$Wonderjs       from "./main/init/CreateWorkerInstanceMainWorkerJob.js";
import * as GetFinishSendJobDataMainWorkerJob$Wonderjs       from "./main/init/GetFinishSendJobDataMainWorkerJob.js";
import * as GetFinishInitRenderDataMainWorkerJob$Wonderjs    from "./main/init/GetFinishInitRenderDataMainWorkerJob.js";
import * as SendFinishSendJobDataRenderWorkerJob$Wonderjs    from "./render/SendFinishSendJobDataRenderWorkerJob.js";
import * as SendFinishInitRenderDataRenderWorkerJob$Wonderjs from "./render/SendFinishInitRenderDataRenderWorkerJob.js";

function _getMainInitJobHandles() {
  return /* :: */[
          /* tuple */[
            "detect_worker",
            DetectWorkerMainWorkerJob$Wonderjs.execJob
          ],
          /* :: */[
            /* tuple */[
              "create_worker_instance",
              CreateWorkerInstanceMainWorkerJob$Wonderjs.execJob
            ],
            /* :: */[
              /* tuple */[
                "send_job_data",
                SendJobDataMainWorkerJob$Wonderjs.execJob
              ],
              /* :: */[
                /* tuple */[
                  "get_finish_send_job_data",
                  GetFinishSendJobDataMainWorkerJob$Wonderjs.execJob
                ],
                /* :: */[
                  /* tuple */[
                    "send_init_render_data",
                    SendInitRenderDataMainWorkerJob$Wonderjs.execJob
                  ],
                  /* :: */[
                    /* tuple */[
                      "get_finish_init_render_data",
                      GetFinishInitRenderDataMainWorkerJob$Wonderjs.execJob
                    ],
                    /* [] */0
                  ]
                ]
              ]
            ]
          ]
        ];
}

function _getWorkerJobHandles() {
  return /* :: */[
          /* tuple */[
            "send_finish_send_job_data",
            SendFinishSendJobDataRenderWorkerJob$Wonderjs.execJob
          ],
          /* :: */[
            /* tuple */[
              "get_init_render_data",
              GetInitRenderDataRenderWorkerJob$Wonderjs.execJob
            ],
            /* :: */[
              /* tuple */[
                "init_gl",
                InitGlRenderWorkerJob$Wonderjs.execJob
              ],
              /* :: */[
                /* tuple */[
                  "send_finish_init_render_data",
                  SendFinishInitRenderDataRenderWorkerJob$Wonderjs.execJob
                ],
                /* [] */0
              ]
            ]
          ]
        ];
}

function createMainInitJobHandleMap() {
  return HandleJobService$Wonderjs.createJobHandleMap(_getMainInitJobHandles(/* () */0));
}

function createWorkerJobHandleMap() {
  return HandleJobService$Wonderjs.createJobHandleMap(_getWorkerJobHandles(/* () */0));
}

function getMainInitJobHandle(name, jobHandleMap) {
  var match = HashMapService$WonderCommonlib.get(name, jobHandleMap);
  if (match) {
    return match[0];
  } else {
    return JobService$Wonderjs.handleGetNoneJob(name, jobHandleMap);
  }
}

function getWorkerJobHandle(name, jobHandleMap) {
  var match = HashMapService$WonderCommonlib.get(name, jobHandleMap);
  if (match) {
    return match[0];
  } else {
    return JobService$Wonderjs.handleGetNoneJob(name, jobHandleMap);
  }
}

export {
  _getMainInitJobHandles     ,
  _getWorkerJobHandles       ,
  createMainInitJobHandleMap ,
  createWorkerJobHandleMap   ,
  getMainInitJobHandle       ,
  getWorkerJobHandle         ,
  
}
/* JobService-Wonderjs Not a pure module */
