// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Most                      from "most";
import * as Caml_array                from "../../../../../../node_modules/bs-platform/lib/es6/caml_array.js";
import * as Js_boolean                from "../../../../../../node_modules/bs-platform/lib/es6/js_boolean.js";
import * as Log$WonderLog             from "../../../../../../node_modules/wonder-log/lib/es6_global/src/Log.js";
import * as JobConfigService$Wonderjs from "../../../service/primitiive/JobConfigService.js";

function _createGetWorkerDataStream(flags, target) {
  return Most.filter((function (e) {
                return Js_boolean.to_js_boolean(+(e.record.operateType === Caml_array.caml_array_get(JobConfigService$Wonderjs.unsafeGetFlags(flags), 0)));
              }), Most.fromEvent("message", target));
}

function createGetMainWorkerDataStream(flags, target) {
  return Most.tap((function () {
                return Log$WonderLog.log("--in other worker-- get message from main worker: " + (String(flags) + ""));
              }), Most.map((function (e) {
                    return /* Some */[e];
                  }), _createGetWorkerDataStream(flags, target)));
}

function createGetOtherWorkerDataStream(flags, target) {
  return Most.tap((function () {
                return Log$WonderLog.log("**in main worker** get message from other worker: " + (String(flags) + ""));
              }), Most.map((function () {
                    return /* None */0;
                  }), Most.take(1, _createGetWorkerDataStream(flags, target))));
}

export {
  _createGetWorkerDataStream     ,
  createGetMainWorkerDataStream  ,
  createGetOtherWorkerDataStream ,
  
}
/* most Not a pure module */
