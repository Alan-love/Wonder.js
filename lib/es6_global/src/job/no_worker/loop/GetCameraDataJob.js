// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as PMatrixService$Wonderjs                from "../../../service/primitiive/PMatrixService.js";
import * as VMatrixService$Wonderjs                from "../../../service/primitiive/VMatrixService.js";
import * as CameraSceneMainService$Wonderjs        from "../../../service/state/main/scene/CameraSceneMainService.js";
import * as UpdateTransformService$Wonderjs        from "../../../service/record/transform/UpdateTransformService.js";
import * as OperateRenderMainService$Wonderjs      from "../../../service/state/main/render/OperateRenderMainService.js";
import * as GetComponentGameObjectService$Wonderjs from "../../../service/record/gameObject/GetComponentGameObjectService.js";

function _getCameraData(state) {
  var globalTempRecord = state[/* globalTempRecord */31];
  var transformRecord = state[/* transformRecord */11];
  var gameObjectRecord = state[/* gameObjectRecord */10];
  var match = CameraSceneMainService$Wonderjs.getCurrentCameraGameObject(state[/* basicCameraViewRecord */13], state[/* sceneRecord */12]);
  if (match) {
    var currentCameraGameObject = match[0];
    var transform = GetComponentGameObjectService$Wonderjs.unsafeGetTransformComponent(currentCameraGameObject, gameObjectRecord);
    return /* Some */[/* record */[
              /* vMatrix */VMatrixService$Wonderjs.getWorldToCameraMatrix(UpdateTransformService$Wonderjs.updateAndGetLocalToWorldMatrixTypeArray(transform, globalTempRecord, transformRecord)),
              /* pMatrix */PMatrixService$Wonderjs.unsafeGetPMatrix(GetComponentGameObjectService$Wonderjs.unsafeGetPerspectiveCameraProjectionComponent(currentCameraGameObject, gameObjectRecord), state[/* perspectiveCameraProjectionRecord */14][/* pMatrixMap */2]),
              /* position */UpdateTransformService$Wonderjs.updateAndGetPositionTuple(transform, globalTempRecord, transformRecord)
            ]];
  } else {
    return /* None */0;
  }
}

function execJob(_, _$1, state) {
  return OperateRenderMainService$Wonderjs.setCameraData(_getCameraData(state), state);
}

export {
  _getCameraData ,
  execJob        ,
  
}
/* PMatrixService-Wonderjs Not a pure module */
