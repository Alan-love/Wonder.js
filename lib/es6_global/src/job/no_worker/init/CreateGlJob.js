// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Js_boolean                     from "../../../../../../node_modules/bs-platform/lib/es6/js_boolean.js";
import * as GlService$Wonderjs             from "../../../service/primitiive/gl/GlService.js";
import * as ViewService$Wonderjs           from "../../../service/record/device/ViewService.js";
import * as DeviceManagerService$Wonderjs  from "../../../service/record/device/DeviceManagerService.js";
import * as OperateSettingService$Wonderjs from "../../../service/record/setting/OperateSettingService.js";

function _convertContextConfigDataToJsObj(param) {
  return {
          alpha: Js_boolean.to_js_boolean(param[/* alpha */0]),
          depth: Js_boolean.to_js_boolean(param[/* depth */1]),
          stencil: Js_boolean.to_js_boolean(param[/* stencil */2]),
          antialias: Js_boolean.to_js_boolean(param[/* antialias */3]),
          premultipliedAlpha: Js_boolean.to_js_boolean(param[/* premultipliedAlpha */4]),
          preserveDrawingBuffer: Js_boolean.to_js_boolean(param[/* preserveDrawingBuffer */5])
        };
}

function execJob(_, state) {
  var newrecord = state.slice();
  newrecord[/* deviceManagerRecord */9] = DeviceManagerService$Wonderjs.setGl(GlService$Wonderjs.createGl(_convertContextConfigDataToJsObj(OperateSettingService$Wonderjs.unsafeGetContext(state[/* settingRecord */0])), ViewService$Wonderjs.getCanvas(state[/* viewRecord */8])), state[/* deviceManagerRecord */9]);
  return newrecord;
}

export {
  _convertContextConfigDataToJsObj ,
  execJob                          ,
  
}
/* ViewService-Wonderjs Not a pure module */
