// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Js_option                from "../../../../../node_modules/bs-platform/lib/es6/js_option.js";
import * as Log$WonderLog            from "../../../../../node_modules/wonder-log/lib/es6_global/src/Log.js";
import * as Contract$WonderLog       from "../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateData$Wonderjs       from "../../core/StateData.js";
import * as JobConfigSystem$Wonderjs from "../common/JobConfigSystem.js";

function _unsafeGetLogicJobConfig(state) {
  Contract$WonderLog.requireCheck((function () {
          return Contract$WonderLog.test(Log$WonderLog.buildAssertMessage("logic job config exist", "not"), (function () {
                        return Contract$WonderLog.assertExist(state[/* logicJobConfig */4]);
                      }));
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  return Js_option.getExn(state[/* logicJobConfig */4]);
}

function getInitPipelines(state) {
  return _unsafeGetLogicJobConfig(state)[/* init_pipelines */1];
}

function getInitJobs(state) {
  return _unsafeGetLogicJobConfig(state)[/* init_jobs */3];
}

function getUpdatePipelines(state) {
  return _unsafeGetLogicJobConfig(state)[/* update_pipelines */2];
}

function getUpdateJobs(state) {
  return _unsafeGetLogicJobConfig(state)[/* update_jobs */4];
}

function getLogicSetting(state) {
  return _unsafeGetLogicJobConfig(state)[/* logic_setting */0];
}

function _getExecutableJob(_, param) {
  return /* record */[/* name */param[/* name */0]];
}

function _getPipelineExecutableJobs(pipeline, pipelines, jobs) {
  var pipelineItem = JobConfigSystem$Wonderjs.findFirst(pipelines, (function (param) {
          return JobConfigSystem$Wonderjs.filterTargetName(param[/* name */0], pipeline);
        }));
  return pipelineItem[/* jobs */1].map((function (param) {
                return _getExecutableJob(jobs, param);
              }));
}

function getInitPipelineExecutableJobs(param, init_pipelines, jobs) {
  return _getPipelineExecutableJobs(param[/* init_pipeline */0], init_pipelines, jobs);
}

function getUpdatePipelineExecutableJobs(param, update_pipelines, jobs) {
  return _getPipelineExecutableJobs(param[/* update_pipeline */1], update_pipelines, jobs);
}

export {
  _unsafeGetLogicJobConfig        ,
  getInitPipelines                ,
  getInitJobs                     ,
  getUpdatePipelines              ,
  getUpdateJobs                   ,
  getLogicSetting                 ,
  _getExecutableJob               ,
  _getPipelineExecutableJobs      ,
  getInitPipelineExecutableJobs   ,
  getUpdatePipelineExecutableJobs ,
  
}
/* Log-WonderLog Not a pure module */
