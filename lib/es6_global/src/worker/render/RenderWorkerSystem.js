// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Most                           from "most";
import * as Curry                          from "../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Js_boolean                     from "../../../../../node_modules/bs-platform/lib/es6/js_boolean.js";
import * as Log$WonderLog                  from "../../../../../node_modules/wonder-log/lib/es6_global/src/Log.js";
import * as MostUtils$Wonderjs             from "../../asset/utils/MostUtils.js";
import * as ArrayService$Wonderjs          from "../../service/atom/ArrayService.js";
import * as WorkerService$Wonderjs         from "../../service/primitiive/worker/WorkerService.js";
import * as WorkerJobService$Wonderjs      from "../../service/state/main/job/WorkerJobService.js";
import * as RenderWorkerStateData$Wonderjs from "../../service/state/render/data/RenderWorkerStateData.js";

function onerrorHandler(msg, fileName, lineno) {
  return Log$WonderLog.error(Log$WonderLog.buildErrorMessage("render worker error", "" + (String(msg) + ""), "", "", "fileName:" + (String(fileName) + ("\n        lineno:" + (String(lineno) + "")))));
}

Most.drain(Most.concatMap((function (e) {
            return Most.mergeArray(ArrayService$Wonderjs.push(Most.concatMap((function (e) {
                                  return MostUtils$Wonderjs.callFunc((function () {
                                                WorkerService$Wonderjs.postMessage({
                                                      operateType: "finish_loop"
                                                    }, Curry._1(WorkerService$Wonderjs.getSelf, /* () */0));
                                                return e;
                                              }));
                                }), Most.tap((function () {
                                      return Log$WonderLog.log("--in other worker-- get message from main worker: loop");
                                    }), Most.map((function (e) {
                                          return /* Some */[e];
                                        }), Most.filter((function (e) {
                                              return Js_boolean.to_js_boolean(+(e.record.operateType === "loop"));
                                            }), Most.fromEvent("message", Curry._1(WorkerService$Wonderjs.getSelf, /* () */0)))))), WorkerJobService$Wonderjs.getRenderWorkerJobStreamArr(JSON.parse(e.record.pipelineJobs), JSON.parse(e.record.jobs), RenderWorkerStateData$Wonderjs.renderWorkerStateData)));
          }), Most.filter((function (e) {
                return Js_boolean.to_js_boolean(+(e.record.operateType === "SEND_JOB_DATA"));
              }), Most.fromEvent("message", Curry._1(WorkerService$Wonderjs.getSelf, /* () */0)))));

export {
  onerrorHandler ,
  
}
/*  Not a pure module */
