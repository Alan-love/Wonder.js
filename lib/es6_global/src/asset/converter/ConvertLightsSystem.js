// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE

import * as ArrayService$Wonderjs from "../../service/atom/ArrayService.js";
import * as ArrayService$WonderCommonlib from "../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArrayService.js";
import * as RecordPointLightMainService$Wonderjs from "../../service/state/main/light/point/RecordPointLightMainService.js";

function _getColor(color) {
  if (color) {
    return color[0];
  } else {
    return /* array */[
            0,
            0,
            0
          ];
  }
}

function _getIntensity(intensity) {
  if (intensity) {
    return intensity[0];
  } else {
    return 1;
  }
}

function convertToLights(param) {
  var extensions = param[/* extensions */14];
  if (extensions) {
    var khr_lights = extensions[0][/* khr_lights */0];
    if (khr_lights) {
      return ArrayService$WonderCommonlib.reduceOneParam((function (param, param$1) {
                    var range = param$1[/* range */6];
                    var quadraticAttenuation = param$1[/* quadraticAttenuation */5];
                    var linearAttenuation = param$1[/* linearAttenuation */4];
                    var constantAttenuation = param$1[/* constantAttenuation */3];
                    var intensity = param$1[/* intensity */2];
                    var color = param$1[/* color */1];
                    var pointLightArr = param[2];
                    var directionLightArr = param[1];
                    var ambientLightArr = param[0];
                    switch (param$1[/* type_ */0]) {
                      case "ambient" : 
                          return /* tuple */[
                                  ArrayService$Wonderjs.push(/* record */[/* color */_getColor(color)], ambientLightArr),
                                  directionLightArr,
                                  pointLightArr
                                ];
                      case "directional" : 
                          return /* tuple */[
                                  ambientLightArr,
                                  ArrayService$Wonderjs.push(/* record */[
                                        /* color */_getColor(color),
                                        /* intensity */_getIntensity(intensity)
                                      ], directionLightArr),
                                  pointLightArr
                                ];
                      case "point" : 
                          return /* tuple */[
                                  ambientLightArr,
                                  directionLightArr,
                                  ArrayService$Wonderjs.push(/* record */[
                                        /* color */_getColor(color),
                                        /* intensity */_getIntensity(intensity),
                                        /* constantAttenuation */constantAttenuation ? constantAttenuation[0] : 1,
                                        /* linearAttenuation */linearAttenuation ? linearAttenuation[0] : 0,
                                        /* quadraticAttenuation */quadraticAttenuation ? quadraticAttenuation[0] : 0,
                                        /* range */range ? range[0] : RecordPointLightMainService$Wonderjs.getDefaultRange(/* () */0)
                                      ], pointLightArr)
                                ];
                      default:
                        return /* tuple */[
                                ambientLightArr,
                                directionLightArr,
                                pointLightArr
                              ];
                    }
                  }), /* tuple */[
                  /* array */[],
                  /* array */[],
                  /* array */[]
                ], khr_lights[0][/* lights */0]);
    } else {
      return /* tuple */[
              /* array */[],
              /* array */[],
              /* array */[]
            ];
    }
  } else {
    return /* tuple */[
            /* array */[],
            /* array */[],
            /* array */[]
          ];
  }
}

export {
  _getColor ,
  _getIntensity ,
  convertToLights ,
  
}
/* ArrayService-Wonderjs Not a pure module */
