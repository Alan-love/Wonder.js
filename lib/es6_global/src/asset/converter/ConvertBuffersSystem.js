// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE

import * as Log$WonderLog from "../../../../../node_modules/wonder-log/lib/es6_global/src/Log.js";
import * as ArrayService$Wonderjs from "../../service/atom/ArrayService.js";
import * as ArrayService$WonderCommonlib from "../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArrayService.js";

function convertToBuffers(param) {
  return ArrayService$WonderCommonlib.reduceOneParam((function (arr, param) {
                return ArrayService$Wonderjs.push(param[/* byteLength */1], arr);
              }), /* array */[], param[/* buffers */6]);
}

function _convertComponentType(componentType) {
  var exit = 0;
  var switcher = componentType - 5120 | 0;
  if (switcher > 6 || switcher < 0) {
    exit = 1;
  } else {
    switch (switcher) {
      case 0 : 
          return /* BYTE */0;
      case 1 : 
          return /* UNSIGNED_BYTE */1;
      case 2 : 
          return /* SHORT */2;
      case 3 : 
          return /* UNSIGNED_SHORT */3;
      case 4 : 
          exit = 1;
          break;
      case 5 : 
          return /* UNSIGNED_INT */4;
      case 6 : 
          return /* FLOAT */5;
      
    }
  }
  if (exit === 1) {
    return Log$WonderLog.fatal(Log$WonderLog.buildFatalMessage("_convertToAccessors", "unknown componentType: " + (String(componentType) + ""), "", "", ""));
  }
  
}

function _convertType(type_) {
  switch (type_) {
    case "MAT2" : 
        return /* MAT2 */4;
    case "MAT3" : 
        return /* MAT3 */5;
    case "MAT4" : 
        return /* MAT4 */6;
    case "SCALAR" : 
        return /* SCALAR */0;
    case "VEC2" : 
        return /* VEC2 */1;
    case "VEC3" : 
        return /* VEC3 */2;
    case "VEC4" : 
        return /* VEC4 */3;
    default:
      return Log$WonderLog.fatal(Log$WonderLog.buildFatalMessage("_convertToAccessors", "unknown type_:" + (String(type_) + ""), "", "", ""));
  }
}

function convertToAccessors(param) {
  return ArrayService$WonderCommonlib.reduceOneParam((function (arr, param) {
                var byteOffset = param[/* byteOffset */1];
                var bufferView = param[/* bufferView */0];
                return ArrayService$Wonderjs.push(/* record */[
                            /* bufferView */bufferView !== undefined ? bufferView : Log$WonderLog.fatal(Log$WonderLog.buildFatalMessage("_convertToAccessors", "bufferView should exist", "", "", "")),
                            /* byteOffset */byteOffset !== undefined ? byteOffset : 0,
                            /* count */param[/* count */2],
                            /* componentType */_convertComponentType(param[/* componentType */3]),
                            /* type_ */_convertType(param[/* type_ */4])
                          ], arr);
              }), /* array */[], param[/* accessors */8]);
}

function convertToBufferViews(param) {
  return ArrayService$WonderCommonlib.reduceOneParam((function (arr, param) {
                var byteOffset = param[/* byteOffset */1];
                return ArrayService$Wonderjs.push(/* record */[
                            /* buffer */param[/* buffer */0],
                            /* byteOffset */byteOffset !== undefined ? byteOffset : 0,
                            /* byteLength */param[/* byteLength */2],
                            /* byteStride */param[/* byteStride */3]
                          ], arr);
              }), /* array */[], param[/* bufferViews */7]);
}

export {
  convertToBuffers ,
  _convertComponentType ,
  _convertType ,
  convertToAccessors ,
  convertToBufferViews ,
  
}
/* Log-WonderLog Not a pure module */
