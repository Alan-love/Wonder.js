// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE

import * as BuildBufferSystem$Wonderjs from "./BuildBufferSystem.js";
import * as GetNodeDataSystem$Wonderjs from "./GetNodeDataSystem.js";
import * as BuildLightDataSystem$Wonderjs from "./BuildLightDataSystem.js";
import * as EncodeGLTFJsonSystem$Wonderjs from "./EncodeGLTFJsonSystem.js";
import * as BuildCameraDataSystem$Wonderjs from "./BuildCameraDataSystem.js";
import * as BuildGeometryDataSystem$Wonderjs from "./BuildGeometryDataSystem.js";
import * as BuildMaterialDataSystem$Wonderjs from "./BuildMaterialDataSystem.js";
import * as BuildExtensionDataSystem$Wonderjs from "./BuildExtensionDataSystem.js";

function generateEmbededGLTF(sceneGameObject, imageBase64Map, state) {
  var match = GetNodeDataSystem$Wonderjs.getAllNodeData(sceneGameObject, state);
  var match$1 = match[1];
  var meshPointDataMap = match$1[0];
  var state$1 = match[0];
  var match$2 = BuildGeometryDataSystem$Wonderjs.build(meshPointDataMap);
  var match$3 = match$2[1];
  var totalByteLength = match$2[0];
  var buffer = BuildBufferSystem$Wonderjs.build(totalByteLength, meshPointDataMap);
  var match$4 = BuildMaterialDataSystem$Wonderjs.build(match$1[1], imageBase64Map, state$1);
  var cameraDataArr = BuildCameraDataSystem$Wonderjs.build(match$1[2], state$1);
  var lightDataArr = BuildLightDataSystem$Wonderjs.build(match$1[3], state$1);
  var extensionsUsedArr = BuildExtensionDataSystem$Wonderjs.buildExtensionsUsed(lightDataArr);
  return EncodeGLTFJsonSystem$Wonderjs.encode(/* tuple */[
              buffer,
              totalByteLength
            ], /* tuple */[
              match[2],
              match$3[0],
              match$3[1],
              match$3[2],
              match$4[0],
              match$4[1],
              match$4[2],
              match$4[3],
              cameraDataArr,
              lightDataArr,
              extensionsUsedArr
            ], state$1);
}

export {
  generateEmbededGLTF ,
  
}
/* BuildBufferSystem-Wonderjs Not a pure module */
