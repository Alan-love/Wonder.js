// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Most                             from "most";
import * as StateDataMain$Wonderjs           from "../service/state/main/data/StateDataMain.js";
import * as WonderMostAnimationFrame         from "wonder-most-animation-frame";
import * as StateDataMainService$Wonderjs    from "../service/state/main/state/StateDataMainService.js";
import * as WorkerJobMainService$Wonderjs    from "../service/state/main/job/worker/WorkerJobMainService.js";
import * as TimeControllerService$Wonderjs   from "../service/record/main/timeController/TimeControllerService.js";
import * as WorkerJobHandleSystem$Wonderjs   from "../job/worker/WorkerJobHandleSystem.js";
import * as NoWorkerJobMainService$Wonderjs  from "../service/state/main/job/no_worker/NoWorkerJobMainService.js";
import * as WorkerDetectMainService$Wonderjs from "../service/state/main/workerDetect/WorkerDetectMainService.js";

function _workerInit(stateData, state) {
  return WorkerJobMainService$Wonderjs.getMainInitJobStream(stateData, /* tuple */[
              WorkerJobHandleSystem$Wonderjs.createMainInitJobHandleMap,
              WorkerJobHandleSystem$Wonderjs.getMainInitJobHandle
            ], state);
}

var _noWorkerInit = NoWorkerJobMainService$Wonderjs.execNoWorkerInitJobs;

function _computeElapseTime(time, state) {
  state[/* timeControllerRecord */33] = TimeControllerService$Wonderjs.computeElapseTime(time, state[/* timeControllerRecord */33]);
  return state;
}

function _createWorkerLoopStream() {
  return Most.continueWith((function () {
                return _createWorkerLoopStream(/* () */0);
              }), Most.flatMap((function (time) {
                    var state = _computeElapseTime(time, StateDataMainService$Wonderjs.unsafeGetState(StateDataMain$Wonderjs.stateData));
                    return Most.map((function () {
                                  return /* () */0;
                                }), WorkerJobMainService$Wonderjs.getMainLoopJobStream(StateDataMain$Wonderjs.stateData, /* tuple */[
                                    WorkerJobHandleSystem$Wonderjs.createMainLoopJobHandleMap,
                                    WorkerJobHandleSystem$Wonderjs.getMainLoopJobHandle
                                  ], state));
                  }), WonderMostAnimationFrame.nextAnimationFrame()));
}

function _run(time, state) {
  return NoWorkerJobMainService$Wonderjs.execNoWorkerLoopJobs(_computeElapseTime(time, state));
}

function loopBody(time, state) {
  return NoWorkerJobMainService$Wonderjs.execNoWorkerLoopJobs(_computeElapseTime(time, state));
}

function _noWorkerLoop(_, state) {
  return requestAnimationFrame((function (time) {
                _noWorkerLoop(time, StateDataMainService$Wonderjs.setState(StateDataMain$Wonderjs.stateData, NoWorkerJobMainService$Wonderjs.execNoWorkerLoopJobs(_computeElapseTime(time, state))));
                return /* () */0;
              }));
}

function start(state) {
  var match = WorkerDetectMainService$Wonderjs.isUseWorker(state);
  if (match !== 0) {
    Most.drain(_workerInit(StateDataMain$Wonderjs.stateData, StateDataMainService$Wonderjs.setState(StateDataMain$Wonderjs.stateData, state)).concat(_createWorkerLoopStream(/* () */0)));
    return /* () */0;
  } else {
    _noWorkerLoop(0, NoWorkerJobMainService$Wonderjs.execNoWorkerInitJobs(state));
    return /* () */0;
  }
}

var init = _noWorkerInit;

export {
  _workerInit             ,
  _noWorkerInit           ,
  init                    ,
  _computeElapseTime      ,
  _createWorkerLoopStream ,
  _run                    ,
  loopBody                ,
  _noWorkerLoop           ,
  start                   ,
  
}
/* most Not a pure module */
