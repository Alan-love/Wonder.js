// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Log$WonderLog        from "../../../../../node_modules/wonder-log/lib/es6_global/src/Log.js";
import * as Contract$WonderLog   from "../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateData$Wonderjs   from "../StateData.js";
import * as NumberUtils$Wonderjs from "../../utils/NumberUtils.js";

function _getTimeControllerData(state) {
  return state[/* timeControllerData */28];
}

function getGameTime(state) {
  return state[/* timeControllerData */28][/* gameTime */4];
}

function getFps(state) {
  return state[/* timeControllerData */28][/* fps */5];
}

function _computeFps(deltaTime, lastTime) {
  if (lastTime) {
    return 1000 / deltaTime;
  } else {
    return 60;
  }
}

function tick(elapsed, state) {
  var data = state[/* timeControllerData */28];
  var lastTime = data[/* lastTime */3];
  var deltaTime = lastTime ? elapsed - lastTime[0] : elapsed;
  data[/* deltaTime */2] = deltaTime;
  data[/* fps */5] = _computeFps(deltaTime, lastTime);
  data[/* gameTime */4] = elapsed / 1000;
  data[/* lastTime */3] = /* Some */[elapsed];
  return state;
}

function _getNow() {
  return window.performance.now();
}

function start(state) {
  var data = state[/* timeControllerData */28];
  data[/* startTime */1] = window.performance.now();
  data[/* elapsed */0] = 0;
  return state;
}

function computeElapseTime(time, state) {
  var data = state[/* timeControllerData */28];
  var startTime = data[/* startTime */1];
  data[/* elapsed */0] = NumberUtils$Wonderjs.leastFloat(0, time - startTime);
  return Contract$WonderLog.ensureCheck((function (elapsed) {
                return Contract$WonderLog.test(Log$WonderLog.buildAssertMessage("elapsed >= 0", "is " + (String(elapsed) + "")), (function () {
                              return Contract$WonderLog.Operators[/* >=. */8](elapsed, 0);
                            }));
              }), StateData$Wonderjs.stateData[/* isDebug */1], data[/* elapsed */0]);
}

var starting_fps = 60;

var gametime_scale = 1000;

export {
  _getTimeControllerData ,
  starting_fps           ,
  gametime_scale         ,
  getGameTime            ,
  getFps                 ,
  _computeFps            ,
  tick                   ,
  _getNow                ,
  start                  ,
  computeElapseTime      ,
  
}
/* Log-WonderLog Not a pure module */
