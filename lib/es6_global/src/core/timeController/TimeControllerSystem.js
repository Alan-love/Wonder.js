// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Contract$Wonderjs    from "../../definition/Contract.js";
import * as NumberUtils$Wonderjs from "../../utils/NumberUtils.js";

function _getTimeControllerData(state) {
  return state[/* timeControllerData */23];
}

function getGameTime(state) {
  return state[/* timeControllerData */23][/* gameTime */4];
}

function getFps(state) {
  return state[/* timeControllerData */23][/* fps */5];
}

function _computeFps(deltaTime, lastTime) {
  if (lastTime) {
    return 1000 / deltaTime;
  } else {
    return 60;
  }
}

function tick(elapsed, state) {
  var data = state[/* timeControllerData */23];
  var lastTime = data[/* lastTime */3];
  var deltaTime = lastTime ? elapsed - lastTime[0] : elapsed;
  data[/* deltaTime */2] = deltaTime;
  data[/* fps */5] = _computeFps(deltaTime, lastTime);
  data[/* gameTime */4] = elapsed / 1000;
  data[/* lastTime */3] = /* Some */[elapsed];
  return state;
}

function _getNow() {
  return window.performance.now();
}

function start(state) {
  var data = state[/* timeControllerData */23];
  data[/* startTime */1] = window.performance.now();
  data[/* elapsed */0] = 0;
  return state;
}

function computeElapseTime(time, state) {
  var data = state[/* timeControllerData */23];
  var startTime = data[/* startTime */1];
  data[/* elapsed */0] = NumberUtils$Wonderjs.leastFloat(0, time - startTime);
  return Contract$Wonderjs.ensureCheck((function (r) {
                return Contract$Wonderjs.test("elapsed should >= 0, but actual is " + (String(r) + ""), (function () {
                              return Contract$Wonderjs.Operators[/* >=. */8](r, 0);
                            }));
              }), data[/* elapsed */0]);
}

var starting_fps = 60;

var gametime_scale = 1000;

export {
  _getTimeControllerData ,
  starting_fps           ,
  gametime_scale         ,
  getGameTime            ,
  getFps                 ,
  _computeFps            ,
  tick                   ,
  _getNow                ,
  start                  ,
  computeElapseTime      ,
  
}
/* NumberUtils-Wonderjs Not a pure module */
