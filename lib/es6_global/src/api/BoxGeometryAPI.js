// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Contract$WonderLog                    from "../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as MainStateData$Wonderjs                from "../service/state/main/data/MainStateData.js";
import * as IndicesService$Wonderjs               from "../service/primitiive/geometry/IndicesService.js";
import * as NormalsService$Wonderjs               from "../service/primitiive/geometry/NormalsService.js";
import * as VerticesService$Wonderjs              from "../service/primitiive/geometry/VerticesService.js";
import * as IsDebugMainService$Wonderjs           from "../service/state/main/state/IsDebugMainService.js";
import * as DeviceManagerService$Wonderjs         from "../service/record/device/DeviceManagerService.js";
import * as AliveComponentService$Wonderjs        from "../service/primitiive/component/AliveComponentService.js";
import * as RenderGeometryService$Wonderjs        from "../service/record/geometry/RenderGeometryService.js";
import * as CreateBoxGeometryService$Wonderjs     from "../service/record/geometry/CreateBoxGeometryService.js";
import * as ConfigDataGeometryService$Wonderjs    from "../service/record/geometry/ConfigDataGeometryService.js";
import * as GameObjectGeometryService$Wonderjs    from "../service/record/geometry/GameObjectGeometryService.js";
import * as DisposeGeometryMainService$Wonderjs   from "../service/state/main/geometry/DisposeGeometryMainService.js";
import * as IndicesGeometryMainService$Wonderjs   from "../service/state/main/geometry/IndicesGeometryMainService.js";
import * as NormalsGeometryMainService$Wonderjs   from "../service/state/main/geometry/NormalsGeometryMainService.js";
import * as VerticesGeometryMainService$Wonderjs  from "../service/state/main/geometry/VerticesGeometryMainService.js";
import * as ConfigDataBoxGeometryService$Wonderjs from "../service/record/geometry/ConfigDataBoxGeometryService.js";

function createBoxGeometry(state) {
  var match = CreateBoxGeometryService$Wonderjs.create(state[/* boxGeometryRecord */20]);
  var newrecord = state.slice();
  return /* tuple */[
          (newrecord[/* boxGeometryRecord */20] = match[0], newrecord),
          match[1]
        ];
}

function setBoxGeometryConfigData(geometry, configData, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(geometry, DisposeGeometryMainService$Wonderjs.isAlive, state[/* boxGeometryRecord */20]);
        }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData));
  var newrecord = state.slice();
  newrecord[/* boxGeometryRecord */20] = ConfigDataBoxGeometryService$Wonderjs.setConfigData(geometry, configData, state[/* boxGeometryRecord */20]);
  return newrecord;
}

function getBoxGeometryDrawMode(state) {
  return RenderGeometryService$Wonderjs.getDrawMode(DeviceManagerService$Wonderjs.unsafeGetGl(state[/* deviceManagerRecord */9]));
}

function unsafeGetBoxGeometryVertices(geometry, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(geometry, DisposeGeometryMainService$Wonderjs.isAlive, state[/* boxGeometryRecord */20]);
        }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData));
  return VerticesGeometryMainService$Wonderjs.unsafeGetVertices(geometry, state);
}

function setBoxGeometryVertices(geometry, record, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(geometry, DisposeGeometryMainService$Wonderjs.isAlive, state[/* boxGeometryRecord */20]);
        }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData));
  var newrecord = state.slice();
  var newrecord$1 = state[/* boxGeometryRecord */20].slice();
  newrecord$1[/* verticesMap */1] = VerticesService$Wonderjs.setVertices(geometry, record, state[/* boxGeometryRecord */20][/* verticesMap */1]);
  newrecord[/* boxGeometryRecord */20] = newrecord$1;
  return newrecord;
}

function unsafeGetBoxGeometryNormals(geometry, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(geometry, DisposeGeometryMainService$Wonderjs.isAlive, state[/* boxGeometryRecord */20]);
        }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData));
  return NormalsGeometryMainService$Wonderjs.unsafeGetNormals(geometry, state);
}

function setBoxGeometryNormals(geometry, record, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(geometry, DisposeGeometryMainService$Wonderjs.isAlive, state[/* boxGeometryRecord */20]);
        }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData));
  var newrecord = state.slice();
  var newrecord$1 = state[/* boxGeometryRecord */20].slice();
  newrecord$1[/* normalsMap */2] = NormalsService$Wonderjs.setNormals(geometry, record, state[/* boxGeometryRecord */20]);
  newrecord[/* boxGeometryRecord */20] = newrecord$1;
  return newrecord;
}

function unsafeGetBoxGeometryIndices(geometry, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(geometry, DisposeGeometryMainService$Wonderjs.isAlive, state[/* boxGeometryRecord */20]);
        }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData));
  return IndicesGeometryMainService$Wonderjs.unsafeGetIndices(geometry, state);
}

function setBoxGeometryIndices(geometry, record, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(geometry, DisposeGeometryMainService$Wonderjs.isAlive, state[/* boxGeometryRecord */20]);
        }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData));
  var newrecord = state.slice();
  var newrecord$1 = state[/* boxGeometryRecord */20].slice();
  newrecord$1[/* indicesMap */3] = IndicesService$Wonderjs.setIndices(geometry, record, state[/* boxGeometryRecord */20]);
  newrecord[/* boxGeometryRecord */20] = newrecord$1;
  return newrecord;
}

function unsafeGetBoxGeometryConfigData(geometry, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(geometry, DisposeGeometryMainService$Wonderjs.isAlive, state[/* boxGeometryRecord */20]);
        }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData));
  return ConfigDataGeometryService$Wonderjs.unsafeGetConfigData(geometry, state[/* boxGeometryRecord */20]);
}

function unsafeGetBoxGeometryGameObject(geometry, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(geometry, DisposeGeometryMainService$Wonderjs.isAlive, state[/* boxGeometryRecord */20]);
        }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData));
  return GameObjectGeometryService$Wonderjs.unsafeGetGameObject(geometry, state[/* boxGeometryRecord */20]);
}

export {
  createBoxGeometry              ,
  setBoxGeometryConfigData       ,
  getBoxGeometryDrawMode         ,
  unsafeGetBoxGeometryVertices   ,
  setBoxGeometryVertices         ,
  unsafeGetBoxGeometryNormals    ,
  setBoxGeometryNormals          ,
  unsafeGetBoxGeometryIndices    ,
  setBoxGeometryIndices          ,
  unsafeGetBoxGeometryConfigData ,
  unsafeGetBoxGeometryGameObject ,
  
}
/* Contract-WonderLog Not a pure module */
