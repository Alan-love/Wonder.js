// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Contract$WonderLog                     from "../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateDataMain$Wonderjs                 from "../../service/state/main/data/StateDataMain.js";
import * as IsDebugMainService$Wonderjs            from "../../service/state/main/state/IsDebugMainService.js";
import * as MappedIndexService$Wonderjs            from "../../service/primitive/MappedIndexService.js";
import * as AliveComponentService$Wonderjs         from "../../service/primitive/component/AliveComponentService.js";
import * as IndexAmbientLightService$Wonderjs      from "../../service/record/main/light/ambient/IndexAmbientLightService.js";
import * as CreateAmbientLightService$Wonderjs     from "../../service/record/main/light/ambient/CreateAmbientLightService.js";
import * as DisposeAmbientLightService$Wonderjs    from "../../service/record/main/light/ambient/DisposeAmbientLightService.js";
import * as OperateAmbientLightService$Wonderjs    from "../../service/record/main/light/ambient/OperateAmbientLightService.js";
import * as GameObjectAmbientLightService$Wonderjs from "../../service/record/main/light/ambient/GameObjectAmbientLightService.js";

function createAmbientLight(state) {
  var match = CreateAmbientLightService$Wonderjs.create(state[/* ambientLightRecord */17]);
  state[/* ambientLightRecord */17] = match[0];
  return /* tuple */[
          state,
          match[1]
        ];
}

function unsafeGetAmbientLightGameObject(light, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(light, DisposeAmbientLightService$Wonderjs.isAlive, state[/* ambientLightRecord */17]);
        }), IsDebugMainService$Wonderjs.getIsDebug(StateDataMain$Wonderjs.stateData));
  return GameObjectAmbientLightService$Wonderjs.unsafeGetGameObject(MappedIndexService$Wonderjs.getMappedIndex(light, IndexAmbientLightService$Wonderjs.getMappedIndexMap(state[/* ambientLightRecord */17])), state[/* ambientLightRecord */17]);
}

function getAmbientLightColor(light, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(light, DisposeAmbientLightService$Wonderjs.isAlive, state[/* ambientLightRecord */17]);
        }), IsDebugMainService$Wonderjs.getIsDebug(StateDataMain$Wonderjs.stateData));
  return OperateAmbientLightService$Wonderjs.getColor(MappedIndexService$Wonderjs.getMappedIndex(light, IndexAmbientLightService$Wonderjs.getMappedIndexMap(state[/* ambientLightRecord */17])), state[/* ambientLightRecord */17]);
}

function setAmbientLightColor(light, color, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(light, DisposeAmbientLightService$Wonderjs.isAlive, state[/* ambientLightRecord */17]);
        }), IsDebugMainService$Wonderjs.getIsDebug(StateDataMain$Wonderjs.stateData));
  var newrecord = state.slice();
  newrecord[/* ambientLightRecord */17] = OperateAmbientLightService$Wonderjs.setColor(MappedIndexService$Wonderjs.getMappedIndex(light, IndexAmbientLightService$Wonderjs.getMappedIndexMap(state[/* ambientLightRecord */17])), color, state[/* ambientLightRecord */17]);
  return newrecord;
}

export {
  createAmbientLight              ,
  unsafeGetAmbientLightGameObject ,
  getAmbientLightColor            ,
  setAmbientLightColor            ,
  
}
/* Contract-WonderLog Not a pure module */
