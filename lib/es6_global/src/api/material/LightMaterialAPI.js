// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Contract$WonderLog                       from "../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateDataMain$Wonderjs                   from "../../service/state/main/data/StateDataMain.js";
import * as IsDebugMainService$Wonderjs              from "../../service/state/main/state/IsDebugMainService.js";
import * as AliveComponentService$Wonderjs           from "../../service/primitive/component/AliveComponentService.js";
import * as DisposeLightMaterialService$Wonderjs     from "../../service/record/main/material/light/DisposeLightMaterialService.js";
import * as CreateLightMaterialMainService$Wonderjs  from "../../service/state/main/material/light/CreateLightMaterialMainService.js";
import * as GameObjectLightMaterialService$Wonderjs  from "../../service/record/main/material/light/GameObjectLightMaterialService.js";
import * as RecordLightMaterialMainService$Wonderjs  from "../../service/state/main/material/light/RecordLightMaterialMainService.js";
import * as OperateLightMaterialMainService$Wonderjs from "../../service/state/main/material/light/OperateLightMaterialMainService.js";

function createLightMaterial(state) {
  return CreateLightMaterialMainService$Wonderjs.create(state);
}

function unsafeGetLightMaterialGameObject(material, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(material, DisposeLightMaterialService$Wonderjs.isAlive, RecordLightMaterialMainService$Wonderjs.getRecord(state));
        }), IsDebugMainService$Wonderjs.getIsDebug(StateDataMain$Wonderjs.stateData));
  return GameObjectLightMaterialService$Wonderjs.unsafeGetGameObject(material, RecordLightMaterialMainService$Wonderjs.getRecord(state));
}

function getLightMaterialDiffuseColor(material, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(material, DisposeLightMaterialService$Wonderjs.isAlive, RecordLightMaterialMainService$Wonderjs.getRecord(state));
        }), IsDebugMainService$Wonderjs.getIsDebug(StateDataMain$Wonderjs.stateData));
  return OperateLightMaterialMainService$Wonderjs.getDiffuseColor(material, state);
}

function setLightMaterialDiffuseColor(material, color, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(material, DisposeLightMaterialService$Wonderjs.isAlive, RecordLightMaterialMainService$Wonderjs.getRecord(state));
        }), IsDebugMainService$Wonderjs.getIsDebug(StateDataMain$Wonderjs.stateData));
  return OperateLightMaterialMainService$Wonderjs.setDiffuseColor(material, color, state);
}

function getLightMaterialSpecularColor(material, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(material, DisposeLightMaterialService$Wonderjs.isAlive, RecordLightMaterialMainService$Wonderjs.getRecord(state));
        }), IsDebugMainService$Wonderjs.getIsDebug(StateDataMain$Wonderjs.stateData));
  return OperateLightMaterialMainService$Wonderjs.getSpecularColor(material, state);
}

function setLightMaterialSpecularColor(material, color, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(material, DisposeLightMaterialService$Wonderjs.isAlive, RecordLightMaterialMainService$Wonderjs.getRecord(state));
        }), IsDebugMainService$Wonderjs.getIsDebug(StateDataMain$Wonderjs.stateData));
  return OperateLightMaterialMainService$Wonderjs.setSpecularColor(material, color, state);
}

function getLightMaterialShininess(material, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(material, DisposeLightMaterialService$Wonderjs.isAlive, RecordLightMaterialMainService$Wonderjs.getRecord(state));
        }), IsDebugMainService$Wonderjs.getIsDebug(StateDataMain$Wonderjs.stateData));
  return OperateLightMaterialMainService$Wonderjs.getShininess(material, state);
}

function setLightMaterialShininess(material, shininess, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(material, DisposeLightMaterialService$Wonderjs.isAlive, RecordLightMaterialMainService$Wonderjs.getRecord(state));
        }), IsDebugMainService$Wonderjs.getIsDebug(StateDataMain$Wonderjs.stateData));
  return OperateLightMaterialMainService$Wonderjs.setShininess(material, shininess, state);
}

export {
  createLightMaterial              ,
  unsafeGetLightMaterialGameObject ,
  getLightMaterialDiffuseColor     ,
  setLightMaterialDiffuseColor     ,
  getLightMaterialSpecularColor    ,
  setLightMaterialSpecularColor    ,
  getLightMaterialShininess        ,
  setLightMaterialShininess        ,
  
}
/* Contract-WonderLog Not a pure module */
