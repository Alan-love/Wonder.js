// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Contract$WonderLog                        from "../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as MainStateData$Wonderjs                    from "../service/state/main/data/MainStateData.js";
import * as VMatrixService$Wonderjs                   from "../service/primitiive/VMatrixService.js";
import * as IsDebugMainService$Wonderjs               from "../service/state/main/state/IsDebugMainService.js";
import * as AliveComponentService$Wonderjs            from "../service/primitiive/component/AliveComponentService.js";
import * as ModelMatrixTransformService$Wonderjs      from "../service/record/transform/ModelMatrixTransformService.js";
import * as CreateBasicCameraViewService$Wonderjs     from "../service/record/basic_camera_view/CreateBasicCameraViewService.js";
import * as DisposeBasicCameraViewService$Wonderjs    from "../service/record/basic_camera_view/DisposeBasicCameraViewService.js";
import * as GetComponentGameObjectService$Wonderjs    from "../service/record/gameObject/GetComponentGameObjectService.js";
import * as GameObjectBasicCameraViewService$Wonderjs from "../service/record/basic_camera_view/GameObjectBasicCameraViewService.js";

function createBasicCameraView(state) {
  var match = CreateBasicCameraViewService$Wonderjs.create(state[/* basicCameraViewRecord */13]);
  var newrecord = state.slice();
  return /* tuple */[
          (newrecord[/* basicCameraViewRecord */13] = match[0], newrecord),
          match[1]
        ];
}

function unsafeGetGameObjectBasicCameraView(cameraView, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(cameraView, DisposeBasicCameraViewService$Wonderjs.isAlive, state[/* basicCameraViewRecord */13]);
        }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData));
  return GameObjectBasicCameraViewService$Wonderjs.unsafeGetGameObject(cameraView, state[/* basicCameraViewRecord */13]);
}

function getBasicCameraViewWorldToCameraMatrix(cameraView, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(cameraView, DisposeBasicCameraViewService$Wonderjs.isAlive, state[/* basicCameraViewRecord */13]);
        }), IsDebugMainService$Wonderjs.getIsDebug(MainStateData$Wonderjs.stateData));
  return VMatrixService$Wonderjs.getWorldToCameraMatrix(ModelMatrixTransformService$Wonderjs.getLocalToWorldMatrixTypeArray(GetComponentGameObjectService$Wonderjs.unsafeGetTransformComponent(GameObjectBasicCameraViewService$Wonderjs.unsafeGetGameObject(cameraView, state[/* basicCameraViewRecord */13]), state[/* gameObjectRecord */10]), state[/* transformRecord */11]));
}

export {
  createBasicCameraView                 ,
  unsafeGetGameObjectBasicCameraView    ,
  getBasicCameraViewWorldToCameraMatrix ,
  
}
/* Contract-WonderLog Not a pure module */
