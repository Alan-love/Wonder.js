// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE

import * as Contract$WonderLog from "../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateDataMain$Wonderjs from "../service/state/main/data/StateDataMain.js";
import * as VMatrixService$Wonderjs from "../service/primitive/VMatrixService.js";
import * as IsDebugMainService$Wonderjs from "../service/state/main/state/IsDebugMainService.js";
import * as AliveComponentService$Wonderjs from "../service/primitive/component/AliveComponentService.js";
import * as RecordTransformMainService$Wonderjs from "../service/state/main/transform/RecordTransformMainService.js";
import * as ModelMatrixTransformService$Wonderjs from "../service/record/main/transform/ModelMatrixTransformService.js";
import * as CreateBasicCameraViewService$Wonderjs from "../service/record/main/basic_camera_view/CreateBasicCameraViewService.js";
import * as DisposeBasicCameraViewService$Wonderjs from "../service/record/main/basic_camera_view/DisposeBasicCameraViewService.js";
import * as GetComponentGameObjectService$Wonderjs from "../service/record/main/gameObject/GetComponentGameObjectService.js";
import * as GameObjectBasicCameraViewService$Wonderjs from "../service/record/main/basic_camera_view/GameObjectBasicCameraViewService.js";

function createBasicCameraView(state) {
  var match = CreateBasicCameraViewService$Wonderjs.create(state[/* basicCameraViewRecord */13]);
  state[/* basicCameraViewRecord */13] = match[0];
  return /* tuple */[
          state,
          match[1]
        ];
}

function unsafeGetGameObjectBasicCameraView(cameraView, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(cameraView, DisposeBasicCameraViewService$Wonderjs.isAlive, state[/* basicCameraViewRecord */13]);
        }), IsDebugMainService$Wonderjs.getIsDebug(StateDataMain$Wonderjs.stateData));
  return GameObjectBasicCameraViewService$Wonderjs.unsafeGetGameObject(cameraView, state[/* basicCameraViewRecord */13]);
}

function getBasicCameraViewWorldToCameraMatrix(cameraView, state) {
  Contract$WonderLog.requireCheck((function () {
          return AliveComponentService$Wonderjs.checkComponentShouldAlive(cameraView, DisposeBasicCameraViewService$Wonderjs.isAlive, state[/* basicCameraViewRecord */13]);
        }), IsDebugMainService$Wonderjs.getIsDebug(StateDataMain$Wonderjs.stateData));
  var match = RecordTransformMainService$Wonderjs.getRecord(state);
  var localToWorldMatrices = match[/* localToWorldMatrices */2];
  var localToWorldMatrixCacheMap = match[/* localToWorldMatrixCacheMap */19];
  return VMatrixService$Wonderjs.getWorldToCameraMatrix(ModelMatrixTransformService$Wonderjs.getLocalToWorldMatrixTypeArray(GetComponentGameObjectService$Wonderjs.unsafeGetTransformComponent(GameObjectBasicCameraViewService$Wonderjs.unsafeGetGameObject(cameraView, state[/* basicCameraViewRecord */13]), state[/* gameObjectRecord */10]), localToWorldMatrices, localToWorldMatrixCacheMap));
}

export {
  createBasicCameraView ,
  unsafeGetGameObjectBasicCameraView ,
  getBasicCameraViewWorldToCameraMatrix ,
  
}
/* Contract-WonderLog Not a pure module */
