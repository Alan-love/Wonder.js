// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Js_option                    from "../../../../../../../node_modules/bs-platform/lib/es6/js_option.js";
import * as Contract$Wonderjs            from "../../../../definition/Contract.js";
import * as GeometrySystem$Wonderjs      from "../../system/geometry/GeometrySystem.js";
import * as ComponentSystem$Wonderjs     from "../../system/component/ComponentSystem.js";
import * as DeviceManagerSystem$Wonderjs from "../../../../renderer/device/DeviceManagerSystem.js";

function getGeometryDrawMode(state) {
  return GeometrySystem$Wonderjs.getDrawMode(DeviceManagerSystem$Wonderjs.getGl(state));
}

function getGeometryVertices(geometry, state) {
  Contract$Wonderjs.requireCheck((function () {
          return ComponentSystem$Wonderjs.checkComponentShouldAlive(geometry, GeometrySystem$Wonderjs.isAlive, state);
        }));
  return GeometrySystem$Wonderjs.unsafeGetVertices(geometry, state);
}

function setGeometryVertices(geometry, data, state) {
  Contract$Wonderjs.requireCheck((function () {
          return ComponentSystem$Wonderjs.checkComponentShouldAlive(geometry, GeometrySystem$Wonderjs.isAlive, state);
        }));
  return GeometrySystem$Wonderjs.setVertices(geometry, data, state);
}

function getGeometryIndices(geometry, state) {
  Contract$Wonderjs.requireCheck((function () {
          return ComponentSystem$Wonderjs.checkComponentShouldAlive(geometry, GeometrySystem$Wonderjs.isAlive, state);
        }));
  return GeometrySystem$Wonderjs.unsafeGetIndices(geometry, state);
}

function setGeometryIndices(geometry, data, state) {
  Contract$Wonderjs.requireCheck((function () {
          return ComponentSystem$Wonderjs.checkComponentShouldAlive(geometry, GeometrySystem$Wonderjs.isAlive, state);
        }));
  return GeometrySystem$Wonderjs.setIndices(geometry, data, state);
}

function getGeometryConfigData(geometry, state) {
  Contract$Wonderjs.requireCheck((function () {
          return ComponentSystem$Wonderjs.checkComponentShouldAlive(geometry, GeometrySystem$Wonderjs.isAlive, state);
        }));
  return Js_option.getExn(GeometrySystem$Wonderjs.getConfigData(geometry, state));
}

function getGeometryGameObject(geometry, state) {
  Contract$Wonderjs.requireCheck((function () {
          return ComponentSystem$Wonderjs.checkComponentShouldAlive(geometry, GeometrySystem$Wonderjs.isAlive, state);
        }));
  return Js_option.getExn(GeometrySystem$Wonderjs.getGameObject(geometry, state));
}

export {
  getGeometryDrawMode   ,
  getGeometryVertices   ,
  setGeometryVertices   ,
  getGeometryIndices    ,
  setGeometryIndices    ,
  getGeometryConfigData ,
  getGeometryGameObject ,
  
}
/* GeometrySystem-Wonderjs Not a pure module */
