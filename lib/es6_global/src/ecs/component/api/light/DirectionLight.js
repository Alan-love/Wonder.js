// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Js_option                     from "../../../../../../../node_modules/bs-platform/lib/es6/js_option.js";
import * as Contract$WonderLog            from "../../../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateData$Wonderjs            from "../../../../core/StateData.js";
import * as ComponentSystem$Wonderjs      from "../../system/component/ComponentSystem.js";
import * as DirectionLightSystem$Wonderjs from "../../system/light/direction/DirectionLightSystem.js";

function getDirectionLightGameObject(light, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentSystem$Wonderjs.checkComponentShouldAlive(light, DirectionLightSystem$Wonderjs.isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  return Js_option.getExn(DirectionLightSystem$Wonderjs.getGameObject(DirectionLightSystem$Wonderjs.getMappedIndex(light, DirectionLightSystem$Wonderjs.getMappedIndexMap(state)), state));
}

function getDirectionLightColor(light, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentSystem$Wonderjs.checkComponentShouldAlive(light, DirectionLightSystem$Wonderjs.isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  return DirectionLightSystem$Wonderjs.getColor(DirectionLightSystem$Wonderjs.getMappedIndex(light, DirectionLightSystem$Wonderjs.getMappedIndexMap(state)), state);
}

function setDirectionLightColor(light, color, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentSystem$Wonderjs.checkComponentShouldAlive(light, DirectionLightSystem$Wonderjs.isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  return DirectionLightSystem$Wonderjs.setColor(DirectionLightSystem$Wonderjs.getMappedIndex(light, DirectionLightSystem$Wonderjs.getMappedIndexMap(state)), color, state);
}

function getDirectionLightIntensity(light, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentSystem$Wonderjs.checkComponentShouldAlive(light, DirectionLightSystem$Wonderjs.isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  return DirectionLightSystem$Wonderjs.getIntensity(DirectionLightSystem$Wonderjs.getMappedIndex(light, DirectionLightSystem$Wonderjs.getMappedIndexMap(state)), state);
}

function setDirectionLightIntensity(light, color, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentSystem$Wonderjs.checkComponentShouldAlive(light, DirectionLightSystem$Wonderjs.isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  return DirectionLightSystem$Wonderjs.setIntensity(DirectionLightSystem$Wonderjs.getMappedIndex(light, DirectionLightSystem$Wonderjs.getMappedIndexMap(state)), color, state);
}

var createDirectionLight = DirectionLightSystem$Wonderjs.create;

export {
  createDirectionLight        ,
  getDirectionLightGameObject ,
  getDirectionLightColor      ,
  setDirectionLightColor      ,
  getDirectionLightIntensity  ,
  setDirectionLightIntensity  ,
  
}
/* Contract-WonderLog Not a pure module */
