// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                           from "../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Js_primitive                    from "../../../../../../../node_modules/bs-platform/lib/es6/js_primitive.js";
import * as Contract$Wonderjs               from "../../../../definition/Contract.js";
import * as SparseMapSystem$WonderCommonlib from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";

function addComponentToGameObjectMap(component, gameObjectUid, gameObjectMap) {
  SparseMapSystem$WonderCommonlib.set(component, gameObjectUid, gameObjectMap);
  return /* () */0;
}

var getComponentGameObject = SparseMapSystem$WonderCommonlib.get;

function unsafeGetComponentGameObject(component, gameObjectMap) {
  return Contract$Wonderjs.ensureCheck((function () {
                return Contract$Wonderjs.test("component's gameObject should exist", (function () {
                              return Contract$Wonderjs.assertExist(SparseMapSystem$WonderCommonlib.get(component, gameObjectMap));
                            }));
              }), SparseMapSystem$WonderCommonlib.unsafeGet(component, gameObjectMap));
}

function checkComponentShouldAlive(component, isAliveFunc, state) {
  return Contract$Wonderjs.test("component should alive", (function () {
                return Contract$Wonderjs.assertTrue(Curry._2(isAliveFunc, component, state));
              }));
}

function _getDisposedIndex(disposedIndexArray) {
  return Js_primitive.undefined_to_opt(disposedIndexArray.pop());
}

function generateIndex(index, disposedIndexArray) {
  var match = disposedIndexArray.pop();
  if (match !== undefined) {
    return /* tuple */[
            match,
            index
          ];
  } else {
    return /* tuple */[
            index,
            index + 1 | 0
          ];
  }
}

export {
  addComponentToGameObjectMap  ,
  getComponentGameObject       ,
  unsafeGetComponentGameObject ,
  checkComponentShouldAlive    ,
  _getDisposedIndex            ,
  generateIndex                ,
  
}
/* No side effect */
