// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                                            from "../../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Contract$WonderLog                               from "../../../../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateData$Wonderjs                               from "../../../../../core/StateData.js";
import * as ArraySystem$Wonderjs                             from "../../../../../structure/ArraySystem.js";
import * as VboBufferSystem$Wonderjs                         from "../../../../../renderer/buffer/VboBufferSystem.js";
import * as MemoryConfigSystem$Wonderjs                      from "../../../../../config/MemoryConfigSystem.js";
import * as TypeArrayPoolSystem$Wonderjs                     from "../../../../../structure/pool/TypeArrayPoolSystem.js";
import * as SparseMapSystem$WonderCommonlib                  from "../../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";
import * as VboBufferDisposeSystem$Wonderjs                  from "../../../../../renderer/buffer/VboBufferDisposeSystem.js";
import * as SourceInstanceStateCommon$Wonderjs               from "./SourceInstanceStateCommon.js";
import * as ComponentDisposeComponentCommon$Wonderjs         from "../../component/ComponentDisposeComponentCommon.js";
import * as SourceInstanceObjectInstanceArrayCommon$Wonderjs from "./SourceInstanceObjectInstanceArrayCommon.js";

function isAlive(sourceInstance, state) {
  return ComponentDisposeComponentCommon$Wonderjs.isAlive(sourceInstance, SourceInstanceStateCommon$Wonderjs.getSourceInstanceData(state)[/* disposedIndexArray */6]);
}

function _disposeObjectInstanceGameObject(sourceInstance, batchDisposeGameObjectFunc, state) {
  var objectInstanceGameObjectArr = SourceInstanceObjectInstanceArrayCommon$Wonderjs.unsafeGetObjectInstanceArray(sourceInstance, SourceInstanceStateCommon$Wonderjs.getSourceInstanceData(state)[/* objectInstanceArrayMap */1]).slice();
  return Curry._2(batchDisposeGameObjectFunc, objectInstanceGameObjectArr, state);
}

function _disposeData(sourceInstance, batchDisposeGameObjectFunc, state) {
  var state$1 = _disposeObjectInstanceGameObject(sourceInstance, batchDisposeGameObjectFunc, VboBufferDisposeSystem$Wonderjs.disposeInstanceBufferData(sourceInstance, state));
  var data = SourceInstanceStateCommon$Wonderjs.getSourceInstanceData(state$1);
  var matrixFloat32ArrayMap = data[/* matrixFloat32ArrayMap */3];
  var match = SparseMapSystem$WonderCommonlib.get(sourceInstance, matrixFloat32ArrayMap);
  if (match) {
    TypeArrayPoolSystem$Wonderjs.addFloat32TypeArrayToPool(match[0], MemoryConfigSystem$Wonderjs.getMaxBigTypeArrayPoolSize(state$1), TypeArrayPoolSystem$Wonderjs.getFloat32ArrayPoolMap(state$1));
  }
  var newrecord = state$1.slice();
  newrecord[/* sourceInstanceData */7] = /* record */[
    /* index */data[/* index */0],
    /* objectInstanceArrayMap */ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(sourceInstance, data[/* objectInstanceArrayMap */1]),
    /* matrixInstanceBufferCapacityMap */ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(sourceInstance, data[/* matrixInstanceBufferCapacityMap */2]),
    /* matrixFloat32ArrayMap */ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(sourceInstance, matrixFloat32ArrayMap),
    /* isTransformStaticMap */ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(sourceInstance, data[/* isTransformStaticMap */4]),
    /* isSendTransformMatrixDataMap */ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(sourceInstance, data[/* isSendTransformMatrixDataMap */5]),
    /* disposedIndexArray */data[/* disposedIndexArray */6],
    /* gameObjectMap */ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(sourceInstance, data[/* gameObjectMap */7])
  ];
  return newrecord;
}

function handleDisposeComponent(sourceInstance, batchDisposeGameObjectFunc, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAlive(sourceInstance, isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  var data = SourceInstanceStateCommon$Wonderjs.getSourceInstanceData(state);
  var state$1 = _disposeData(sourceInstance, batchDisposeGameObjectFunc, VboBufferSystem$Wonderjs.addInstanceBufferToPool(sourceInstance, state));
  var newrecord = state$1.slice();
  var newrecord$1 = data.slice();
  newrecord$1[/* disposedIndexArray */6] = ArraySystem$Wonderjs.push(sourceInstance, data[/* disposedIndexArray */6]);
  newrecord[/* sourceInstanceData */7] = newrecord$1;
  return newrecord;
}

function handleBatchDisposeComponent(sourceInstanceArray, _, batchDisposeGameObjectFunc, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAliveWithBatchDispose(sourceInstanceArray, isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  var data = SourceInstanceStateCommon$Wonderjs.getSourceInstanceData(state);
  var newrecord = state.slice();
  var newrecord$1 = data.slice();
  newrecord$1[/* disposedIndexArray */6] = data[/* disposedIndexArray */6].concat(sourceInstanceArray);
  newrecord[/* sourceInstanceData */7] = newrecord$1;
  return ArraySystem$Wonderjs.reduceState((function (state, sourceInstance) {
                return _disposeData(sourceInstance, batchDisposeGameObjectFunc, VboBufferSystem$Wonderjs.addInstanceBufferToPool(sourceInstance, state));
              }), newrecord, sourceInstanceArray);
}

export {
  isAlive                          ,
  _disposeObjectInstanceGameObject ,
  _disposeData                     ,
  handleDisposeComponent           ,
  handleBatchDisposeComponent      ,
  
}
/* Contract-WonderLog Not a pure module */
