// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                                            from "../../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Contract$Wonderjs                                from "../../../../../definition/Contract.js";
import * as ArraySystem$Wonderjs                             from "../../../../../structure/ArraySystem.js";
import * as VboBufferSystem$Wonderjs                         from "../../../../../renderer/buffer/VboBufferSystem.js";
import * as ArraySystem$WonderCommonlib                      from "../../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArraySystem.js";
import * as MemoryConfigSystem$Wonderjs                      from "../../../../../config/MemoryConfigSystem.js";
import * as TypeArrayPoolSystem$Wonderjs                     from "../../../../../structure/pool/TypeArrayPoolSystem.js";
import * as SparseMapSystem$WonderCommonlib                  from "../../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";
import * as VboBufferDisposeSystem$Wonderjs                  from "../../../../../renderer/buffer/VboBufferDisposeSystem.js";
import * as SourceInstanceStateCommon$Wonderjs               from "./SourceInstanceStateCommon.js";
import * as ComponentDisposeComponentCommon$Wonderjs         from "../../component/ComponentDisposeComponentCommon.js";
import * as SourceInstanceObjectInstanceArrayCommon$Wonderjs from "./SourceInstanceObjectInstanceArrayCommon.js";

function isAlive(sourceInstance, state) {
  return ComponentDisposeComponentCommon$Wonderjs.isAlive(sourceInstance, SourceInstanceStateCommon$Wonderjs.getSourceInstanceData(state)[/* disposedIndexArray */6]);
}

function _disposeObjectInstanceGameObject(sourceInstance, batchDisposeGameObjectFunc, state) {
  var objectInstanceGameObjectArr = SourceInstanceObjectInstanceArrayCommon$Wonderjs.unsafeGetObjectInstanceArray(sourceInstance, SourceInstanceStateCommon$Wonderjs.getSourceInstanceData(state)[/* objectInstanceArrayMap */1]).slice();
  return Curry._2(batchDisposeGameObjectFunc, objectInstanceGameObjectArr, state);
}

function _disposeData(sourceInstance, batchDisposeGameObjectFunc, state) {
  var state$1 = _disposeObjectInstanceGameObject(sourceInstance, batchDisposeGameObjectFunc, VboBufferDisposeSystem$Wonderjs.disposeInstanceBufferData(sourceInstance, state));
  var match = SourceInstanceStateCommon$Wonderjs.getSourceInstanceData(state$1);
  var objectInstanceArrayMap = match[/* objectInstanceArrayMap */1];
  var modelMatrixFloat32ArrayMap = match[/* modelMatrixFloat32ArrayMap */3];
  var match$1 = SparseMapSystem$WonderCommonlib.get(sourceInstance, modelMatrixFloat32ArrayMap);
  if (match$1) {
    TypeArrayPoolSystem$Wonderjs.addFloat32TypeArrayToPool(match$1[0], MemoryConfigSystem$Wonderjs.getMaxBigTypeArrayPoolSize(state$1), TypeArrayPoolSystem$Wonderjs.getFloat32ArrayPoolMap(state$1));
  }
  ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(sourceInstance, objectInstanceArrayMap);
  ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(sourceInstance, modelMatrixFloat32ArrayMap);
  ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(sourceInstance, match[/* modelMatrixInstanceBufferCapacityMap */2]);
  ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(sourceInstance, match[/* isModelMatrixStaticMap */4]);
  ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(sourceInstance, match[/* isSendModelMatrixDataMap */5]);
  ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(sourceInstance, match[/* gameObjectMap */7]);
  return state$1;
}

function handleDisposeComponent(sourceInstance, batchDisposeGameObjectFunc, state) {
  Contract$Wonderjs.requireCheck((function () {
          return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAlive(sourceInstance, isAlive, state);
        }));
  var data = SourceInstanceStateCommon$Wonderjs.getSourceInstanceData(state);
  var disposedIndexArray = data[/* disposedIndexArray */6];
  disposedIndexArray.push(sourceInstance);
  return _disposeData(sourceInstance, batchDisposeGameObjectFunc, VboBufferSystem$Wonderjs.addInstanceBufferToPool(sourceInstance, state));
}

function handleBatchDisposeComponent(sourceInstanceArray, _, batchDisposeGameObjectFunc, state) {
  Contract$Wonderjs.requireCheck((function () {
          return ArraySystem$WonderCommonlib.forEach((function (sourceInstance) {
                        return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAlive(sourceInstance, isAlive, state);
                      }), sourceInstanceArray);
        }));
  var data = SourceInstanceStateCommon$Wonderjs.getSourceInstanceData(state);
  var disposedIndexArray = data[/* disposedIndexArray */6];
  data[/* disposedIndexArray */6] = disposedIndexArray.concat(sourceInstanceArray);
  return ArraySystem$Wonderjs.reduceState((function (state, sourceInstance) {
                return _disposeData(sourceInstance, batchDisposeGameObjectFunc, VboBufferSystem$Wonderjs.addInstanceBufferToPool(sourceInstance, state));
              }), state, sourceInstanceArray);
}

export {
  isAlive                          ,
  _disposeObjectInstanceGameObject ,
  _disposeData                     ,
  handleDisposeComponent           ,
  handleBatchDisposeComponent      ,
  
}
/* ArraySystem-Wonderjs Not a pure module */
