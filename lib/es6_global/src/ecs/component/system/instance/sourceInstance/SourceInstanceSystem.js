// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as ArraySystem$Wonderjs                             from "../../../../../structure/ArraySystem.js";
import * as ComponentSystem$Wonderjs                         from "../../component/ComponentSystem.js";
import * as TransformSystem$Wonderjs                         from "../../transform/TransformSystem.js";
import * as ObjectInstanceSystem$Wonderjs                    from "../objectInstance/ObjectInstanceSystem.js";
import * as GameObjectCreateCommon$Wonderjs                  from "../../../../admin/GameObjectCreateCommon.js";
import * as SourceInstanceStateCommon$Wonderjs               from "./SourceInstanceStateCommon.js";
import * as SourceInstanceCreateCommon$Wonderjs              from "./SourceInstanceCreateCommon.js";
import * as SourceInstanceStaticCommon$Wonderjs              from "./SourceInstanceStaticCommon.js";
import * as GameObjectAddComponentCommon$Wonderjs            from "../../../../admin/GameObjectAddComponentCommon.js";
import * as SourceInstanceDisposeComponentCommon$Wonderjs    from "./SourceInstanceDisposeComponentCommon.js";
import * as SourceInstanceObjectInstanceArrayCommon$Wonderjs from "./SourceInstanceObjectInstanceArrayCommon.js";

var isAlive = SourceInstanceDisposeComponentCommon$Wonderjs.isAlive;

var create = SourceInstanceCreateCommon$Wonderjs.create;

var getObjectInstanceArray = SourceInstanceObjectInstanceArrayCommon$Wonderjs.getObjectInstanceArray;

function _addObjectInstnace(sourceInstance, uid, objectInstanceArrayMap) {
  ArraySystem$Wonderjs.push(uid, SourceInstanceObjectInstanceArrayCommon$Wonderjs.unsafeGetObjectInstanceArray(sourceInstance, objectInstanceArrayMap));
  return objectInstanceArrayMap;
}

function createInstance(sourceInstance, state) {
  var match = GameObjectCreateCommon$Wonderjs.create(state);
  var uid = match[1];
  var state$1 = match[0];
  var data = SourceInstanceStateCommon$Wonderjs.getSourceInstanceData(state$1);
  var newrecord = state$1.slice();
  var newrecord$1 = data.slice();
  newrecord$1[/* objectInstanceArrayMap */1] = _addObjectInstnace(sourceInstance, uid, data[/* objectInstanceArrayMap */1]);
  newrecord[/* sourceInstanceData */7] = newrecord$1;
  var match$1 = TransformSystem$Wonderjs.create(newrecord);
  var match$2 = ObjectInstanceSystem$Wonderjs.create(sourceInstance, uid, match$1[0]);
  var state$2 = GameObjectAddComponentCommon$Wonderjs.addObjectInstanceComponent(uid, match$2[1], GameObjectAddComponentCommon$Wonderjs.addTransformComponent(uid, match$1[1], match$2[0]));
  return /* tuple */[
          state$2,
          uid
        ];
}

function getGameObject(sourceInstance, state) {
  return ComponentSystem$Wonderjs.getComponentGameObject(sourceInstance, SourceInstanceStateCommon$Wonderjs.getSourceInstanceData(state)[/* gameObjectMap */7]);
}

var getSourceInstanceData = SourceInstanceStateCommon$Wonderjs.getSourceInstanceData;

var isSendTransformMatrixData = SourceInstanceStaticCommon$Wonderjs.isSendTransformMatrixData;

var markIsSendTransformMatrixData = SourceInstanceStaticCommon$Wonderjs.markIsSendTransformMatrixData;

var markModelMatrixIsStatic = SourceInstanceStaticCommon$Wonderjs.markModelMatrixIsStatic;

var isTransformStatic = SourceInstanceStaticCommon$Wonderjs.isTransformStatic;

var deepCopyStateForRestore = SourceInstanceStateCommon$Wonderjs.deepCopyStateForRestore;

var restore = SourceInstanceStateCommon$Wonderjs.restore;

export {
  isAlive                       ,
  create                        ,
  getSourceInstanceData         ,
  isSendTransformMatrixData     ,
  markIsSendTransformMatrixData ,
  getObjectInstanceArray        ,
  _addObjectInstnace            ,
  createInstance                ,
  getGameObject                 ,
  markModelMatrixIsStatic       ,
  isTransformStatic             ,
  deepCopyStateForRestore       ,
  restore                       ,
  
}
/* ArraySystem-Wonderjs Not a pure module */
