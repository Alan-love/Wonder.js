// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as CopyStateUtils$Wonderjs         from "../../../utils/CopyStateUtils.js";
import * as SparseMapSystem$Wonderjs        from "../../../../../structure/SparseMapSystem.js";
import * as MemoryConfigSystem$Wonderjs     from "../../../../../config/MemoryConfigSystem.js";
import * as TypeArrayPoolSystem$Wonderjs    from "../../../../../structure/pool/TypeArrayPoolSystem.js";
import * as SparseMapSystem$WonderCommonlib from "../../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";

function getSourceInstanceData(state) {
  return state[/* sourceInstanceData */7];
}

function deepCopyStateForRestore(state) {
  var match = state[/* sourceInstanceData */7];
  var index = match[/* index */0];
  var objectInstanceArrayMap = match[/* objectInstanceArrayMap */1];
  var disposedIndexArray = match[/* disposedIndexArray */6];
  var newrecord = state.slice();
  newrecord[/* sourceInstanceData */7] = /* record */[
    /* index */index,
    /* objectInstanceArrayMap */CopyStateUtils$Wonderjs.deepCopyArrayArray(objectInstanceArrayMap),
    /* modelMatrixInstanceBufferCapacityMap */SparseMapSystem$Wonderjs.copy(match[/* modelMatrixInstanceBufferCapacityMap */2]),
    /* modelMatrixFloat32ArrayMap */CopyStateUtils$Wonderjs.deepCopyFloat32ArrayArray(match[/* modelMatrixFloat32ArrayMap */3]),
    /* isModelMatrixStaticMap */SparseMapSystem$Wonderjs.copy(match[/* isModelMatrixStaticMap */4]),
    /* isSendModelMatrixDataMap */match[/* isSendModelMatrixDataMap */5],
    /* disposedIndexArray */disposedIndexArray.slice(),
    /* gameObjectMap */SparseMapSystem$Wonderjs.copy(match[/* gameObjectMap */7])
  ];
  return newrecord;
}

function _buildIsNotSendModelMatrixDataMap(isSendModelMatrixDataMap) {
  return SparseMapSystem$Wonderjs.reduceiValid((function (newMap, _, index) {
                return SparseMapSystem$WonderCommonlib.set(index, /* false */0, newMap);
              }), SparseMapSystem$WonderCommonlib.createEmpty(/* () */0), isSendModelMatrixDataMap);
}

function restore(currentState, sharedData, targetState) {
  var match = currentState[/* sourceInstanceData */7];
  var targetData = targetState[/* sourceInstanceData */7];
  var float32ArrayPoolMap = TypeArrayPoolSystem$Wonderjs.addAllFloat32TypeArrayToPool(match[/* modelMatrixFloat32ArrayMap */3], MemoryConfigSystem$Wonderjs.getMaxBigTypeArrayPoolSize(targetState), sharedData[/* float32ArrayPoolMap */1]);
  var newrecord = targetState.slice();
  var newrecord$1 = targetData.slice();
  newrecord$1[/* isSendModelMatrixDataMap */5] = _buildIsNotSendModelMatrixDataMap(targetData[/* isSendModelMatrixDataMap */5]);
  newrecord[/* sourceInstanceData */7] = newrecord$1;
  return /* tuple */[
          newrecord,
          /* record */[
            /* gl */sharedData[/* gl */0],
            /* float32ArrayPoolMap */float32ArrayPoolMap,
            /* uint16ArrayPoolMap */sharedData[/* uint16ArrayPoolMap */2]
          ]
        ];
}

export {
  getSourceInstanceData             ,
  deepCopyStateForRestore           ,
  _buildIsNotSendModelMatrixDataMap ,
  restore                           ,
  
}
/* CopyStateUtils-Wonderjs Not a pure module */
