// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Contract$WonderLog                       from "../../../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateData$Wonderjs                       from "../../../../core/StateData.js";
import * as ArraySystem$Wonderjs                     from "../../../../structure/ArraySystem.js";
import * as SparseMapSystem$WonderCommonlib          from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";
import * as ComponentDisposeComponentCommon$Wonderjs from "../component/ComponentDisposeComponentCommon.js";

var isAlive = ComponentDisposeComponentCommon$Wonderjs.isAlive;

var addDisposeIndex = ArraySystem$Wonderjs.push;

function disposeData(material, param) {
  return /* tuple */[
          ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(material, param[0]),
          SparseMapSystem$WonderCommonlib.set(material, 0, param[1]),
          ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(material, param[2])
        ];
}

function handleBatchDisposeComponent(materialArray, disposedIndexArray, param, state) {
  var handleDisposeFunc = param[1];
  var isAliveFunc = param[0];
  Contract$WonderLog.requireCheck((function () {
          return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAliveWithBatchDispose(materialArray, isAliveFunc, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  return ArraySystem$Wonderjs.reduceState((function (state, material) {
                return handleDisposeFunc(disposedIndexArray, material, state);
              }), state, materialArray);
}

function isNotDisposed(disposedIndexArray) {
  return +(disposedIndexArray.length === 0);
}

export {
  isAlive                     ,
  addDisposeIndex             ,
  disposeData                 ,
  handleBatchDisposeComponent ,
  isNotDisposed               ,
  
}
/* Contract-WonderLog Not a pure module */
