// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as MaterialStateCommon$Wonderjs            from "./MaterialStateCommon.js";
import * as MaterialOperateCommon$Wonderjs          from "./MaterialOperateCommon.js";
import * as SparseMapSystem$WonderCommonlib         from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";
import * as MaterialGameObjectCommon$Wonderjs       from "./MaterialGameObjectCommon.js";
import * as MaterialShaderIndexCommon$Wonderjs      from "./MaterialShaderIndexCommon.js";
import * as MaterialInitComponentCommon$Wonderjs    from "./MaterialInitComponentCommon.js";
import * as MaterialDisposeComponentCommon$Wonderjs from "./MaterialDisposeComponentCommon.js";

var getGameObject = MaterialGameObjectCommon$Wonderjs.getGameObject;

var isAlive = MaterialDisposeComponentCommon$Wonderjs.isAlive;

function getColor(material, state) {
  return SparseMapSystem$WonderCommonlib.get(material, MaterialStateCommon$Wonderjs.getMaterialData(state)[/* colorMap */2]);
}

var unsafeGetColor = MaterialOperateCommon$Wonderjs.unsafeGetColor;

function setColor(material, color, state) {
  SparseMapSystem$WonderCommonlib.set(material, color, MaterialStateCommon$Wonderjs.getMaterialData(state)[/* colorMap */2]);
  return state;
}

var handleInitComponent = MaterialInitComponentCommon$Wonderjs.handleInitComponent;

var getMaterialData = MaterialStateCommon$Wonderjs.getMaterialData;

var unsafeGetShaderIndex = MaterialShaderIndexCommon$Wonderjs.unsafeGetShaderIndex;

var setShaderIndex = MaterialShaderIndexCommon$Wonderjs.setShaderIndex;

var deepCopyStateForRestore = MaterialStateCommon$Wonderjs.deepCopyStateForRestore;

var restore = MaterialStateCommon$Wonderjs.restore;

export {
  handleInitComponent     ,
  getGameObject           ,
  getMaterialData         ,
  unsafeGetShaderIndex    ,
  setShaderIndex          ,
  isAlive                 ,
  getColor                ,
  unsafeGetColor          ,
  setColor                ,
  deepCopyStateForRestore ,
  restore                 ,
  
}
/* MaterialStateCommon-Wonderjs Not a pure module */
