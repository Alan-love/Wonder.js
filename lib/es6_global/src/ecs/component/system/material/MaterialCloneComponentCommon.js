// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as ArraySystem$Wonderjs               from "../../../../structure/ArraySystem.js";
import * as ArraySystem$WonderCommonlib        from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArraySystem.js";
import * as MaterialShaderIndexCommon$Wonderjs from "./MaterialShaderIndexCommon.js";

function _handleShareMaterial(sourceComponent, countRangeArr, param) {
  return /* tuple */[
          param[1],
          countRangeArr.map((function () {
                  return sourceComponent;
                }))
        ];
}

function _handleNotShareMaterial(sourceComponent, countRangeArr, param, param$1) {
  var state = param$1[1];
  var shaderIndexMap = param$1[0];
  var setShaderIndexFunc = param[3];
  var setDataFunc = param[2];
  var createFunc = param[0];
  var hasShaderIndex = MaterialShaderIndexCommon$Wonderjs.hasShaderIndex(sourceComponent, shaderIndexMap);
  var shaderIndex = hasShaderIndex !== 0 ? MaterialShaderIndexCommon$Wonderjs.unsafeGetShaderIndex(sourceComponent, shaderIndexMap) : -1;
  var dataTuple = param[1](sourceComponent, state);
  return ArraySystem$WonderCommonlib.reduceOneParam((function (param, _) {
                var match = createFunc(param[0]);
                var index = match[1];
                var state = setDataFunc(index, dataTuple, match[0]);
                var state$1 = hasShaderIndex !== 0 ? setShaderIndexFunc(index, shaderIndex, state) : state;
                return /* tuple */[
                        state$1,
                        ArraySystem$Wonderjs.push(index, param[1])
                      ];
              }), /* tuple */[
              state,
              /* array */[]
            ], countRangeArr);
}

function handleCloneComponent(param, funcTuple, stateTuple) {
  var countRangeArr = param[1];
  var sourceComponent = param[0];
  if (param[2] !== 0) {
    return _handleShareMaterial(sourceComponent, countRangeArr, stateTuple);
  } else {
    return _handleNotShareMaterial(sourceComponent, countRangeArr, funcTuple, stateTuple);
  }
}

export {
  _handleShareMaterial    ,
  _handleNotShareMaterial ,
  handleCloneComponent    ,
  
}
/* ArraySystem-Wonderjs Not a pure module */
