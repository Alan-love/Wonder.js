// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as SparseMapSystem$Wonderjs from "../../../../../structure/SparseMapSystem.js";

function getMaterialData(state) {
  return state[/* lightMaterialData */16];
}

function deepCopyStateForRestore(state) {
  var match = state[/* lightMaterialData */16];
  var newrecord = state.slice();
  newrecord[/* lightMaterialData */16] = /* record */[
    /* index */match[/* index */0],
    /* shaderIndexMap : int array */[],
    /* diffuseColorMap */SparseMapSystem$Wonderjs.copy(match[/* diffuseColorMap */2]),
    /* specularColorMap */SparseMapSystem$Wonderjs.copy(match[/* specularColorMap */3]),
    /* shininessMap */SparseMapSystem$Wonderjs.copy(match[/* shininessMap */4]),
    /* gameObjectMap */SparseMapSystem$Wonderjs.copy(match[/* gameObjectMap */5]),
    /* groupCountMap */SparseMapSystem$Wonderjs.copy(match[/* groupCountMap */6]),
    /* disposedIndexArray */match[/* disposedIndexArray */7].slice()
  ];
  return newrecord;
}

function restore(_, targetState) {
  var newrecord = targetState.slice();
  var newrecord$1 = targetState[/* lightMaterialData */16].slice();
  newrecord$1[/* shaderIndexMap */1] = /* int array */[];
  newrecord[/* lightMaterialData */16] = newrecord$1;
  return newrecord;
}

export {
  getMaterialData         ,
  deepCopyStateForRestore ,
  restore                 ,
  
}
/* SparseMapSystem-Wonderjs Not a pure module */
