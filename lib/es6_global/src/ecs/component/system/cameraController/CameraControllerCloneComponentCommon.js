// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Js_option                               from "../../../../../../../node_modules/bs-platform/lib/es6/js_option.js";
import * as ArraySystem$Wonderjs                    from "../../../../structure/ArraySystem.js";
import * as CameraControllerStateCommon$Wonderjs    from "./CameraControllerStateCommon.js";
import * as CameraControllerCreateCommon$Wonderjs   from "./CameraControllerCreateCommon.js";
import * as PerspectiveCameraOperateCommon$Wonderjs from "./PerspectiveCameraOperateCommon.js";

function handleCloneComponent(sourceComponent, countRangeArr, state) {
  var cameraData = CameraControllerStateCommon$Wonderjs.getPerspectiveCameraData(state);
  var near = Js_option.getExn(PerspectiveCameraOperateCommon$Wonderjs.getNear(sourceComponent, cameraData));
  var far = Js_option.getExn(PerspectiveCameraOperateCommon$Wonderjs.getFar(sourceComponent, cameraData));
  var fovy = Js_option.getExn(PerspectiveCameraOperateCommon$Wonderjs.getFovy(sourceComponent, cameraData));
  var aspect = Js_option.getExn(PerspectiveCameraOperateCommon$Wonderjs.getAspect(sourceComponent, cameraData));
  var componentArr = /* int array */[];
  var state$1 = ArraySystem$Wonderjs.reduceState((function (state, _) {
          var match = CameraControllerCreateCommon$Wonderjs.create(state);
          var index = match[1];
          var state$1 = PerspectiveCameraOperateCommon$Wonderjs.setAspect(index, aspect, PerspectiveCameraOperateCommon$Wonderjs.setFovy(index, fovy, PerspectiveCameraOperateCommon$Wonderjs.setFar(index, far, PerspectiveCameraOperateCommon$Wonderjs.setNear(index, near, match[0]))));
          componentArr.push(index);
          return state$1;
        }), state, countRangeArr);
  return /* tuple */[
          state$1,
          componentArr
        ];
}

export {
  handleCloneComponent ,
  
}
/* ArraySystem-Wonderjs Not a pure module */
