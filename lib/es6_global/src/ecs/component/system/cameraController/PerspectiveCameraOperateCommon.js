// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as SparseMapSystem$WonderCommonlib      from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";
import * as CameraControllerDirtyCommon$Wonderjs from "./CameraControllerDirtyCommon.js";
import * as CameraControllerStateCommon$Wonderjs from "./CameraControllerStateCommon.js";

function getFovy(cameraController, cameraData) {
  return SparseMapSystem$WonderCommonlib.get(cameraController, cameraData[/* fovyMap */2]);
}

function setFovy(cameraController, fovy, state) {
  SparseMapSystem$WonderCommonlib.set(cameraController, fovy, CameraControllerStateCommon$Wonderjs.getPerspectiveCameraData(state)[/* fovyMap */2]);
  CameraControllerDirtyCommon$Wonderjs.addToDirtyArray(cameraController, CameraControllerStateCommon$Wonderjs.getCameraControllerData(state));
  return state;
}

function getAspect(cameraController, cameraData) {
  return SparseMapSystem$WonderCommonlib.get(cameraController, cameraData[/* aspectMap */3]);
}

function setAspect(cameraController, aspect, state) {
  SparseMapSystem$WonderCommonlib.set(cameraController, aspect, CameraControllerStateCommon$Wonderjs.getPerspectiveCameraData(state)[/* aspectMap */3]);
  CameraControllerDirtyCommon$Wonderjs.addToDirtyArray(cameraController, CameraControllerStateCommon$Wonderjs.getCameraControllerData(state));
  return state;
}

function getNear(cameraController, cameraData) {
  return SparseMapSystem$WonderCommonlib.get(cameraController, cameraData[/* nearMap */0]);
}

function setNear(cameraController, near, state) {
  SparseMapSystem$WonderCommonlib.set(cameraController, near, CameraControllerStateCommon$Wonderjs.getPerspectiveCameraData(state)[/* nearMap */0]);
  CameraControllerDirtyCommon$Wonderjs.addToDirtyArray(cameraController, CameraControllerStateCommon$Wonderjs.getCameraControllerData(state));
  return state;
}

function getFar(cameraController, cameraData) {
  return SparseMapSystem$WonderCommonlib.get(cameraController, cameraData[/* farMap */1]);
}

function setFar(cameraController, far, state) {
  SparseMapSystem$WonderCommonlib.set(cameraController, far, CameraControllerStateCommon$Wonderjs.getPerspectiveCameraData(state)[/* farMap */1]);
  CameraControllerDirtyCommon$Wonderjs.addToDirtyArray(cameraController, CameraControllerStateCommon$Wonderjs.getCameraControllerData(state));
  return state;
}

export {
  getFovy   ,
  setFovy   ,
  getAspect ,
  setAspect ,
  getNear   ,
  setNear   ,
  getFar    ,
  setFar    ,
  
}
/* CameraControllerDirtyCommon-Wonderjs Not a pure module */
