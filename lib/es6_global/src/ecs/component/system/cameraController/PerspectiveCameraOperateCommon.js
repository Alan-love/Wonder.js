// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as SparseMapSystem$WonderCommonlib      from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";
import * as CameraControllerDirtyCommon$Wonderjs from "./CameraControllerDirtyCommon.js";
import * as CameraControllerStateCommon$Wonderjs from "./CameraControllerStateCommon.js";

function getFovy(cameraController, cameraData) {
  return SparseMapSystem$WonderCommonlib.get(cameraController, cameraData[/* fovyMap */2]);
}

function setFovy(cameraController, fovy, state) {
  var cameraControllerData = CameraControllerStateCommon$Wonderjs.getCameraControllerData(state);
  var perspectiveCameraData = CameraControllerStateCommon$Wonderjs.getPerspectiveCameraData(state);
  var newrecord = state.slice();
  var newrecord$1 = cameraControllerData.slice();
  newrecord$1[/* dirtyArray */2] = CameraControllerDirtyCommon$Wonderjs.addToDirtyArray(cameraController, cameraControllerData[/* dirtyArray */2]);
  newrecord$1[/* perspectiveCameraData */6] = /* record */[
    /* nearMap */perspectiveCameraData[/* nearMap */0],
    /* farMap */perspectiveCameraData[/* farMap */1],
    /* fovyMap */SparseMapSystem$WonderCommonlib.set(cameraController, fovy, perspectiveCameraData[/* fovyMap */2]),
    /* aspectMap */perspectiveCameraData[/* aspectMap */3]
  ];
  newrecord[/* cameraControllerData */14] = newrecord$1;
  return newrecord;
}

function getAspect(cameraController, cameraData) {
  return SparseMapSystem$WonderCommonlib.get(cameraController, cameraData[/* aspectMap */3]);
}

function setAspect(cameraController, aspect, state) {
  var cameraControllerData = CameraControllerStateCommon$Wonderjs.getCameraControllerData(state);
  var perspectiveCameraData = CameraControllerStateCommon$Wonderjs.getPerspectiveCameraData(state);
  var newrecord = state.slice();
  var newrecord$1 = cameraControllerData.slice();
  newrecord$1[/* dirtyArray */2] = CameraControllerDirtyCommon$Wonderjs.addToDirtyArray(cameraController, cameraControllerData[/* dirtyArray */2]);
  newrecord$1[/* perspectiveCameraData */6] = /* record */[
    /* nearMap */perspectiveCameraData[/* nearMap */0],
    /* farMap */perspectiveCameraData[/* farMap */1],
    /* fovyMap */perspectiveCameraData[/* fovyMap */2],
    /* aspectMap */SparseMapSystem$WonderCommonlib.set(cameraController, aspect, perspectiveCameraData[/* aspectMap */3])
  ];
  newrecord[/* cameraControllerData */14] = newrecord$1;
  return newrecord;
}

function getNear(cameraController, cameraData) {
  return SparseMapSystem$WonderCommonlib.get(cameraController, cameraData[/* nearMap */0]);
}

function setNear(cameraController, near, state) {
  var cameraControllerData = CameraControllerStateCommon$Wonderjs.getCameraControllerData(state);
  var perspectiveCameraData = CameraControllerStateCommon$Wonderjs.getPerspectiveCameraData(state);
  var newrecord = state.slice();
  var newrecord$1 = cameraControllerData.slice();
  newrecord$1[/* dirtyArray */2] = CameraControllerDirtyCommon$Wonderjs.addToDirtyArray(cameraController, cameraControllerData[/* dirtyArray */2]);
  newrecord$1[/* perspectiveCameraData */6] = /* record */[
    /* nearMap */SparseMapSystem$WonderCommonlib.set(cameraController, near, perspectiveCameraData[/* nearMap */0]),
    /* farMap */perspectiveCameraData[/* farMap */1],
    /* fovyMap */perspectiveCameraData[/* fovyMap */2],
    /* aspectMap */perspectiveCameraData[/* aspectMap */3]
  ];
  newrecord[/* cameraControllerData */14] = newrecord$1;
  return newrecord;
}

function getFar(cameraController, cameraData) {
  return SparseMapSystem$WonderCommonlib.get(cameraController, cameraData[/* farMap */1]);
}

function setFar(cameraController, far, state) {
  var cameraControllerData = CameraControllerStateCommon$Wonderjs.getCameraControllerData(state);
  var perspectiveCameraData = CameraControllerStateCommon$Wonderjs.getPerspectiveCameraData(state);
  var newrecord = state.slice();
  var newrecord$1 = cameraControllerData.slice();
  newrecord$1[/* dirtyArray */2] = CameraControllerDirtyCommon$Wonderjs.addToDirtyArray(cameraController, cameraControllerData[/* dirtyArray */2]);
  newrecord$1[/* perspectiveCameraData */6] = /* record */[
    /* nearMap */perspectiveCameraData[/* nearMap */0],
    /* farMap */SparseMapSystem$WonderCommonlib.set(cameraController, far, perspectiveCameraData[/* farMap */1]),
    /* fovyMap */perspectiveCameraData[/* fovyMap */2],
    /* aspectMap */perspectiveCameraData[/* aspectMap */3]
  ];
  newrecord[/* cameraControllerData */14] = newrecord$1;
  return newrecord;
}

export {
  getFovy   ,
  setFovy   ,
  getAspect ,
  setAspect ,
  getNear   ,
  setNear   ,
  getFar    ,
  setFar    ,
  
}
/* CameraControllerDirtyCommon-Wonderjs Not a pure module */
