// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Contract$WonderLog                       from "../../../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateData$Wonderjs                       from "../../../../core/StateData.js";
import * as ArraySystem$Wonderjs                     from "../../../../structure/ArraySystem.js";
import * as CameraControllerStateCommon$Wonderjs     from "./CameraControllerStateCommon.js";
import * as PerspectiveCameraDisposeCommon$Wonderjs  from "./PerspectiveCameraDisposeCommon.js";
import * as ComponentDisposeComponentCommon$Wonderjs from "../component/ComponentDisposeComponentCommon.js";

function isAlive(cameraController, state) {
  return ComponentDisposeComponentCommon$Wonderjs.isAlive(cameraController, CameraControllerStateCommon$Wonderjs.getCameraControllerData(state)[/* disposedIndexArray */7]);
}

function _disposeData(cameraController, state) {
  var state$1 = PerspectiveCameraDisposeCommon$Wonderjs.disposeData(cameraController, state);
  var data = CameraControllerStateCommon$Wonderjs.getCameraControllerData(state$1);
  var newrecord = state$1.slice();
  newrecord[/* cameraControllerData */14] = /* record */[
    /* index */data[/* index */0],
    /* cameraArray */ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(cameraController, data[/* cameraArray */1]),
    /* dirtyArray */ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(cameraController, data[/* dirtyArray */2]),
    /* pMatrixMap */ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(cameraController, data[/* pMatrixMap */3]),
    /* gameObjectMap */ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(cameraController, data[/* gameObjectMap */4]),
    /* updateCameraFuncMap */ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(cameraController, data[/* updateCameraFuncMap */5]),
    /* perspectiveCameraData */data[/* perspectiveCameraData */6],
    /* disposedIndexArray */data[/* disposedIndexArray */7]
  ];
  return newrecord;
}

function handleDisposeComponent(cameraController, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAlive(cameraController, isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  var data = CameraControllerStateCommon$Wonderjs.getCameraControllerData(state);
  var newrecord = state.slice();
  var newrecord$1 = data.slice();
  newrecord$1[/* disposedIndexArray */7] = ArraySystem$Wonderjs.push(cameraController, data[/* disposedIndexArray */7]);
  newrecord[/* cameraControllerData */14] = newrecord$1;
  return _disposeData(cameraController, newrecord);
}

function handleBatchDisposeComponent(cameraControllerArray, _, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAliveWithBatchDispose(cameraControllerArray, isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  var data = CameraControllerStateCommon$Wonderjs.getCameraControllerData(state);
  var newrecord = state.slice();
  var newrecord$1 = data.slice();
  newrecord$1[/* disposedIndexArray */7] = data[/* disposedIndexArray */7].concat(cameraControllerArray);
  newrecord[/* cameraControllerData */14] = newrecord$1;
  return ArraySystem$Wonderjs.reduceState((function (state, cameraController) {
                return _disposeData(cameraController, state);
              }), newrecord, cameraControllerArray);
}

export {
  isAlive                     ,
  _disposeData                ,
  handleDisposeComponent      ,
  handleBatchDisposeComponent ,
  
}
/* Contract-WonderLog Not a pure module */
