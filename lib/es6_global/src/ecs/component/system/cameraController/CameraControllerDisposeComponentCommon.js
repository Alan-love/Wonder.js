// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Contract$Wonderjs                        from "../../../../definition/Contract.js";
import * as ArraySystem$Wonderjs                     from "../../../../structure/ArraySystem.js";
import * as ArraySystem$WonderCommonlib              from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArraySystem.js";
import * as CameraControllerStateCommon$Wonderjs     from "./CameraControllerStateCommon.js";
import * as PerspectiveCameraDisposeCommon$Wonderjs  from "./PerspectiveCameraDisposeCommon.js";
import * as ComponentDisposeComponentCommon$Wonderjs from "../component/ComponentDisposeComponentCommon.js";

function isAlive(cameraController, state) {
  return ComponentDisposeComponentCommon$Wonderjs.isAlive(cameraController, CameraControllerStateCommon$Wonderjs.getCameraControllerData(state)[/* disposedIndexArray */7]);
}

function _disposeData(cameraController, state) {
  var state$1 = PerspectiveCameraDisposeCommon$Wonderjs.disposeData(cameraController, state);
  var data = CameraControllerStateCommon$Wonderjs.getCameraControllerData(state$1);
  var cameraArray = data[/* cameraArray */1];
  var dirtyArray = data[/* dirtyArray */2];
  var pMatrixMap = data[/* pMatrixMap */3];
  var gameObjectMap = data[/* gameObjectMap */4];
  var updateCameraFuncMap = data[/* updateCameraFuncMap */5];
  ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(cameraController, cameraArray);
  ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(cameraController, dirtyArray);
  ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(cameraController, pMatrixMap);
  ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(cameraController, gameObjectMap);
  ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(cameraController, updateCameraFuncMap);
  return state$1;
}

function handleDisposeComponent(cameraController, state) {
  Contract$Wonderjs.requireCheck((function () {
          return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAlive(cameraController, isAlive, state);
        }));
  var match = CameraControllerStateCommon$Wonderjs.getCameraControllerData(state);
  var disposedIndexArray = match[/* disposedIndexArray */7];
  disposedIndexArray.push(cameraController);
  return _disposeData(cameraController, state);
}

function handleBatchDisposeComponent(cameraControllerArray, _, state) {
  Contract$Wonderjs.requireCheck((function () {
          return ArraySystem$WonderCommonlib.forEach((function (cameraController) {
                        return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAlive(cameraController, isAlive, state);
                      }), cameraControllerArray);
        }));
  var data = CameraControllerStateCommon$Wonderjs.getCameraControllerData(state);
  var disposedIndexArray = data[/* disposedIndexArray */7];
  data[/* disposedIndexArray */7] = disposedIndexArray.concat(cameraControllerArray);
  return ArraySystem$Wonderjs.reduceState((function (state, cameraController) {
                return _disposeData(cameraController, state);
              }), state, cameraControllerArray);
}

export {
  isAlive                     ,
  _disposeData                ,
  handleDisposeComponent      ,
  handleBatchDisposeComponent ,
  
}
/* ArraySystem-Wonderjs Not a pure module */
