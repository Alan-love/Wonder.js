// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as ArraySystem$Wonderjs            from "../../../../structure/ArraySystem.js";
import * as ArraySystem$WonderCommonlib     from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArraySystem.js";
import * as TransformDirtyCommon$Wonderjs   from "./TransformDirtyCommon.js";
import * as TransformStateCommon$Wonderjs   from "./TransformStateCommon.js";
import * as TransformCreateCommon$Wonderjs  from "./TransformCreateCommon.js";
import * as TransformOperateCommon$Wonderjs from "./TransformOperateCommon.js";

function handleCloneComponent(sourceComponent, countRangeArr, state) {
  var data = TransformStateCommon$Wonderjs.getTransformData(state);
  var localPosition = TransformOperateCommon$Wonderjs.getLocalPositionTuple(sourceComponent, data[/* localPositionMap */5]);
  var match = ArraySystem$WonderCommonlib.reduceOneParam((function (param, _) {
          var match = TransformCreateCommon$Wonderjs.create(param[0]);
          var index = match[1];
          var state = match[0];
          var newrecord = state.slice();
          return /* tuple */[
                  (newrecord[/* transformData */13] = TransformDirtyCommon$Wonderjs.mark(index, /* true */1, TransformOperateCommon$Wonderjs.setLocalPositionByTuple(index, localPosition, TransformStateCommon$Wonderjs.getTransformData(state))), newrecord),
                  ArraySystem$Wonderjs.push(index, param[1])
                ];
        }), /* tuple */[
        state,
        /* int array */[]
      ], countRangeArr);
  var state$1 = match[0];
  var newrecord = state$1.slice();
  return /* tuple */[
          (newrecord[/* transformData */13] = TransformDirtyCommon$Wonderjs.mark(sourceComponent, /* true */1, TransformStateCommon$Wonderjs.getTransformData(state$1)), newrecord),
          match[1]
        ];
}

export {
  handleCloneComponent ,
  
}
/* ArraySystem-Wonderjs Not a pure module */
