// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Log$WonderLog                    from "../../../../../../../node_modules/wonder-log/lib/es6_global/src/Log.js";
import * as Contract$WonderLog               from "../../../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateData$Wonderjs               from "../../../../core/StateData.js";
import * as ArraySystem$WonderCommonlib      from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArraySystem.js";
import * as SparseMapSystem$WonderCommonlib  from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";
import * as TransformHierachyCommon$Wonderjs from "./TransformHierachyCommon.js";

function mark(transform, isDirty, data) {
  SparseMapSystem$WonderCommonlib.set(transform, isDirty, data[/* dirtyMap */6]);
  return data;
}

function markHierachyDirty(transform, data) {
  return ArraySystem$WonderCommonlib.reduceOneParam((function (data, child) {
                return markHierachyDirty(child, data);
              }), data, TransformHierachyCommon$Wonderjs.unsafeGetChildren(transform, mark(transform, /* true */1, data)));
}

function isDirty(transform, data) {
  return Contract$WonderLog.ensureCheck((function (isDirty) {
                return Contract$WonderLog.test(Log$WonderLog.buildAssertMessage("return bool", "not"), (function () {
                              Contract$WonderLog.assertNullableExist(isDirty);
                              return Contract$WonderLog.assertIsBool(isDirty);
                            }));
              }), StateData$Wonderjs.stateData[/* isDebug */1], SparseMapSystem$WonderCommonlib.unsafeGet(transform, data[/* dirtyMap */6]));
}

export {
  mark              ,
  markHierachyDirty ,
  isDirty           ,
  
}
/* Log-WonderLog Not a pure module */
