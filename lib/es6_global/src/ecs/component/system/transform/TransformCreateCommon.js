// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as TypeArrayUtils$Wonderjs         from "../../../../utils/TypeArrayUtils.js";
import * as ComponentSystem$Wonderjs        from "../component/ComponentSystem.js";
import * as ArraySystem$WonderCommonlib     from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArraySystem.js";
import * as TypeArrayPoolSystem$Wonderjs    from "../../../../structure/pool/TypeArrayPoolSystem.js";
import * as TransformStateCommon$Wonderjs   from "./TransformStateCommon.js";
import * as SparseMapSystem$WonderCommonlib from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";

function _setDefaultChildren(index, childMap) {
  return SparseMapSystem$WonderCommonlib.set(index, ArraySystem$WonderCommonlib.createEmpty(/* () */0), childMap);
}

function _setDefaultLocalToWorldMatrix(index, localToWorldMatrixMap, state) {
  var defaultMatrixArr = /* float array */[
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1
  ];
  var match = TypeArrayPoolSystem$Wonderjs.getFloat32TypeArrayFromPool(16, state);
  var defaultMatrixTypeArr = match ? TypeArrayUtils$Wonderjs.setFloat16(0, defaultMatrixArr, match[0]) : new Float32Array(defaultMatrixArr);
  return SparseMapSystem$WonderCommonlib.set(index, defaultMatrixTypeArr, localToWorldMatrixMap);
}

function _setDefaultLocalPosition(index, localPositionMap, state) {
  var defaultLocalPositionArr = /* float array */[
    0,
    0,
    0
  ];
  var match = TypeArrayPoolSystem$Wonderjs.getFloat32TypeArrayFromPool(3, state);
  var defaultLocalPositionTypeArr = match ? TypeArrayUtils$Wonderjs.setFloat3(0, defaultLocalPositionArr, match[0]) : new Float32Array(defaultLocalPositionArr);
  return SparseMapSystem$WonderCommonlib.set(index, defaultLocalPositionTypeArr, localPositionMap);
}

var _isNotNeedInitData = SparseMapSystem$WonderCommonlib.has;

function _initDataWhenCreate(index, state) {
  var data = TransformStateCommon$Wonderjs.getTransformData(state);
  var childMap = data[/* childMap */2];
  var match = SparseMapSystem$WonderCommonlib.has(index, childMap);
  if (match !== 0) {
    return state;
  } else {
    var newrecord = state.slice();
    newrecord[/* transformData */13] = /* record */[
      /* index */data[/* index */0],
      /* parentMap */data[/* parentMap */1],
      /* childMap */_setDefaultChildren(index, childMap),
      /* gameObjectMap */data[/* gameObjectMap */3],
      /* localToWorldMatrixMap */_setDefaultLocalToWorldMatrix(index, data[/* localToWorldMatrixMap */4], state),
      /* localPositionMap */_setDefaultLocalPosition(index, data[/* localPositionMap */5], state),
      /* dirtyMap */data[/* dirtyMap */6],
      /* normalMatrixCacheMap */data[/* normalMatrixCacheMap */7],
      /* disposedIndexArray */data[/* disposedIndexArray */8]
    ];
    return newrecord;
  }
}

function create(state) {
  var data = TransformStateCommon$Wonderjs.getTransformData(state);
  var index = data[/* index */0];
  var match = ComponentSystem$Wonderjs.generateIndex(index, data[/* disposedIndexArray */8]);
  var index$1 = match[0];
  data[/* index */0] = match[1];
  var state$1 = _initDataWhenCreate(index$1, state);
  var newrecord = state$1.slice();
  var newrecord$1 = data.slice();
  newrecord$1[/* disposedIndexArray */8] = match[2];
  newrecord[/* transformData */13] = newrecord$1;
  return /* tuple */[
          newrecord,
          index$1
        ];
}

export {
  _setDefaultChildren           ,
  _setDefaultLocalToWorldMatrix ,
  _setDefaultLocalPosition      ,
  _isNotNeedInitData            ,
  _initDataWhenCreate           ,
  create                        ,
  
}
/* TypeArrayUtils-Wonderjs Not a pure module */
