// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as TypeArrayUtils$Wonderjs         from "../../../../utils/TypeArrayUtils.js";
import * as ComponentSystem$Wonderjs        from "../component/ComponentSystem.js";
import * as ArraySystem$WonderCommonlib     from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArraySystem.js";
import * as TypeArrayPoolSystem$Wonderjs    from "../../../../structure/pool/TypeArrayPoolSystem.js";
import * as TransformStateCommon$Wonderjs   from "./TransformStateCommon.js";
import * as SparseMapSystem$WonderCommonlib from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";

function _setDefaultChildren(index, childMap) {
  SparseMapSystem$WonderCommonlib.set(index, ArraySystem$WonderCommonlib.createEmpty(/* () */0), childMap);
  return childMap;
}

function _setDefaultLocalToWorldMatrix(index, localToWorldMatrixMap, state) {
  var defaultMatrixArr = /* float array */[
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1
  ];
  var match = TypeArrayPoolSystem$Wonderjs.getFloat32TypeArrayFromPool(16, state);
  var defaultMatrixTypeArr = match ? TypeArrayUtils$Wonderjs.setFloat16(0, defaultMatrixArr, match[0]) : new Float32Array(defaultMatrixArr);
  SparseMapSystem$WonderCommonlib.set(index, defaultMatrixTypeArr, localToWorldMatrixMap);
  return localToWorldMatrixMap;
}

function _setDefaultLocalPosition(index, localPositionMap, state) {
  var defaultLocalPositionArr = /* float array */[
    0,
    0,
    0
  ];
  var match = TypeArrayPoolSystem$Wonderjs.getFloat32TypeArrayFromPool(3, state);
  var defaultLocalPositionTypeArr = match ? TypeArrayUtils$Wonderjs.setFloat3(0, defaultLocalPositionArr, match[0]) : new Float32Array(defaultLocalPositionArr);
  SparseMapSystem$WonderCommonlib.set(index, defaultLocalPositionTypeArr, localPositionMap);
  return localPositionMap;
}

var _isNotNeedInitData = SparseMapSystem$WonderCommonlib.has;

function _initDataWhenCreate(index, state) {
  var data = TransformStateCommon$Wonderjs.getTransformData(state);
  var childMap = data[/* childMap */2];
  var match = SparseMapSystem$WonderCommonlib.has(index, childMap);
  if (match !== 0) {
    return /* () */0;
  } else {
    _setDefaultChildren(index, childMap);
    _setDefaultLocalToWorldMatrix(index, data[/* localToWorldMatrixMap */4], state);
    _setDefaultLocalPosition(index, data[/* localPositionMap */5], state);
    return /* () */0;
  }
}

function create(state) {
  var data = TransformStateCommon$Wonderjs.getTransformData(state);
  var index = data[/* index */0];
  var disposedIndexArray = data[/* disposedIndexArray */7];
  var match = ComponentSystem$Wonderjs.generateIndex(index, disposedIndexArray);
  var index$1 = match[0];
  data[/* index */0] = match[1];
  _initDataWhenCreate(index$1, state);
  return index$1;
}

export {
  _setDefaultChildren           ,
  _setDefaultLocalToWorldMatrix ,
  _setDefaultLocalPosition      ,
  _isNotNeedInitData            ,
  _initDataWhenCreate           ,
  create                        ,
  
}
/* TypeArrayUtils-Wonderjs Not a pure module */
