// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Contract$WonderLog                       from "../../../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateData$Wonderjs                       from "../../../../core/StateData.js";
import * as ArraySystem$Wonderjs                     from "../../../../structure/ArraySystem.js";
import * as MeshRendererStateCommon$Wonderjs         from "./MeshRendererStateCommon.js";
import * as ComponentDisposeComponentCommon$Wonderjs from "../component/ComponentDisposeComponentCommon.js";

function _removeFromRenderArray(disposedGameObjectUid, data) {
  var renderGameObjectArray = data[/* renderGameObjectArray */1];
  ComponentDisposeComponentCommon$Wonderjs.removeFromArray(disposedGameObjectUid, renderGameObjectArray);
  return data;
}

function _batchRemoveFromRenderArray(disposedGameObjectUidMap, data) {
  var renderGameObjectArray = data[/* renderGameObjectArray */1];
  data[/* renderGameObjectArray */1] = ComponentDisposeComponentCommon$Wonderjs.batchRemoveFromArray(disposedGameObjectUidMap, renderGameObjectArray);
  return data;
}

function isAlive(meshRenderer, state) {
  return ComponentDisposeComponentCommon$Wonderjs.isAlive(meshRenderer, MeshRendererStateCommon$Wonderjs.getMeshRendererData(state)[/* disposedIndexArray */3]);
}

function _disposeData(meshRenderer, state) {
  var data = MeshRendererStateCommon$Wonderjs.getMeshRendererData(state);
  ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(meshRenderer, data[/* gameObjectMap */2]);
  return state;
}

function handleDisposeComponent(meshRenderer, gameObjectUid, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAlive(meshRenderer, isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  var data = MeshRendererStateCommon$Wonderjs.getMeshRendererData(state);
  var disposedIndexArray = data[/* disposedIndexArray */3];
  disposedIndexArray.push(meshRenderer);
  _removeFromRenderArray(gameObjectUid, data);
  return _disposeData(meshRenderer, state);
}

function handleBatchDisposeComponent(meshRendererArray, gameObjectUidMap, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAliveWithBatchDispose(meshRendererArray, isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  var data = MeshRendererStateCommon$Wonderjs.getMeshRendererData(state);
  var disposedIndexArray = data[/* disposedIndexArray */3];
  data[/* disposedIndexArray */3] = disposedIndexArray.concat(meshRendererArray);
  _batchRemoveFromRenderArray(gameObjectUidMap, data);
  return ArraySystem$Wonderjs.reduceState((function (state, meshRenderer) {
                return _disposeData(meshRenderer, state);
              }), state, meshRendererArray);
}

export {
  _removeFromRenderArray      ,
  _batchRemoveFromRenderArray ,
  isAlive                     ,
  _disposeData                ,
  handleDisposeComponent      ,
  handleBatchDisposeComponent ,
  
}
/* Contract-WonderLog Not a pure module */
