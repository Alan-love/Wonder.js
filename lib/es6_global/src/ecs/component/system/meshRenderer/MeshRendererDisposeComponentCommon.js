// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Contract$WonderLog                       from "../../../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateData$Wonderjs                       from "../../../../core/StateData.js";
import * as ArraySystem$Wonderjs                     from "../../../../structure/ArraySystem.js";
import * as MeshRendererStateCommon$Wonderjs         from "./MeshRendererStateCommon.js";
import * as ComponentDisposeComponentCommon$Wonderjs from "../component/ComponentDisposeComponentCommon.js";

var _removeFromRenderArray = ComponentDisposeComponentCommon$Wonderjs.removeFromArray;

var _batchRemoveFromRenderArray = ComponentDisposeComponentCommon$Wonderjs.batchRemoveFromArray;

function isAlive(meshRenderer, state) {
  return ComponentDisposeComponentCommon$Wonderjs.isAlive(meshRenderer, MeshRendererStateCommon$Wonderjs.getMeshRendererData(state)[/* disposedIndexArray */3]);
}

function _disposeData(meshRenderer, state) {
  var data = MeshRendererStateCommon$Wonderjs.getMeshRendererData(state);
  var newrecord = state.slice();
  newrecord[/* meshRendererData */21] = /* record */[
    /* index */data[/* index */0],
    /* renderGameObjectArray */data[/* renderGameObjectArray */1],
    /* gameObjectMap */ComponentDisposeComponentCommon$Wonderjs.disposeSparseMapData(meshRenderer, data[/* gameObjectMap */2]),
    /* disposedIndexArray */data[/* disposedIndexArray */3]
  ];
  return newrecord;
}

function handleDisposeComponent(meshRenderer, gameObjectUid, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAlive(meshRenderer, isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  var data = MeshRendererStateCommon$Wonderjs.getMeshRendererData(state);
  var state$1 = _disposeData(meshRenderer, state);
  var newrecord = state$1.slice();
  newrecord[/* meshRendererData */21] = /* record */[
    /* index */data[/* index */0],
    /* renderGameObjectArray */ComponentDisposeComponentCommon$Wonderjs.removeFromArray(gameObjectUid, data[/* renderGameObjectArray */1]),
    /* gameObjectMap */data[/* gameObjectMap */2],
    /* disposedIndexArray */ArraySystem$Wonderjs.push(meshRenderer, data[/* disposedIndexArray */3])
  ];
  return newrecord;
}

function handleBatchDisposeComponent(meshRendererArray, gameObjectUidMap, state) {
  Contract$WonderLog.requireCheck((function () {
          return ComponentDisposeComponentCommon$Wonderjs.checkComponentShouldAliveWithBatchDispose(meshRendererArray, isAlive, state);
        }), StateData$Wonderjs.stateData[/* isDebug */1]);
  var data = MeshRendererStateCommon$Wonderjs.getMeshRendererData(state);
  var newrecord = state.slice();
  newrecord[/* meshRendererData */21] = /* record */[
    /* index */data[/* index */0],
    /* renderGameObjectArray */ComponentDisposeComponentCommon$Wonderjs.batchRemoveFromArray(gameObjectUidMap, data[/* renderGameObjectArray */1]),
    /* gameObjectMap */data[/* gameObjectMap */2],
    /* disposedIndexArray */data[/* disposedIndexArray */3].concat(meshRendererArray)
  ];
  return ArraySystem$Wonderjs.reduceState((function (state, meshRenderer) {
                return _disposeData(meshRenderer, state);
              }), newrecord, meshRendererArray);
}

export {
  _removeFromRenderArray      ,
  _batchRemoveFromRenderArray ,
  isAlive                     ,
  _disposeData                ,
  handleDisposeComponent      ,
  handleBatchDisposeComponent ,
  
}
/* Contract-WonderLog Not a pure module */
