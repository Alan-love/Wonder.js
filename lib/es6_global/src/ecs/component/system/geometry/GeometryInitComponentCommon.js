// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Curry                               from "../../../../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as GeometryOperateCommon$Wonderjs      from "./GeometryOperateCommon.js";
import * as SparseMapSystem$WonderCommonlib     from "../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";
import * as GeometryGetStateDataCommon$Wonderjs from "./GeometryGetStateDataCommon.js";

function _isInit(index, state) {
  var match = SparseMapSystem$WonderCommonlib.get(index, GeometryGetStateDataCommon$Wonderjs.getGeometryData(state)[/* isInitMap */7]);
  if (match) {
    return match[0];
  } else {
    return /* false */0;
  }
}

function _markIsInit(index, isInit, state) {
  SparseMapSystem$WonderCommonlib.set(index, isInit, GeometryGetStateDataCommon$Wonderjs.getGeometryData(state)[/* isInitMap */7]);
  return state;
}

function initGeometry(index, state) {
  if (_isInit(index, state)) {
    return state;
  } else {
    var match = GeometryGetStateDataCommon$Wonderjs.getGeometryData(state);
    var computeDataFuncMap = match[/* computeDataFuncMap */3];
    var match$1 = SparseMapSystem$WonderCommonlib.get(index, computeDataFuncMap);
    if (match$1) {
      var match$2 = Curry._2(match$1[0], index, state);
      return _markIsInit(index, /* true */1, GeometryOperateCommon$Wonderjs.setIndicesWithArray(index, match$2[/* indices */1], GeometryOperateCommon$Wonderjs.setVerticesWithArray(index, match$2[/* vertices */0], state)));
    } else {
      return state;
    }
  }
}

var handleInitComponent = initGeometry;

export {
  _isInit             ,
  _markIsInit         ,
  initGeometry        ,
  handleInitComponent ,
  
}
/* GeometryOperateCommon-Wonderjs Not a pure module */
