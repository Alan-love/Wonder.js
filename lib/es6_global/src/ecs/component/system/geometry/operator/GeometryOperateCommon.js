// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Log$WonderLog                   from "../../../../../../../../node_modules/wonder-log/lib/es6_global/src/Log.js";
import * as Contract$WonderLog              from "../../../../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateData$Wonderjs              from "../../../../../core/StateData.js";
import * as SparseMapSystem$WonderCommonlib from "../../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";

var getPoints = SparseMapSystem$WonderCommonlib.get;

function unsafeGetPoints(index, pointsMap) {
  return Contract$WonderLog.ensureCheck((function (points) {
                return Contract$WonderLog.test(Log$WonderLog.buildAssertMessage("points exist", "not"), (function () {
                              return Contract$WonderLog.assertNullableExist(points);
                            }));
              }), StateData$Wonderjs.stateData[/* isDebug */1], SparseMapSystem$WonderCommonlib.unsafeGet(index, pointsMap));
}

function setPointsWithArray(param, param$1, state) {
  var fillTypeArrayFunc = param$1[1];
  var pointsMap = param[3];
  var data = param[2];
  var points = param[1];
  if (points) {
    fillTypeArrayFunc(points[0], data, 0);
    return pointsMap;
  } else {
    var match = param$1[0](data.length, state);
    var typeArr = match ? fillTypeArrayFunc(match[0], data, 0) : param$1[2](data);
    return SparseMapSystem$WonderCommonlib.set(param[0], typeArr, pointsMap);
  }
}

var setPoints = SparseMapSystem$WonderCommonlib.set;

export {
  getPoints          ,
  unsafeGetPoints    ,
  setPointsWithArray ,
  setPoints          ,
  
}
/* Log-WonderLog Not a pure module */
