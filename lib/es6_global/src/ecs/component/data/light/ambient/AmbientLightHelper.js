// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Caml_int32                      from "../../../../../../../../node_modules/bs-platform/lib/es6/caml_int32.js";
import * as TypeArrayUtils$Wonderjs         from "../../../../../utils/TypeArrayUtils.js";
import * as ArraySystem$WonderCommonlib     from "../../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArraySystem.js";
import * as SparseMapSystem$WonderCommonlib from "../../../../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";

function getBufferMaxCount() {
  return 3;
}

function getColorDataSize() {
  return 3;
}

function _getColorIndex(index) {
  return Caml_int32.imul(index, 3);
}

function getColor(index, typeArr) {
  return TypeArrayUtils$Wonderjs.getFloat3(Caml_int32.imul(index, 3), typeArr);
}

function setColor(index, color, typeArr) {
  return TypeArrayUtils$Wonderjs.setFloat3(Caml_int32.imul(index, 3), color, typeArr);
}

function getDefaultColor() {
  return /* float array */[
          1,
          1,
          1
        ];
}

function _setDefaultTypeArrData(count, param) {
  var defaultColor = /* float array */[
    1,
    1,
    1
  ];
  return /* tuple */[
          param[0],
          ArraySystem$WonderCommonlib.reduceOneParam((function (colors, index) {
                  return setColor(index, defaultColor, colors);
                }), param[1], ArraySystem$WonderCommonlib.range(0, count - 1 | 0))
        ];
}

function _initBufferData() {
  var buffer = new ArrayBuffer(Caml_int32.imul(Caml_int32.imul(3, Float32Array.BYTES_PER_ELEMENT), 3));
  var offset = 0;
  var typeArrayLength = 9;
  var colors = new Float32Array(buffer, offset, typeArrayLength);
  offset = Caml_int32.imul(typeArrayLength, Float32Array.BYTES_PER_ELEMENT);
  return _setDefaultTypeArrData(3, /* tuple */[
              buffer,
              colors
            ]);
}

function initData() {
  var match = _initBufferData(/* () */0);
  return /* record */[
          /* index */0,
          /* buffer */match[0],
          /* colors */match[1],
          /* mappedIndexMap */SparseMapSystem$WonderCommonlib.createEmpty(/* () */0),
          /* gameObjectMap */SparseMapSystem$WonderCommonlib.createEmpty(/* () */0)
        ];
}

export {
  getBufferMaxCount      ,
  getColorDataSize       ,
  _getColorIndex         ,
  getColor               ,
  setColor               ,
  getDefaultColor        ,
  _setDefaultTypeArrData ,
  _initBufferData        ,
  initData               ,
  
}
/* TypeArrayUtils-Wonderjs Not a pure module */
