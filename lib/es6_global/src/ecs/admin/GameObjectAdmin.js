// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as GeometrySystem$Wonderjs                   from "../component/system/geometry/GeometrySystem.js";
import * as TransformSystem$Wonderjs                  from "../component/system/transform/TransformSystem.js";
import * as BasicMaterialSystem$Wonderjs              from "../component/system/material/basic/BasicMaterialSystem.js";
import * as DeviceManagerSystem$Wonderjs              from "../../renderer/device/DeviceManagerSystem.js";
import * as LightMaterialSystem$Wonderjs              from "../component/system/material/light/LightMaterialSystem.js";
import * as GameObjectCloneCommon$Wonderjs            from "./GameObjectCloneCommon.js";
import * as GameObjectStateCommon$Wonderjs            from "./GameObjectStateCommon.js";
import * as GameObjectCreateCommon$Wonderjs           from "./GameObjectCreateCommon.js";
import * as SparseMapSystem$WonderCommonlib           from "../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";
import * as GameObjectDisposeCommon$Wonderjs          from "./GameObjectDisposeCommon.js";
import * as GameObjectAddComponentCommon$Wonderjs     from "./GameObjectAddComponentCommon.js";
import * as GameObjectGetComponentCommon$Wonderjs     from "./GameObjectGetComponentCommon.js";
import * as GameObjectHasComponentCommon$Wonderjs     from "./GameObjectHasComponentCommon.js";
import * as GameObjectDisposeComponentCommon$Wonderjs from "./GameObjectDisposeComponentCommon.js";

function getSourceInstanceComponent(uid, state) {
  return GameObjectGetComponentCommon$Wonderjs.getSourceInstanceComponent(uid, state);
}

function disposeSourceInstanceComponent(uid, component, batchDisposeGameObjectFunc, state) {
  return GameObjectDisposeComponentCommon$Wonderjs.disposeSourceInstanceComponent(uid, component, batchDisposeGameObjectFunc, state);
}

function getObjectInstanceComponent(uid, state) {
  return GameObjectGetComponentCommon$Wonderjs.getObjectInstanceComponent(uid, state);
}

function disposeObjectInstanceComponent(uid, component, state) {
  return GameObjectDisposeComponentCommon$Wonderjs.disposeObjectInstanceComponent(uid, component, state);
}

function getCameraControllerComponent(uid, state) {
  return GameObjectGetComponentCommon$Wonderjs.getCameraControllerComponent(uid, state);
}

function disposeCameraControllerComponent(uid, component, state) {
  return GameObjectDisposeComponentCommon$Wonderjs.disposeCameraControllerComponent(uid, component, state);
}

function getTransformComponent(uid, state) {
  return GameObjectGetComponentCommon$Wonderjs.getTransformComponent(uid, state);
}

function disposeTransformComponent(uid, component, state) {
  return GameObjectDisposeComponentCommon$Wonderjs.disposeTransformComponent(uid, component, state);
}

function getGeometryComponent(uid, state) {
  return GameObjectGetComponentCommon$Wonderjs.getGeometryComponent(uid, state);
}

function disposeGeometryComponent(uid, component, state) {
  return GameObjectDisposeComponentCommon$Wonderjs.disposeGeometryComponent(uid, component, state);
}

function getMeshRendererComponent(uid, state) {
  return GameObjectGetComponentCommon$Wonderjs.getMeshRendererComponent(uid, state);
}

function disposeMeshRendererComponent(uid, component, state) {
  return GameObjectDisposeComponentCommon$Wonderjs.disposeMeshRendererComponent(uid, component, state);
}

function getBasicMaterialComponent(uid, state) {
  return GameObjectGetComponentCommon$Wonderjs.getBasicMaterialComponent(uid, state);
}

function disposeBasicMaterialComponent(uid, component, state) {
  return GameObjectDisposeComponentCommon$Wonderjs.disposeBasicMaterialComponent(uid, component, state);
}

function getLightMaterialComponent(uid, state) {
  return GameObjectGetComponentCommon$Wonderjs.getLightMaterialComponent(uid, state);
}

function disposeLightMaterialComponent(uid, component, state) {
  return GameObjectDisposeComponentCommon$Wonderjs.disposeLightMaterialComponent(uid, component, state);
}

function getAmbientLightComponent(uid, state) {
  return GameObjectGetComponentCommon$Wonderjs.getAmbientLightComponent(uid, state);
}

function disposeAmbientLightComponent(uid, component, state) {
  return GameObjectDisposeComponentCommon$Wonderjs.disposeAmbientLightComponent(uid, component, state);
}

function getDirectionLightComponent(uid, state) {
  return GameObjectGetComponentCommon$Wonderjs.getDirectionLightComponent(uid, state);
}

function disposeDirectionLightComponent(uid, component, state) {
  return GameObjectDisposeComponentCommon$Wonderjs.disposeDirectionLightComponent(uid, component, state);
}

function getPointLightComponent(uid, state) {
  return GameObjectGetComponentCommon$Wonderjs.getPointLightComponent(uid, state);
}

function disposePointLightComponent(uid, component, state) {
  return GameObjectDisposeComponentCommon$Wonderjs.disposePointLightComponent(uid, component, state);
}

function create(state) {
  var match = GameObjectCreateCommon$Wonderjs.create(state);
  var uid = match[1];
  var match$1 = TransformSystem$Wonderjs.create(match[0]);
  return /* tuple */[
          GameObjectAddComponentCommon$Wonderjs.addTransformComponent(uid, match$1[1], match$1[0]),
          uid
        ];
}

function isAlive(uid, state) {
  var match = GameObjectStateCommon$Wonderjs.getGameObjectData(state);
  var disposedUidMap = match[/* disposedUidMap */2];
  var transformMap = match[/* transformMap */4];
  var match$1 = SparseMapSystem$WonderCommonlib.has(uid, disposedUidMap);
  if (match$1 !== 0) {
    return /* false */0;
  } else {
    var match$2 = SparseMapSystem$WonderCommonlib.has(uid, transformMap);
    if (match$2 !== 0) {
      return /* true */1;
    } else {
      return /* false */0;
    }
  }
}

function initGameObject(uid, state) {
  var match = GameObjectGetComponentCommon$Wonderjs.getGeometryComponent(uid, state);
  var state$1 = match ? GeometrySystem$Wonderjs.handleInitComponent(match[0], state) : state;
  var match$1 = GameObjectGetComponentCommon$Wonderjs.getBasicMaterialComponent(uid, state$1);
  var state$2 = match$1 ? BasicMaterialSystem$Wonderjs.handleInitComponent(DeviceManagerSystem$Wonderjs.unsafeGetGl(state$1), match$1[0], state$1) : state$1;
  var match$2 = GameObjectGetComponentCommon$Wonderjs.getLightMaterialComponent(uid, state$2);
  if (match$2) {
    return LightMaterialSystem$Wonderjs.handleInitComponent(DeviceManagerSystem$Wonderjs.unsafeGetGl(state$2), match$2[0], state$2);
  } else {
    return state$2;
  }
}

var hasSourceInstanceComponent = GameObjectHasComponentCommon$Wonderjs.hasSourceInstanceComponent;

var addSourceInstanceComponent = GameObjectAddComponentCommon$Wonderjs.addSourceInstanceComponent;

var hasObjectInstanceComponent = GameObjectHasComponentCommon$Wonderjs.hasObjectInstanceComponent;

var addObjectInstanceComponent = GameObjectAddComponentCommon$Wonderjs.addObjectInstanceComponent;

var hasCameraControllerComponent = GameObjectHasComponentCommon$Wonderjs.hasCameraControllerComponent;

var addCameraControllerComponent = GameObjectAddComponentCommon$Wonderjs.addCameraControllerComponent;

var hasTransformComponent = GameObjectHasComponentCommon$Wonderjs.hasTransformComponent;

var unsafeGetTransformComponent = GameObjectGetComponentCommon$Wonderjs.unsafeGetTransformComponent;

var addTransformComponent = GameObjectAddComponentCommon$Wonderjs.addTransformComponent;

var hasGeometryComponent = GameObjectHasComponentCommon$Wonderjs.hasGeometryComponent;

var unsafeGetGeometryComponent = GameObjectGetComponentCommon$Wonderjs.unsafeGetGeometryComponent;

var addGeometryComponent = GameObjectAddComponentCommon$Wonderjs.addGeometryComponent;

var hasMeshRendererComponent = GameObjectHasComponentCommon$Wonderjs.hasMeshRendererComponent;

var addMeshRendererComponent = GameObjectAddComponentCommon$Wonderjs.addMeshRendererComponent;

var hasBasicMaterialComponent = GameObjectHasComponentCommon$Wonderjs.hasBasicMaterialComponent;

var unsafeGetBasicMaterialComponent = GameObjectGetComponentCommon$Wonderjs.unsafeGetBasicMaterialComponent;

var addBasicMaterialComponent = GameObjectAddComponentCommon$Wonderjs.addBasicMaterialComponent;

var hasLightMaterialComponent = GameObjectHasComponentCommon$Wonderjs.hasLightMaterialComponent;

var unsafeGetLightMaterialComponent = GameObjectGetComponentCommon$Wonderjs.unsafeGetLightMaterialComponent;

var addLightMaterialComponent = GameObjectAddComponentCommon$Wonderjs.addLightMaterialComponent;

var hasAmbientLightComponent = GameObjectHasComponentCommon$Wonderjs.hasAmbientLightComponent;

var unsafeGetAmbientLightComponent = GameObjectGetComponentCommon$Wonderjs.unsafeGetAmbientLightComponent;

var addAmbientLightComponent = GameObjectAddComponentCommon$Wonderjs.addAmbientLightComponent;

var hasDirectionLightComponent = GameObjectHasComponentCommon$Wonderjs.hasDirectionLightComponent;

var unsafeGetDirectionLightComponent = GameObjectGetComponentCommon$Wonderjs.unsafeGetDirectionLightComponent;

var addDirectionLightComponent = GameObjectAddComponentCommon$Wonderjs.addDirectionLightComponent;

var hasPointLightComponent = GameObjectHasComponentCommon$Wonderjs.hasPointLightComponent;

var unsafeGetPointLightComponent = GameObjectGetComponentCommon$Wonderjs.unsafeGetPointLightComponent;

var addPointLightComponent = GameObjectAddComponentCommon$Wonderjs.addPointLightComponent;

var batchDispose = GameObjectDisposeCommon$Wonderjs.batchDispose;

var dispose = GameObjectDisposeCommon$Wonderjs.dispose;

var clone = GameObjectCloneCommon$Wonderjs.clone;

var deepCopyStateForRestore = GameObjectStateCommon$Wonderjs.deepCopyStateForRestore;

export {
  hasSourceInstanceComponent       ,
  getSourceInstanceComponent       ,
  addSourceInstanceComponent       ,
  disposeSourceInstanceComponent   ,
  hasObjectInstanceComponent       ,
  getObjectInstanceComponent       ,
  addObjectInstanceComponent       ,
  disposeObjectInstanceComponent   ,
  hasCameraControllerComponent     ,
  getCameraControllerComponent     ,
  addCameraControllerComponent     ,
  disposeCameraControllerComponent ,
  hasTransformComponent            ,
  getTransformComponent            ,
  unsafeGetTransformComponent      ,
  addTransformComponent            ,
  disposeTransformComponent        ,
  hasGeometryComponent             ,
  getGeometryComponent             ,
  unsafeGetGeometryComponent       ,
  addGeometryComponent             ,
  disposeGeometryComponent         ,
  hasMeshRendererComponent         ,
  getMeshRendererComponent         ,
  addMeshRendererComponent         ,
  disposeMeshRendererComponent     ,
  hasBasicMaterialComponent        ,
  getBasicMaterialComponent        ,
  unsafeGetBasicMaterialComponent  ,
  addBasicMaterialComponent        ,
  disposeBasicMaterialComponent    ,
  hasLightMaterialComponent        ,
  getLightMaterialComponent        ,
  unsafeGetLightMaterialComponent  ,
  addLightMaterialComponent        ,
  disposeLightMaterialComponent    ,
  hasAmbientLightComponent         ,
  getAmbientLightComponent         ,
  unsafeGetAmbientLightComponent   ,
  addAmbientLightComponent         ,
  disposeAmbientLightComponent     ,
  hasDirectionLightComponent       ,
  getDirectionLightComponent       ,
  unsafeGetDirectionLightComponent ,
  addDirectionLightComponent       ,
  disposeDirectionLightComponent   ,
  hasPointLightComponent           ,
  getPointLightComponent           ,
  unsafeGetPointLightComponent     ,
  addPointLightComponent           ,
  disposePointLightComponent       ,
  create                           ,
  batchDispose                     ,
  dispose                          ,
  clone                            ,
  isAlive                          ,
  initGameObject                   ,
  deepCopyStateForRestore          ,
  
}
/* GeometrySystem-Wonderjs Not a pure module */
