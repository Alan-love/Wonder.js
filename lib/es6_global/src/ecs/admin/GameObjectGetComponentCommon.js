// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Log$WonderLog                      from "../../../../../node_modules/wonder-log/lib/es6_global/src/Log.js";
import * as Contract$WonderLog                 from "../../../../../node_modules/wonder-log/lib/es6_global/src/Contract.js";
import * as StateData$Wonderjs                 from "../../core/StateData.js";
import * as ArraySystem$WonderCommonlib        from "../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArraySystem.js";
import * as GameObjectStateCommon$Wonderjs     from "./GameObjectStateCommon.js";
import * as SparseMapSystem$WonderCommonlib    from "../../../../../node_modules/wonder-commonlib/lib/es6_global/src/SparseMapSystem.js";
import * as GameObjectComponentCommon$Wonderjs from "./GameObjectComponentCommon.js";

function _unsafeGetComponent(uid, componentMap) {
  return Contract$WonderLog.ensureCheck((function (component) {
                return Contract$WonderLog.test(Log$WonderLog.buildAssertMessage("component exist", "not"), (function () {
                              return Contract$WonderLog.assertNullableExist(component);
                            }));
              }), StateData$Wonderjs.stateData[/* isDebug */1], SparseMapSystem$WonderCommonlib.unsafeGet(uid, componentMap));
}

function getSourceInstanceComponent(uid, state) {
  return GameObjectComponentCommon$Wonderjs.getComponent(uid, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* sourceInstanceMap */9]);
}

function unsafeGetSourceInstanceComponent(uid, state) {
  return _unsafeGetComponent(uid, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* sourceInstanceMap */9]);
}

function getObjectInstanceComponent(uid, state) {
  return GameObjectComponentCommon$Wonderjs.getComponent(uid, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* objectInstanceMap */10]);
}

function unsafeGetObjectInstanceComponent(uid, state) {
  return _unsafeGetComponent(uid, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* objectInstanceMap */10]);
}

function getCameraControllerComponent(uid, state) {
  return GameObjectComponentCommon$Wonderjs.getComponent(uid, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* cameraControllerMap */5]);
}

function getTransformComponent(uid, state) {
  return GameObjectComponentCommon$Wonderjs.getComponent(uid, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* transformMap */4]);
}

function unsafeGetTransformComponent(uid, state) {
  return _unsafeGetComponent(uid, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* transformMap */4]);
}

function getGeometryComponent(uid, state) {
  return GameObjectComponentCommon$Wonderjs.getComponent(uid, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* geometryMap */6]);
}

function unsafeGetGeometryComponent(uid, state) {
  return _unsafeGetComponent(uid, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* geometryMap */6]);
}

function getMeshRendererComponent(uid, state) {
  return GameObjectComponentCommon$Wonderjs.getComponent(uid, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* meshRendererMap */7]);
}

function getMaterialComponent(uid, state) {
  return GameObjectComponentCommon$Wonderjs.getComponent(uid, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* materialMap */8]);
}

function unsafeGetMaterialComponent(uid, state) {
  return _unsafeGetComponent(uid, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* materialMap */8]);
}

function _batchGetComponent(uidArray, componentMap, _) {
  return ArraySystem$WonderCommonlib.reduceOneParam((function (arr, uid) {
                var match = GameObjectComponentCommon$Wonderjs.getComponent(uid, componentMap);
                if (match) {
                  arr.push(match[0]);
                  return arr;
                } else {
                  return arr;
                }
              }), /* int array */[], uidArray);
}

function batchGetTransformComponent(uidArray, state) {
  return _batchGetComponent(uidArray, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* transformMap */4], state);
}

function batchGetMeshRendererComponent(uidArray, state) {
  return _batchGetComponent(uidArray, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* meshRendererMap */7], state);
}

function batchGetMaterialComponent(uidArray, state) {
  return _batchGetComponent(uidArray, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* materialMap */8], state);
}

function batchGetGeometryComponent(uidArray, state) {
  return _batchGetComponent(uidArray, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* geometryMap */6], state);
}

function batchGetCameraControllerComponent(uidArray, state) {
  return _batchGetComponent(uidArray, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* cameraControllerMap */5], state);
}

function batchGetSourceInstanceComponent(uidArray, state) {
  return _batchGetComponent(uidArray, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* sourceInstanceMap */9], state);
}

function batchGetObjectInstanceComponent(uidArray, state) {
  return _batchGetComponent(uidArray, GameObjectStateCommon$Wonderjs.getGameObjectData(state)[/* objectInstanceMap */10], state);
}

export {
  _unsafeGetComponent               ,
  getSourceInstanceComponent        ,
  unsafeGetSourceInstanceComponent  ,
  getObjectInstanceComponent        ,
  unsafeGetObjectInstanceComponent  ,
  getCameraControllerComponent      ,
  getTransformComponent             ,
  unsafeGetTransformComponent       ,
  getGeometryComponent              ,
  unsafeGetGeometryComponent        ,
  getMeshRendererComponent          ,
  getMaterialComponent              ,
  unsafeGetMaterialComponent        ,
  _batchGetComponent                ,
  batchGetTransformComponent        ,
  batchGetMeshRendererComponent     ,
  batchGetMaterialComponent         ,
  batchGetGeometryComponent         ,
  batchGetCameraControllerComponent ,
  batchGetSourceInstanceComponent   ,
  batchGetObjectInstanceComponent   ,
  
}
/* Log-WonderLog Not a pure module */
