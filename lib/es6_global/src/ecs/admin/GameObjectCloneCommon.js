// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Js_option                               from "../../../../../node_modules/bs-platform/lib/es6/js_option.js";
import * as Caml_array                              from "../../../../../node_modules/bs-platform/lib/es6/caml_array.js";
import * as Contract$Wonderjs                       from "../../definition/Contract.js";
import * as ArraySystem$Wonderjs                    from "../../structure/ArraySystem.js";
import * as TransformSystem$Wonderjs                from "../component/system/transform/TransformSystem.js";
import * as ArraySystem$WonderCommonlib             from "../../../../../node_modules/wonder-commonlib/lib/es6_global/src/ArraySystem.js";
import * as GameObjectCreateCommon$Wonderjs         from "./GameObjectCreateCommon.js";
import * as GameObjectGetComponentCommon$Wonderjs   from "./GameObjectGetComponentCommon.js";
import * as GameObjectHasComponentCommon$Wonderjs   from "./GameObjectHasComponentCommon.js";
import * as GameObjectCloneComponentCommon$Wonderjs from "./GameObjectCloneComponentCommon.js";

function _createGameObjectArr(countRangeArr, state) {
  return ArraySystem$WonderCommonlib.reduceOneParam((function (param, _) {
                var match = GameObjectCreateCommon$Wonderjs.create(param[0]);
                return /* tuple */[
                        match[0],
                        ArraySystem$Wonderjs.push(match[1], param[1])
                      ];
              }), /* tuple */[
              state,
              /* int array */[]
            ], countRangeArr);
}

function _setParent(clonedParentTransformArr, clonedTransformArr, state) {
  return ArraySystem$WonderCommonlib.reduceOneParami((function (transformData, clonedParentTransform, i) {
                return TransformSystem$Wonderjs.setParentNotMarkDirty(/* Some */[clonedParentTransform], Caml_array.caml_array_get(clonedTransformArr, i), transformData);
              }), TransformSystem$Wonderjs.getTransformData(state), clonedParentTransformArr);
}

function _clone(param, isShareMaterial, state) {
  var countRangeArr = param[2];
  var transform = param[1];
  var match = _createGameObjectArr(countRangeArr, state);
  var clonedGameObjectArr = match[1];
  var totalClonedGameObjectArr = ArraySystem$Wonderjs.push(clonedGameObjectArr, param[4]);
  var match$1 = GameObjectCloneComponentCommon$Wonderjs.cloneComponent(/* tuple */[
        param[0],
        transform,
        countRangeArr,
        clonedGameObjectArr
      ], isShareMaterial, match[0]);
  var clonedTransformArr = match$1[1];
  var state$1 = match$1[0];
  ArraySystem$Wonderjs.reduceState((function (state, childTransform) {
          return _clone(/* tuple */[
                      Js_option.getExn(TransformSystem$Wonderjs.getGameObject(childTransform, state)),
                      childTransform,
                      countRangeArr,
                      clonedTransformArr,
                      totalClonedGameObjectArr
                    ], isShareMaterial, state);
        }), state$1, TransformSystem$Wonderjs.unsafeGetChildren(transform, _setParent(param[3], clonedTransformArr, state$1)));
  return state$1;
}

function clone(uid, count, isShareMaterial, state) {
  Contract$Wonderjs.requireCheck((function () {
          Contract$Wonderjs.test("shouldn't clone sourceInstance gameObject", (function () {
                  return Contract$Wonderjs.assertFalse(GameObjectHasComponentCommon$Wonderjs.hasSourceInstanceComponent(uid, state));
                }));
          return Contract$Wonderjs.test("shouldn't clone objectInstance gameObject", (function () {
                        return Contract$Wonderjs.assertFalse(GameObjectHasComponentCommon$Wonderjs.hasObjectInstanceComponent(uid, state));
                      }));
        }));
  var totalClonedGameObjectArr = /* array */[];
  return /* tuple */[
          _clone(/* tuple */[
                uid,
                Js_option.getExn(GameObjectGetComponentCommon$Wonderjs.getTransformComponent(uid, state)),
                ArraySystem$Wonderjs.range(0, count - 1 | 0),
                /* int array */[],
                totalClonedGameObjectArr
              ], isShareMaterial, state),
          totalClonedGameObjectArr
        ];
}

export {
  _createGameObjectArr ,
  _setParent           ,
  _clone               ,
  clone                ,
  
}
/* ArraySystem-Wonderjs Not a pure module */
