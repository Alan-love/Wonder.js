// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as SparseMapSystem$Wonderjs from "../../structure/SparseMapSystem.js";

function getGameObjectData(state) {
  return state[/* gameObjectData */12];
}

function deepCopyStateForRestore(state) {
  var match = state[/* gameObjectData */12];
  var uid = match[/* uid */0];
  var disposeCount = match[/* disposeCount */1];
  var disposedUidMap = match[/* disposedUidMap */2];
  var aliveUidArray = match[/* aliveUidArray */3];
  var transformMap = match[/* transformMap */4];
  var cameraControllerMap = match[/* cameraControllerMap */5];
  var geometryMap = match[/* geometryMap */6];
  var meshRendererMap = match[/* meshRendererMap */7];
  var basicMaterialMap = match[/* basicMaterialMap */8];
  var lightMaterialMap = match[/* lightMaterialMap */9];
  var sourceInstanceMap = match[/* sourceInstanceMap */10];
  var objectInstanceMap = match[/* objectInstanceMap */11];
  var ambientLightMap = match[/* ambientLightMap */12];
  var directionLightMap = match[/* directionLightMap */13];
  var pointLightMap = match[/* pointLightMap */14];
  var newrecord = state.slice();
  newrecord[/* gameObjectData */12] = /* record */[
    /* uid */uid,
    /* disposeCount */disposeCount,
    /* disposedUidMap */SparseMapSystem$Wonderjs.copy(disposedUidMap),
    /* aliveUidArray */SparseMapSystem$Wonderjs.copy(aliveUidArray),
    /* transformMap */SparseMapSystem$Wonderjs.copy(transformMap),
    /* cameraControllerMap */SparseMapSystem$Wonderjs.copy(cameraControllerMap),
    /* geometryMap */SparseMapSystem$Wonderjs.copy(geometryMap),
    /* meshRendererMap */SparseMapSystem$Wonderjs.copy(meshRendererMap),
    /* basicMaterialMap */SparseMapSystem$Wonderjs.copy(basicMaterialMap),
    /* lightMaterialMap */SparseMapSystem$Wonderjs.copy(lightMaterialMap),
    /* sourceInstanceMap */SparseMapSystem$Wonderjs.copy(sourceInstanceMap),
    /* objectInstanceMap */SparseMapSystem$Wonderjs.copy(objectInstanceMap),
    /* ambientLightMap */SparseMapSystem$Wonderjs.copy(ambientLightMap),
    /* directionLightMap */SparseMapSystem$Wonderjs.copy(directionLightMap),
    /* pointLightMap */SparseMapSystem$Wonderjs.copy(pointLightMap)
  ];
  return newrecord;
}

export {
  getGameObjectData       ,
  deepCopyStateForRestore ,
  
}
/* SparseMapSystem-Wonderjs Not a pure module */
