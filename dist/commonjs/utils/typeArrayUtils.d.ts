import { Matrix4 } from "../math/Matrix4";
import { Vector3 } from "../math/Vector3";
import { Quaternion } from "../math/Quaternion";
import { Matrix3 } from "../math/Matrix3";
import { TypeArr } from "../renderer/type/dataType";
export declare const getMatrix3DataSize: () => number;
export declare const getMatrix4DataSize: () => number;
export declare const getVector3DataSize: () => number;
export declare const getQuaternionDataSize: () => number;
export declare const getSlice: (typeArr: TypeArr, startIndex: number, endIndex: number) => TypeArr;
export declare const getSubarray: (typeArr: TypeArr, startIndex: number, endIndex: number) => TypeArr;
export declare const deleteBySwapAndNotReset: (sourceIndex: number, targetIndex: number, typeArr: TypeArr) => void;
export declare const deleteBySwapAndReset: (sourceIndex: number, targetIndex: number, typeArr: TypeArr, length: number, defaultValueArr: number[]) => void;
export declare const deleteSingleValueBySwapAndReset: (sourceIndex: number, lastIndex: number, typeArr: TypeArr, resetValue: any) => void;
export declare const deleteOneItemBySwapAndReset: (sourceIndex: number, targetIndex: number, typeArr: TypeArr, defaultValue: number) => void;
export declare const set: (typeArr: TypeArr, valArr: number[] | Uint8Array | Float32Array | Uint16Array | Uint32Array, offset?: number) => void;
export declare const setMatrices3: (typeArr: Float32Array, mat: Matrix3, index: number) => void;
export declare const setMatrices: (typeArr: Float32Array, mat: Matrix4, index: number) => void;
export declare const setMatrix4ByIndex: Function;
export declare const setVectors: (typeArr: Float32Array, vec: Vector3, index: number) => void;
export declare const setVector3ByIndex: Function;
export declare const setQuaternions: (typeArr: Float32Array, qua: Quaternion, index: number) => void;
export declare const setQuaternionByIndex: Function;
export declare const swap: (typeArr: any, index1: number, index2: number, length: number) => void;
export declare const createMatrix4ByIndex: (mat: Matrix4, typeArr: Float32Array, index: number) => any;
export declare const createVector3ByIndex: (vec: Vector3, typeArr: Float32Array, index: number) => any;
export declare const fillTypeArr: Function;
export declare const setTypeArrayValue: Function;
export declare const setSingleValue: (typeArr: TypeArr, index: number, value: number) => void;
export declare const computeBufferLength: (count: number, size: number) => number;
