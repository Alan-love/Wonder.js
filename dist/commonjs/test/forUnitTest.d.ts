/// <reference types="wonder-commonlib" />
/// <reference types="wonder-frp" />
import { DomQuery as DomQueryFromCommonlib } from "wonder-commonlib/dist/commonjs/utils/DomQuery";
import { Operator } from "wonder-frp/dist/commonjs/global/Operator";
import { Map } from "immutable";
export declare const initThreeDTransformData: (GlobalTempData: any, ThreeDTransformData: any) => void;
export declare const DomQuery: typeof DomQueryFromCommonlib;
export declare const fromArray: typeof Operator.fromArray;
export declare const initTagData: (TagData: any) => void;
export declare const initGeometryData: (DataBufferConfig: any, GeometryData: any, GPUDetectData: any) => void;
export declare const initMaterialData: (TextureCacheData: any, TextureData: any, MapManagerData: any, MaterialData: any, BasicMaterialData: any, LightMaterialData: any) => void;
export declare const initWebGL1ShaderData: (ShaderDataFromSystem: any) => void;
export declare const initWebGL2ShaderData: (ShaderDataFromSystem: any) => void;
export declare const initProgramData: (ProgramDataFromSystem: any) => void;
export declare const initWebGL1LocationData: (LocationDataFromSystem: any) => void;
export declare const initWebGL2LocationData: (LocationDataFromSystem: any) => void;
export declare const initWebGL1GLSLSenderData: (GLSLSenderDataFromSystem: any) => void;
export declare const initWebGL2GLSLSenderData: (GLSLSenderDataFromSystem: any) => void;
export declare const initMeshRendererData: (MeshRendererData: any) => void;
export declare const initArrayBufferData: (ArrayBufferDataFromSystemFromSystem: any) => void;
export declare const initIndexBufferData: (IndexBufferDataFromSystem: any) => void;
export declare const initDeviceManagerData: (DeviceManagerDataFromSystem: any) => void;
export declare const initCameraControllerData: (CameraControllerData: any, PerspectiveCameraData: any, CameraData: any) => void;
export declare const initWebGL1LightData: (AmbientLightData: any, DirectionLightData: any, PointLightData: any) => void;
export declare const initWebGL2LightData: (AmbientLightData: any, DirectionLightData: any, PointLightData: any) => void;
export declare const initGameObjectData: (GameObjectData: any) => void;
export declare const initSceneData: (SceneData: any) => void;
export declare const initRenderCommandBufferData: (DataBufferConfig: any, BasicRenderCommandBufferData: any, LightRenderCommandBufferData: any) => void;
export declare const initDrawRenderCommandBufferData: (BasicDrawRenderCommandBufferDataFromSystem: any, LightDrawRenderCommandBufferDataFromSystem: any) => void;
export declare const initSendDrawRenderCommandBufferData: (SendDrawRenderCommandBufferData: any) => void;
export declare const initVaoData: (VaoDataFromSystem: any) => void;
export declare const initDeferLightPassData: (DeferAmbientLightPassDataFromSystem: any, DeferDirectionLightPassDataFromSystem: any, DeferPointLightPassDataFromSystem: any) => void;
export declare const initWebGL1GPUDetectData: (GPUDetectDataFromSystem: any) => void;
export declare const initWebGL2GPUDetectData: (GPUDetectDataFromSystem: any) => void;
export declare const initData: any;
export declare const createState: () => Map<{}, {}>;
export declare const useProgram: any;
export declare const sendWebGL1AttributeData: (gl: WebGLRenderingContext, shaderIndex: number, program: WebGLProgram, geometryIndex: number, ProgramData: any, LocationData: any, GLSLSenderData: any, GeometryData: any, ArrayBufferData: any, GPUDetectData: any, VaoData: any) => void;
export declare const disableVertexAttribArray: Function;
export declare const setGeometryIndices: Function;
export declare const setGeometryVertices: Function;
export declare const hasGeometryIndices: any;
export declare const getShaderIndex: (materialIndex: number, MaterialData: any) => any;
export declare const updateSystem: (elapsed: number, state: Map<any, any>) => any;
export declare const getNormalMatrix: Function;
export declare const getWorldToCameraMatrix: (...args: any[]) => any;
export declare const getImageData: (source: HTMLImageElement, width: number, height: number, DomQuery: any) => any;
export declare const hasDiffuseMap: (index: number, LightMaterialData: any) => boolean;
export declare const hasSpecularMap: (index: number, LightMaterialData: any) => boolean;
