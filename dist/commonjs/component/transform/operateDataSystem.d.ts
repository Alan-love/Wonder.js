import { Matrix4 } from "../../math/Matrix4";
import { Quaternion } from "../../math/Quaternion";
import { Vector3 } from "../../math/Vector3";
import { ThreeDTransform } from "./ThreeDTransform";
export declare const swap: Function;
export declare const swapTransformMapData: Function;
export declare const swapTypeArrData: (index1: number, index2: number, ThreeDTransformData: any) => any;
export declare const moveToIndex: Function;
export declare const moveMapDataToIndex: Function;
export declare const moveTypeArrDataToIndex: (sourceIndex: number, targetIndex: number, ThreeDTransformData: any) => any;
export declare const setTransformDataInTypeArr: (index: number, mat: Matrix4, qua: Quaternion, positionVec: Vector3, scaleVec: Vector3, ThreeDTransformData: any) => void;
export declare const setLocalToWorldMatricesData: (mat: Matrix4, mat4IndexInArrayBuffer: number, ThreeDTransformData: any) => void;
export declare const setLocalPositionData: (position: Vector3, vec3IndexInArrayBuffer: number, ThreeDTransformData: any) => any;
export declare const setLocalRotationData: (qua: Quaternion, quaIndexInArrayBuffer: number, ThreeDTransformData: any) => any;
export declare const setLocalScaleData: (scale: Vector3, vec3IndexInArrayBuffer: number, ThreeDTransformData: any) => any;
export declare const setPositionData: (index: number, parent: ThreeDTransform, vec3IndexInArrayBuffer: number, position: Vector3, GlobalTempData: any, ThreeDTransformData: any) => void;
export declare const getMatrix4DataIndexInArrayBuffer: (index: number) => number;
export declare const getVector3DataIndexInArrayBuffer: (index: number) => number;
export declare const getQuaternionDataIndexInArrayBuffer: (index: number) => number;
