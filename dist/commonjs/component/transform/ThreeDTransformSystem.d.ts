import { BatchTransformData, ThreeDTransform } from "./ThreeDTransform";
import { Map as MapImmutable } from "immutable";
import { GameObject } from "../../core/entityObject/gameObject/GameObject";
import { IUIdEntity } from "../../core/entityObject/gameObject/IUIdEntity";
export declare const addAddComponentHandle: (_class: any) => void;
export declare const addDisposeHandle: (_class: any) => void;
export declare const create: Function;
export declare const checkShouldAlive: (component: ThreeDTransform, ThreeDTransformData: any) => void;
export declare const init: (GlobalTempData: any, ThreeDTransformData: any, state: MapImmutable<any, any>) => any;
export declare const addComponent: (transform: ThreeDTransform, gameObject: GameObject) => any;
export declare const isAlive: (transform: ThreeDTransform, ThreeDTransformData: any) => boolean;
export declare const isNotAlive: (transform: ThreeDTransform, ThreeDTransformData: any) => boolean;
export declare const disposeComponent: (transform: ThreeDTransform) => void;
export declare const getGameObject: (uid: number, ThreeDTransformData: any) => IUIdEntity;
export declare const getParent: (transform: ThreeDTransform, ThreeDTransformData: any) => any;
export declare const setParent: (parent: ThreeDTransform, child: ThreeDTransform, ThreeDTransformData: any) => any;
export declare const getLocalToWorldMatrix: Function;
export declare const getPosition: Function;
export declare const getNormalMatrix: Function;
export declare const setPosition: Function;
export declare const setBatchDatas: (batchData: BatchTransformData[], GlobalTempData: any, ThreeDTransformData: any) => any;
export declare const getLocalPosition: Function;
export declare const setLocalPosition: Function;
export declare const update: (elapsed: number, GlobalTempData: any, ThreeDTransformData: any, state: MapImmutable<any, any>) => any;
export declare const getTempLocalToWorldMatrix: (transform: ThreeDTransform, ThreeDTransformData: any) => any;
export declare const initData: (GlobalTempData: any, ThreeDTransformData: any) => void;
