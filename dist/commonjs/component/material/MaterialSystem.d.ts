import { Color } from "../../structure/Color";
import { Material } from "./Material";
import { GameObject } from "../../core/entityObject/gameObject/GameObject";
import { Shader } from "../../renderer/shader/Shader";
export declare var addAddComponentHandle: (_class: any) => void;
export declare var addDisposeHandle: (_class: any) => void;
export declare var addInitHandle: (_class: any) => void;
export declare var create: Function;
export declare var init: Function;
export declare var initMaterial: any;
export declare var clearWorkerInitList: any;
export declare var hasNewInitedMaterial: (MaterialData: any) => boolean;
export declare var getShaderIndex: (materialIndex: number, MaterialData: any) => any;
export declare var getShaderIndexFromTable: Function;
export declare var setShaderIndex: (materialIndex: number, shader: Shader, MaterialData: any) => void;
export declare var getColor: (materialIndex: number, MaterialData: any) => Color;
export declare var getColorArr3: (materialIndex: number, MaterialMaterialDataFromSystem: any) => any[];
export declare var setColor: (materialIndex: number, color: Color, MaterialData: any) => void;
export declare var getOpacity: (materialIndex: number, MaterialDataFromSystem: any) => any;
export declare var setOpacity: Function;
export declare var getAlphaTest: (materialIndex: number, MaterialDataFromSystem: any) => any;
export declare var setAlphaTest: Function;
export declare var addComponent: (component: Material, gameObject: GameObject) => void;
export declare var disposeComponent: Function;
export declare var getGameObject: (index: number, Data: any) => GameObject;
export declare var isTestAlpha: (alphaTest: number) => boolean;
export declare var initData: (MaterialData: any) => void;
