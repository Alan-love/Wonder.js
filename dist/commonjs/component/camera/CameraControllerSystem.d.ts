import { CameraController } from "./CameraController";
import { GameObject } from "../../core/entityObject/gameObject/GameObject";
import { Map } from "immutable";
export declare var addAddComponentHandle: (_class: any) => void;
export declare var addDisposeHandle: (_class: any) => void;
export declare var create: Function;
export declare var addToDirtyList: Function;
export declare var init: (PerspectiveCameraData: any, CameraData: any, CameraControllerData: any, state: Map<any, any>) => Map<any, any>;
export declare var initCameraController: (state: Map<any, any>, index: number, PerspectiveCameraData: any, CameraData: any) => void;
export declare var update: (PerspectiveCameraData: any, CameraData: any, CameraControllerData: any) => void;
export declare var addComponent: (component: CameraController, gameObject: GameObject) => void;
export declare var disposeComponent: (component: CameraController) => void;
export declare var getGameObject: (index: number, CameraControllerData: any) => GameObject;
export declare var getWorldToCameraMatrix: (...args: any[]) => any;
export declare var getPMatrix: (index: number, CameraData: any) => any;
export declare var initData: (CameraControllerData: any, PerspectiveCameraData: any, CameraData: any) => void;
