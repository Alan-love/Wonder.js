import { Vector4 } from "./Vector4";
import { Matrix3 } from "./Matrix3";
import { Matrix4 } from "./Matrix4";
export declare class Vector3 {
    static up: any;
    static forward: any;
    static right: any;
    static create(x: number, y: number, z: number): Vector3;
    static create(): Vector3;
    constructor(x: number, y: number, z: number);
    constructor();
    x: number;
    y: number;
    z: number;
    values: Float32Array;
    normalize(): Vector3;
    isZero(): boolean;
    scale(scalar: number): any;
    scale(x: number, y: number, z: number): any;
    set(v: Vector3): any;
    set(x: number, y: number, z: number): any;
    sub(v: Vector3): Vector3;
    sub2(v1: Vector3, v2: Vector3): this;
    add(v: Vector3): this;
    add2(v1: Vector3, v2: Vector3): this;
    mul(v: Vector3): this;
    mul2(v1: Vector3, v2: Vector3): this;
    reverse(): Vector3;
    clone(): Vector3;
    toVector4(): Vector4;
    length(): any;
    cross(lhs: Vector3, rhs: Vector3): this;
    lerp(lhs: Vector3, rhs: Vector3, alpha: number): this;
    dot(rhs: any): number;
    calAngleCos(v1: Vector3): number;
    min(v: Vector3): this;
    max(v: Vector3): this;
    isEqual(v: Vector3): boolean;
    toArray(): number[];
    applyMatrix3(m: Matrix3): this;
    applyMatrix4(m: Matrix4): this;
    distanceTo(v: Vector3): any;
    distanceToSquared(v: Vector3): number;
}
