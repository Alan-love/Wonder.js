import { Entity } from "../../core/Entity";
import { EVariableType } from "../shader/variable/EVariableType";
import { ArrayBuffer } from "../buffer/ArrayBuffer";
import { Shader } from "../shader/shader/Shader";
export declare class Program extends Entity {
    static create(): Program;
    glProgram: any;
    private _getAttribLocationCache;
    private _sender;
    use(): void;
    getAttribLocation(name: string): any;
    getUniformLocation(name: string): any;
    sendUniformData(name: string, type: EVariableType, data: any): void;
    sendAttributeBuffer(name: string, type: EVariableType, buffer: ArrayBuffer): void;
    sendStructureData(name: string, type: EVariableType, data: any): void;
    sendFloat1(name: string, data: any): void;
    sendFloat2(name: string, data: any): void;
    sendFloat3(name: string, data: any): void;
    sendFloat4(name: string, data: any): void;
    sendVector2(name: string, data: any): void;
    sendVector3(name: string, data: any): void;
    sendVector4(name: string, data: any): void;
    sendColor3(name: string, data: any): void;
    sendNum1(name: string, data: any): void;
    sendMatrix3(name: string, data: any): void;
    sendMatrix4(name: string, data: any): void;
    sendMatrix4Array(name: string, data: Float32Array): void;
    sendSampleArray(name: string, data: any): void;
    sendAllBufferData(): void;
    initWithShader(shader: Shader): this;
    dispose(): void;
    private _clearAllCache();
}
