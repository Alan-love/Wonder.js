import { SendUniformDataGLSLSenderDataMap } from "../../../../type/utilsType";
import { UniformCacheMap, UniformLocationMap } from "../../../../type/dataType";
export declare const getTextureIndexDataSize: () => number;
export declare const getTextureCountDataSize: () => number;
export declare const bindAndUpdate: Function;
export declare const sendData: (gl: WebGLRenderingContext, mapCount: number, startTextureIndex: number, definedStartTextureUnitIndex: number, shaderIndex: number, program: WebGLProgram, glslSenderData: SendUniformDataGLSLSenderDataMap, uniformLocationMap: UniformLocationMap, uniformCacheMap: UniformCacheMap, directlySendUniformData: Function, TextureData: any, MapManagerData: any) => void;
export declare const getMapCount: (materialIndex: number, MapManagerDataFromSystem: any) => any;
export declare const getMaterialTextures: (materialIndex: number, MapManagerDataFromSystem: any) => any;
export declare const getBufferCount: () => number;
export declare const getMaxTextureCount: () => number;
export declare const createTypeArrays: (buffer: any, count: number, MapManagerDataFromSystem: any) => number;
export declare const getStartTextureIndex: Function;
