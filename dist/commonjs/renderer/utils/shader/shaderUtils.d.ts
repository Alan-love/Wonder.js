import { Map } from "immutable";
import { IWebGL2ShaderLibContentGenerator } from "../../worker/webgl2/both_file/data/shaderLib_generator";
import { IWebGL1ShaderLibContentGenerator } from "../../worker/webgl1/both_file/data/shaderLib_generator";
import { IMaterialConfig, IShaderLibItem } from "../../data/material_config_interface";
import { InitShaderDataMap } from "../../type/utilsType";
import { WebGL1InitShaderFuncDataMap } from "../../webgl1/type/utilsType";
import { IWebGL2InitShaderFuncDataMap } from "../../webgl2/utils/worker/render_file/interface/IUtils";
export declare var initMaterialShader: (state: Map<any, any>, materialIndex: number, shaderName: string, material_config: IMaterialConfig, shaderLib_generator: IWebGL1ShaderLibContentGenerator | IWebGL2ShaderLibContentGenerator, init: Function, initShaderFuncDataMap: WebGL1InitShaderFuncDataMap | IWebGL2InitShaderFuncDataMap, initShaderDataMap: InitShaderDataMap) => number;
export declare var initNoMaterialShader: (state: Map<any, any>, shaderName: string, materialShaderLibConfig: (string | IShaderLibItem)[], material_config: IMaterialConfig, shaderLib_generator: IWebGL1ShaderLibContentGenerator | IWebGL2ShaderLibContentGenerator, init: Function, initShaderFuncDataMap: WebGL1InitShaderFuncDataMap | IWebGL2InitShaderFuncDataMap, initShaderDataMap: InitShaderDataMap) => number;
export declare var genereateShaderIndex: (ShaderDataFromSystem: any) => any;
