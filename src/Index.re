let getBasicCameraViewWorldToCameraMatrix = BasicCameraViewAPI.getBasicCameraViewWorldToCameraMatrix;

let unsafeGetGameObjectBasicCameraView = BasicCameraViewAPI.unsafeGetGameObjectBasicCameraView;

let createBasicCameraView = BasicCameraViewAPI.createBasicCameraView;

let unsafeGetBoxGeometryGameObject = BoxGeometryAPI.unsafeGetBoxGeometryGameObject;

let unsafeGetBoxGeometryConfigData = BoxGeometryAPI.unsafeGetBoxGeometryConfigData;

let setBoxGeometryIndices = BoxGeometryAPI.setBoxGeometryIndices;

let unsafeGetBoxGeometryIndices = BoxGeometryAPI.unsafeGetBoxGeometryIndices;

let setBoxGeometryNormals = BoxGeometryAPI.setBoxGeometryNormals;

let unsafeGetBoxGeometryNormals = BoxGeometryAPI.unsafeGetBoxGeometryNormals;

let setBoxGeometryVertices = BoxGeometryAPI.setBoxGeometryVertices;

let unsafeGetBoxGeometryVertices = BoxGeometryAPI.unsafeGetBoxGeometryVertices;

let getBoxGeometryDrawMode = BoxGeometryAPI.getBoxGeometryDrawMode;

let setBoxGeometryConfigData = BoxGeometryAPI.setBoxGeometryConfigData;

let createBoxGeometry = BoxGeometryAPI.createBoxGeometry;

let hasGameObjectLightMaterialComponent = GameObjectAPI.hasGameObjectLightMaterialComponent;

let unsafeGetGameObjectLightMaterialComponent = GameObjectAPI.unsafeGetGameObjectLightMaterialComponent;

let disposeGameObjectLightMaterialComponent = GameObjectAPI.disposeGameObjectLightMaterialComponent;

let addGameObjectLightMaterialComponent = GameObjectAPI.addGameObjectLightMaterialComponent;

let hasGameObjectBasicMaterialComponent = GameObjectAPI.hasGameObjectBasicMaterialComponent;

let unsafeGetGameObjectBasicMaterialComponent = GameObjectAPI.unsafeGetGameObjectBasicMaterialComponent;

let disposeGameObjectBasicMaterialComponent = GameObjectAPI.disposeGameObjectBasicMaterialComponent;

let addGameObjectBasicMaterialComponent = GameObjectAPI.addGameObjectBasicMaterialComponent;

let hasGameObjectBoxGeometryComponent = GameObjectAPI.hasGameObjectBoxGeometryComponent;

let unsafeGetGameObjectBoxGeometryComponent = GameObjectAPI.unsafeGetGameObjectBoxGeometryComponent;

let disposeGameObjectBoxGeometryComponent = GameObjectAPI.disposeGameObjectBoxGeometryComponent;

let addGameObjectBoxGeometryComponent = GameObjectAPI.addGameObjectBoxGeometryComponent;

let hasGameObjectTransformComponent = GameObjectAPI.hasGameObjectTransformComponent;

let unsafeGetGameObjectTransformComponent = GameObjectAPI.unsafeGetGameObjectTransformComponent;

let disposeGameObjectTransformComponent = GameObjectAPI.disposeGameObjectTransformComponent;

let addGameObjectTransformComponent = GameObjectAPI.addGameObjectTransformComponent;

let hasGameObjectPerspectiveCameraProjectionComponent = GameObjectAPI.hasGameObjectPerspectiveCameraProjectionComponent;

let unsafeGetGameObjectPerspectiveCameraProjectionComponent = GameObjectAPI.unsafeGetGameObjectPerspectiveCameraProjectionComponent;

let disposeGameObjectPerspectiveCameraProjectionComponent = GameObjectAPI.disposeGameObjectPerspectiveCameraProjectionComponent;

let addGameObjectPerspectiveCameraProjectionComponent = GameObjectAPI.addGameObjectPerspectiveCameraProjectionComponent;

let hasGameObjectBasicCameraViewComponent = GameObjectAPI.hasGameObjectBasicCameraViewComponent;

let unsafeGetGameObjectBasicCameraViewComponent = GameObjectAPI.unsafeGetGameObjectBasicCameraViewComponent;

let disposeGameObjectBasicCameraViewComponent = GameObjectAPI.disposeGameObjectBasicCameraViewComponent;

let addGameObjectBasicCameraViewComponent = GameObjectAPI.addGameObjectBasicCameraViewComponent;

let createGameObject = GameObjectAPI.createGameObject;

let setBasicMaterialColor = BasicMaterialAPI.setBasicMaterialColor;

let unsafeGetBasicMaterialColor = BasicMaterialAPI.unsafeGetBasicMaterialColor;

let unsafeGetBasicMaterialGameObject = BasicMaterialAPI.unsafeGetBasicMaterialGameObject;

let createBasicMaterial = BasicMaterialAPI.createBasicMaterial;

let setLightMaterialShininess = LightMaterialAPI.setLightMaterialShininess;

let unsafeGetLightMaterialShininess = LightMaterialAPI.unsafeGetLightMaterialShininess;

let setLightMaterialSpecularColor = LightMaterialAPI.setLightMaterialSpecularColor;

let unsafeGetLightMaterialSpecularColor = LightMaterialAPI.unsafeGetLightMaterialSpecularColor;

let setLightMaterialDiffuseColor = LightMaterialAPI.setLightMaterialDiffuseColor;

let unsafeGetLightMaterialDiffuseColor = LightMaterialAPI.unsafeGetLightMaterialDiffuseColor;

let unsafeGetLightMaterialGameObject = LightMaterialAPI.unsafeGetLightMaterialGameObject;

let createLightMaterial = LightMaterialAPI.createLightMaterial;

let setPerspectiveCameraFar = PerspectiveCameraProjectionAPI.setPerspectiveCameraFar;

let unsafeGetPerspectiveCameraFar = PerspectiveCameraProjectionAPI.unsafeGetPerspectiveCameraFar;

let setPerspectiveCameraNear = PerspectiveCameraProjectionAPI.setPerspectiveCameraNear;

let unsafeGetPerspectiveCameraNear = PerspectiveCameraProjectionAPI.unsafeGetPerspectiveCameraNear;

let setPerspectiveCameraAspect = PerspectiveCameraProjectionAPI.setPerspectiveCameraAspect;

let unsafeGetPerspectiveCameraAspect = PerspectiveCameraProjectionAPI.unsafeGetPerspectiveCameraAspect;

let setPerspectiveCameraFovy = PerspectiveCameraProjectionAPI.setPerspectiveCameraFovy;

let unsafeGetPerspectiveCameraFovy = PerspectiveCameraProjectionAPI.unsafeGetPerspectiveCameraFovy;

let unsafeGetPerspectiveCameraProjectionGameObject = PerspectiveCameraProjectionAPI.unsafeGetPerspectiveCameraProjectionGameObject;

let unsafeGetPerspectiveCameraProjectionPMatrix = PerspectiveCameraProjectionAPI.unsafeGetPerspectiveCameraProjectionPMatrix;

let createPerspectiveCameraProjection = PerspectiveCameraProjectionAPI.createPerspectiveCameraProjection;

let setCurrentCameraGameObject = SceneAPI.setCurrentCameraGameObject;

let getCurrentCameraGameObject = SceneAPI.getCurrentCameraGameObject;

let setTransformPosition = TransformAPI.setTransformPosition;

let getTransformPosition = TransformAPI.getTransformPosition;

let setTransformLocalPosition = TransformAPI.setTransformLocalPosition;

let getTransformLocalPosition = TransformAPI.getTransformLocalPosition;

let unsafeGetTransformChildren = TransformAPI.unsafeGetTransformChildren;

let setTransformParentKeepOrder = TransformAPI.setTransformParentKeepOrder;

let setTransformParent = TransformAPI.setTransformParent;

let unsafeGetTransformParent = TransformAPI.unsafeGetTransformParent;

let unsafeGetTransformGameObject = TransformAPI.unsafeGetTransformGameObject;

let createTransform = TransformAPI.createTransform;

let load = LoaderManager.load;

let loopBody = Director.loopBody;

let initDirector = Director.initDirector;

let startDirector = Director.startDirector;

let setState = State.setState;

let getState = State.getState;

let getStateData = State.getStateData;

let restoreState = State.restoreState;

let deepCopyForRestore = State.deepCopyForRestore;

let getFps = TimeController.getFps;

let getGameTime = TimeController.getGameTime;

let removeNoWorkerLoopJob = Job.removeNoWorkerLoopJob;

let removeNoWorkerInitJob = Job.removeNoWorkerInitJob;

let addNoWorkerLoopJob = Job.addNoWorkerLoopJob;

let addNoWorkerInitJob = Job.addNoWorkerInitJob;

let cloneGameObject = GameObject.cloneGameObject;

let batchDisposeGameObject = GameObject.batchDisposeGameObject;

let initGameObject = GameObject.initGameObject;

let disposeGameObject = GameObject.disposeGameObject;

let isGameObjectAlive = GameObject.isGameObjectAlive;

let hasGameObjectPointLightComponent = GameObject.hasGameObjectPointLightComponent;

let getGameObjectPointLightComponent = GameObject.getGameObjectPointLightComponent;

let disposeGameObjectPointLightComponent = GameObject.disposeGameObjectPointLightComponent;

let addGameObjectPointLightComponent = GameObject.addGameObjectPointLightComponent;

let hasGameObjectDirectionLightComponent = GameObject.hasGameObjectDirectionLightComponent;

let getGameObjectDirectionLightComponent = GameObject.getGameObjectDirectionLightComponent;

let disposeGameObjectDirectionLightComponent = GameObject.disposeGameObjectDirectionLightComponent;

let addGameObjectDirectionLightComponent = GameObject.addGameObjectDirectionLightComponent;

let hasGameObjectAmbientLightComponent = GameObject.hasGameObjectAmbientLightComponent;

let getGameObjectAmbientLightComponent = GameObject.getGameObjectAmbientLightComponent;

let disposeGameObjectAmbientLightComponent = GameObject.disposeGameObjectAmbientLightComponent;

let addGameObjectAmbientLightComponent = GameObject.addGameObjectAmbientLightComponent;

let disposeGameObjectObjectInstanceComponent = GameObject.disposeGameObjectObjectInstanceComponent;

let getGameObjectObjectInstanceComponent = GameObject.getGameObjectObjectInstanceComponent;

let addGameObjectObjectInstanceComponent = GameObject.addGameObjectObjectInstanceComponent;

let disposeGameObjectSourceInstanceComponent = GameObject.disposeGameObjectSourceInstanceComponent;

let hasGameObjectSourceInstanceComponent = GameObject.hasGameObjectSourceInstanceComponent;

let getGameObjectSourceInstanceComponent = GameObject.getGameObjectSourceInstanceComponent;

let addGameObjectSourceInstanceComponent = GameObject.addGameObjectSourceInstanceComponent;

let hasGameObjectMeshRendererComponent = GameObject.hasGameObjectMeshRendererComponent;

let getGameObjectMeshRendererComponent = GameObject.getGameObjectMeshRendererComponent;

let disposeGameObjectMeshRendererComponent = GameObject.disposeGameObjectMeshRendererComponent;

let addGameObjectMeshRendererComponent = GameObject.addGameObjectMeshRendererComponent;

let markSourceInstanceModelMatrixIsStatic = SourceInstance.markSourceInstanceModelMatrixIsStatic;

let getSourceInstanceObjectInstanceArray = SourceInstance.getSourceInstanceObjectInstanceArray;

let createSourceInstanceObjectInstance = SourceInstance.createSourceInstanceObjectInstance;

let createSourceInstance = SourceInstance.createSourceInstance;

let setAmbientLightColor = AmbientLight.setAmbientLightColor;

let getAmbientLightColor = AmbientLight.getAmbientLightColor;

let getAmbientLightGameObject = AmbientLight.getAmbientLightGameObject;

let createAmbientLight = AmbientLight.createAmbientLight;

let setDirectionLightIntensity = DirectionLight.setDirectionLightIntensity;

let getDirectionLightIntensity = DirectionLight.getDirectionLightIntensity;

let setDirectionLightColor = DirectionLight.setDirectionLightColor;

let getDirectionLightColor = DirectionLight.getDirectionLightColor;

let getDirectionLightGameObject = DirectionLight.getDirectionLightGameObject;

let createDirectionLight = DirectionLight.createDirectionLight;

let setPointLightRangeLevel = PointLight.setPointLightRangeLevel;

let setPointLightRange = PointLight.setPointLightRange;

let getPointLightRange = PointLight.getPointLightRange;

let setPointLightQuadratic = PointLight.setPointLightQuadratic;

let getPointLightQuadratic = PointLight.getPointLightQuadratic;

let setPointLightLinear = PointLight.setPointLightLinear;

let getPointLightLinear = PointLight.getPointLightLinear;

let setPointLightConstant = PointLight.setPointLightConstant;

let getPointLightConstant = PointLight.getPointLightConstant;

let setPointLightIntensity = PointLight.setPointLightIntensity;

let getPointLightIntensity = PointLight.getPointLightIntensity;

let setPointLightColor = PointLight.setPointLightColor;

let getPointLightColor = PointLight.getPointLightColor;

let getPointLightGameObject = PointLight.getPointLightGameObject;

let createPointLight = PointLight.createPointLight;

let getMeshRendererGameObject = MeshRenderer.getMeshRendererGameObject;

let createMeshRenderer = MeshRenderer.createMeshRenderer;

let getBasicCameraViewWorldToCameraMatrix = BasicCameraViewAPI.getBasicCameraViewWorldToCameraMatrix;

let unsafeGetGameObjectBasicCameraView = BasicCameraViewAPI.unsafeGetGameObjectBasicCameraView;

let createBasicCameraView = BasicCameraViewAPI.createBasicCameraView;

let unsafeGetBoxGeometryGameObject = BoxGeometryAPI.unsafeGetBoxGeometryGameObject;

let unsafeGetBoxGeometryConfigData = BoxGeometryAPI.unsafeGetBoxGeometryConfigData;

let setBoxGeometryIndices = BoxGeometryAPI.setBoxGeometryIndices;

let unsafeGetBoxGeometryIndices = BoxGeometryAPI.unsafeGetBoxGeometryIndices;

let setBoxGeometryNormals = BoxGeometryAPI.setBoxGeometryNormals;

let unsafeGetBoxGeometryNormals = BoxGeometryAPI.unsafeGetBoxGeometryNormals;

let setBoxGeometryVertices = BoxGeometryAPI.setBoxGeometryVertices;

let unsafeGetBoxGeometryVertices = BoxGeometryAPI.unsafeGetBoxGeometryVertices;

let getBoxGeometryDrawMode = BoxGeometryAPI.getBoxGeometryDrawMode;

let setBoxGeometryConfigData = BoxGeometryAPI.setBoxGeometryConfigData;

let createBoxGeometry = BoxGeometryAPI.createBoxGeometry;

let hasGameObjectLightMaterialComponent = GameObjectAPI.hasGameObjectLightMaterialComponent;

let unsafeGetGameObjectLightMaterialComponent = GameObjectAPI.unsafeGetGameObjectLightMaterialComponent;

let disposeGameObjectLightMaterialComponent = GameObjectAPI.disposeGameObjectLightMaterialComponent;

let addGameObjectLightMaterialComponent = GameObjectAPI.addGameObjectLightMaterialComponent;

let hasGameObjectBasicMaterialComponent = GameObjectAPI.hasGameObjectBasicMaterialComponent;

let unsafeGetGameObjectBasicMaterialComponent = GameObjectAPI.unsafeGetGameObjectBasicMaterialComponent;

let disposeGameObjectBasicMaterialComponent = GameObjectAPI.disposeGameObjectBasicMaterialComponent;

let addGameObjectBasicMaterialComponent = GameObjectAPI.addGameObjectBasicMaterialComponent;

let hasGameObjectBoxGeometryComponent = GameObjectAPI.hasGameObjectBoxGeometryComponent;

let unsafeGetGameObjectBoxGeometryComponent = GameObjectAPI.unsafeGetGameObjectBoxGeometryComponent;

let disposeGameObjectBoxGeometryComponent = GameObjectAPI.disposeGameObjectBoxGeometryComponent;

let addGameObjectBoxGeometryComponent = GameObjectAPI.addGameObjectBoxGeometryComponent;

let hasGameObjectTransformComponent = GameObjectAPI.hasGameObjectTransformComponent;

let unsafeGetGameObjectTransformComponent = GameObjectAPI.unsafeGetGameObjectTransformComponent;

let disposeGameObjectTransformComponent = GameObjectAPI.disposeGameObjectTransformComponent;

let addGameObjectTransformComponent = GameObjectAPI.addGameObjectTransformComponent;

let hasGameObjectPerspectiveCameraProjectionComponent = GameObjectAPI.hasGameObjectPerspectiveCameraProjectionComponent;

let unsafeGetGameObjectPerspectiveCameraProjectionComponent = GameObjectAPI.unsafeGetGameObjectPerspectiveCameraProjectionComponent;

let disposeGameObjectPerspectiveCameraProjectionComponent = GameObjectAPI.disposeGameObjectPerspectiveCameraProjectionComponent;

let addGameObjectPerspectiveCameraProjectionComponent = GameObjectAPI.addGameObjectPerspectiveCameraProjectionComponent;

let hasGameObjectBasicCameraViewComponent = GameObjectAPI.hasGameObjectBasicCameraViewComponent;

let unsafeGetGameObjectBasicCameraViewComponent = GameObjectAPI.unsafeGetGameObjectBasicCameraViewComponent;

let disposeGameObjectBasicCameraViewComponent = GameObjectAPI.disposeGameObjectBasicCameraViewComponent;

let addGameObjectBasicCameraViewComponent = GameObjectAPI.addGameObjectBasicCameraViewComponent;

let createGameObject = GameObjectAPI.createGameObject;

let setPerspectiveCameraFar = PerspectiveCameraProjectionAPI.setPerspectiveCameraFar;

let unsafeGetPerspectiveCameraFar = PerspectiveCameraProjectionAPI.unsafeGetPerspectiveCameraFar;

let setPerspectiveCameraNear = PerspectiveCameraProjectionAPI.setPerspectiveCameraNear;

let unsafeGetPerspectiveCameraNear = PerspectiveCameraProjectionAPI.unsafeGetPerspectiveCameraNear;

let setPerspectiveCameraAspect = PerspectiveCameraProjectionAPI.setPerspectiveCameraAspect;

let unsafeGetPerspectiveCameraAspect = PerspectiveCameraProjectionAPI.unsafeGetPerspectiveCameraAspect;

let setPerspectiveCameraFovy = PerspectiveCameraProjectionAPI.setPerspectiveCameraFovy;

let unsafeGetPerspectiveCameraFovy = PerspectiveCameraProjectionAPI.unsafeGetPerspectiveCameraFovy;

let unsafeGetPerspectiveCameraProjectionGameObject = PerspectiveCameraProjectionAPI.unsafeGetPerspectiveCameraProjectionGameObject;

let unsafeGetPerspectiveCameraProjectionPMatrix = PerspectiveCameraProjectionAPI.unsafeGetPerspectiveCameraProjectionPMatrix;

let createPerspectiveCameraProjection = PerspectiveCameraProjectionAPI.createPerspectiveCameraProjection;

let setCurrentCameraGameObject = SceneAPI.setCurrentCameraGameObject;

let getCurrentCameraGameObject = SceneAPI.getCurrentCameraGameObject;

let setTransformPosition = TransformAPI.setTransformPosition;

let getTransformPosition = TransformAPI.getTransformPosition;

let setTransformLocalPosition = TransformAPI.setTransformLocalPosition;

let getTransformLocalPosition = TransformAPI.getTransformLocalPosition;

let unsafeGetTransformChildren = TransformAPI.unsafeGetTransformChildren;

let setTransformParentKeepOrder = TransformAPI.setTransformParentKeepOrder;

let setTransformParent = TransformAPI.setTransformParent;

let unsafeGetTransformParent = TransformAPI.unsafeGetTransformParent;

let unsafeGetTransformGameObject = TransformAPI.unsafeGetTransformGameObject;

let createTransform = TransformAPI.createTransform;

let load = LoaderManager.load;

let loopBody = Director.loopBody;

let initDirector = Director.initDirector;

let startDirector = Director.startDirector;

let setState = State.setState;

let getState = State.getState;

let getStateData = State.getStateData;

let restoreState = State.restoreState;

let deepCopyForRestore = State.deepCopyForRestore;

let getFps = TimeController.getFps;

let getGameTime = TimeController.getGameTime;

let removeNoWorkerLoopJob = Job.removeNoWorkerLoopJob;

let removeNoWorkerInitJob = Job.removeNoWorkerInitJob;

let addNoWorkerLoopJob = Job.addNoWorkerLoopJob;

let addNoWorkerInitJob = Job.addNoWorkerInitJob;

let cloneGameObject = GameObject.cloneGameObject;

let batchDisposeGameObject = GameObject.batchDisposeGameObject;

let initGameObject = GameObject.initGameObject;

let disposeGameObject = GameObject.disposeGameObject;

let isGameObjectAlive = GameObject.isGameObjectAlive;

let hasGameObjectPointLightComponent = GameObject.hasGameObjectPointLightComponent;

let getGameObjectPointLightComponent = GameObject.getGameObjectPointLightComponent;

let disposeGameObjectPointLightComponent = GameObject.disposeGameObjectPointLightComponent;

let addGameObjectPointLightComponent = GameObject.addGameObjectPointLightComponent;

let hasGameObjectDirectionLightComponent = GameObject.hasGameObjectDirectionLightComponent;

let getGameObjectDirectionLightComponent = GameObject.getGameObjectDirectionLightComponent;

let disposeGameObjectDirectionLightComponent = GameObject.disposeGameObjectDirectionLightComponent;

let addGameObjectDirectionLightComponent = GameObject.addGameObjectDirectionLightComponent;

let hasGameObjectAmbientLightComponent = GameObject.hasGameObjectAmbientLightComponent;

let getGameObjectAmbientLightComponent = GameObject.getGameObjectAmbientLightComponent;

let disposeGameObjectAmbientLightComponent = GameObject.disposeGameObjectAmbientLightComponent;

let addGameObjectAmbientLightComponent = GameObject.addGameObjectAmbientLightComponent;

let disposeGameObjectObjectInstanceComponent = GameObject.disposeGameObjectObjectInstanceComponent;

let getGameObjectObjectInstanceComponent = GameObject.getGameObjectObjectInstanceComponent;

let addGameObjectObjectInstanceComponent = GameObject.addGameObjectObjectInstanceComponent;

let disposeGameObjectSourceInstanceComponent = GameObject.disposeGameObjectSourceInstanceComponent;

let hasGameObjectSourceInstanceComponent = GameObject.hasGameObjectSourceInstanceComponent;

let getGameObjectSourceInstanceComponent = GameObject.getGameObjectSourceInstanceComponent;

let addGameObjectSourceInstanceComponent = GameObject.addGameObjectSourceInstanceComponent;

let hasGameObjectMeshRendererComponent = GameObject.hasGameObjectMeshRendererComponent;

let getGameObjectMeshRendererComponent = GameObject.getGameObjectMeshRendererComponent;

let disposeGameObjectMeshRendererComponent = GameObject.disposeGameObjectMeshRendererComponent;

let addGameObjectMeshRendererComponent = GameObject.addGameObjectMeshRendererComponent;