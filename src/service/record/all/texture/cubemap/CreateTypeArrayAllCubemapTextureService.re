open Js.Typed_array;

open BufferCubemapTextureService;

let createTypeArrays = (buffer, cubemapTextureCount) => (
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getWrapSsOffset(cubemapTextureCount),
    ~length=getWrapSsLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getWrapTsOffset(cubemapTextureCount),
    ~length=getWrapTsLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getMagFiltersOffset(cubemapTextureCount),
    ~length=getMagFiltersLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getMinFiltersOffset(cubemapTextureCount),
    ~length=getMinFiltersLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getPXFormatsOffset(cubemapTextureCount),
    ~length=getFormatsLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getNXFormatsOffset(cubemapTextureCount),
    ~length=getFormatsLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getPYFormatsOffset(cubemapTextureCount),
    ~length=getFormatsLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getNYFormatsOffset(cubemapTextureCount),
    ~length=getFormatsLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getPZFormatsOffset(cubemapTextureCount),
    ~length=getFormatsLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getNZFormatsOffset(cubemapTextureCount),
    ~length=getFormatsLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getPXTypesOffset(cubemapTextureCount),
    ~length=getTypesLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getNXTypesOffset(cubemapTextureCount),
    ~length=getTypesLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getPYTypesOffset(cubemapTextureCount),
    ~length=getTypesLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getNYTypesOffset(cubemapTextureCount),
    ~length=getTypesLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getPZTypesOffset(cubemapTextureCount),
    ~length=getTypesLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getNZTypesOffset(cubemapTextureCount),
    ~length=getTypesLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getIsNeedUpdatesOffset(cubemapTextureCount),
    ~length=getIsNeedUpdatesLength(cubemapTextureCount),
  ),
  Uint8Array.fromBufferRange(
    WorkerType.sharedArrayBufferToArrayBuffer(buffer),
    ~offset=getFlipYsOffset(cubemapTextureCount),
    ~length=getFlipYsLength(cubemapTextureCount),
  ),
);