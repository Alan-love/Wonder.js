open StateDataRenderWorkerType;

let createState = () => {
  sceneRecord: RecordRenderWorkerSceneService.create(),
  settingRecord: RecordRenderWorkerSettingService.create(),
  renderConfigRecord: None,
  basicMaterialRecord: None,
  lightMaterialRecord: None,
  meshRendererRecord: None,
  basicSourceTextureRecord: None,
  arrayBufferViewSourceTextureRecord: None,
  cubemapTextureRecord: None,
  allTextureRecord: None,
  directionLightRecord: None,
  pointLightRecord: None,
  transformRecord: None,
  geometryRecord: None,
  sourceInstanceRecord: RecordRenderWorkerSourceInstanceService.create(),
  gpuDetectRecord: {
    extensionInstancedArrays: None,
    extensionElementIndexUint: None,
    precision: None,
    maxTextureUnit: None,
  },
  shaderRecord: RecordAllShaderService.create(),
  glslRecord: RecordAllGLSLService.create(),
  programRecord: RecordAllProgramService.create(),
  glslLocationRecord: RecordAllGLSLLocationService.create(),
  glslSenderRecord: RecordGLSLSenderAllService.create(),
  glslChunkRecord: ShaderChunkSystem.create(),
  deviceManagerRecord: RecordAllDeviceManagerService.create(),
  renderRecord: RecordRenderWorkerRenderService.create(),
  typeArrayPoolRecord: RecordTypeArrayPoolService.create(),
  globalTempRecord: RecordAllGlobalTempService.create(),
  vboBufferRecord: RecordVboBufferService.create(),
  workerDetectRecord: None,
  browserDetectRecord: None,
  apiRecord: RecordAPIRenderWorkerService.create(),
  imguiRecord: WonderImgui.ManageIMGUIAPI.createRecord(),
  customRecord: RecordRenderWorkerCustomService.create(),
  jobDataRecord: RecordAllJobDataService.create(),
};